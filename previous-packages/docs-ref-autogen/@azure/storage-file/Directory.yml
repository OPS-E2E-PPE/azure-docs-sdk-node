### YamlMime:TSType
name: Directory
uid: '@azure/storage-file.Directory'
package: '@azure/storage-file'
summary: Class representing a Directory.
fullName: Directory
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Directory(StorageClientContext)
    uid: '@azure/storage-file.Directory.constructor'
    package: '@azure/storage-file'
    summary: Create a Directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Directory(client: StorageClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/storage-file.StorageClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      create(string, string, string, DirectoryCreateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.create_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, options: DirectoryCreateOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: options
          type: <xref uid="@azure/storage-file.DirectoryCreateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'create(string, string, string, Models.DirectoryCreateOptionalParams)'
    uid: '@azure/storage-file.Directory.create'
    package: '@azure/storage-file'
    summary: Creates a new directory under the specified share or parent directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, options?:
        Models.DirectoryCreateOptionalParams)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: options
          type: <xref uid="Models.DirectoryCreateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryCreateResponse" />&gt;
        description: Promise<Models.DirectoryCreateResponse>
  - name: 'create(string, string, string, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.create_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(DirectoryDeleteMethodOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.deleteMethod_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options: DirectoryDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.DirectoryDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(Models.DirectoryDeleteMethodOptionalParams)
    uid: '@azure/storage-file.Directory.deleteMethod'
    package: '@azure/storage-file'
    summary: >-
      Removes the specified empty directory. Note that the directory must be
      empty before it can be

      deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options?:
        Models.DirectoryDeleteMethodOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.DirectoryDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryDeleteResponse" />&gt;
        description: Promise<Models.DirectoryDeleteResponse>
  - name: deleteMethod(ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.deleteMethod_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      forceCloseHandles(string, DirectoryForceCloseHandlesOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.forceCloseHandles_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, options:
        DirectoryForceCloseHandlesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: handleId
          type: string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: options
          type: >-
            <xref
            uid="@azure/storage-file.DirectoryForceCloseHandlesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'forceCloseHandles(string, Models.DirectoryForceCloseHandlesOptionalParams)'
    uid: '@azure/storage-file.Directory.forceCloseHandles'
    package: '@azure/storage-file'
    summary: Closes all handles open for given directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, options?:
        Models.DirectoryForceCloseHandlesOptionalParams)
      parameters:
        - id: handleId
          type: string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: options
          type: <xref uid="Models.DirectoryForceCloseHandlesOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DirectoryForceCloseHandlesResponse"
          />&gt;
        description: Promise<Models.DirectoryForceCloseHandlesResponse>
  - name: 'forceCloseHandles(string, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.forceCloseHandles_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: handleId
          type: string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getProperties(DirectoryGetPropertiesOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.getProperties_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options: DirectoryGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.DirectoryGetPropertiesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getProperties(Models.DirectoryGetPropertiesOptionalParams)
    uid: '@azure/storage-file.Directory.getProperties'
    package: '@azure/storage-file'
    summary: >-
      Returns all system properties for the specified directory, and can also be
      used to check the

      existence of a directory. The data returned does not include the files in
      the directory or any

      subdirectories.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options?:
        Models.DirectoryGetPropertiesOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.DirectoryGetPropertiesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryGetPropertiesResponse" />&gt;
        description: Promise<Models.DirectoryGetPropertiesResponse>
  - name: getProperties(ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.getProperties_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listFilesAndDirectoriesSegment(DirectoryListFilesAndDirectoriesSegmentOptionalParams,
      ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
    uid: '@azure/storage-file.Directory.listFilesAndDirectoriesSegment_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(options:
        DirectoryListFilesAndDirectoriesSegmentOptionalParams, callback:
        ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/storage-file.DirectoryListFilesAndDirectoriesSegmentOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-file.ListFilesAndDirectoriesSegmentResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      listFilesAndDirectoriesSegment(Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams)
    uid: '@azure/storage-file.Directory.listFilesAndDirectoriesSegment'
    package: '@azure/storage-file'
    summary: >-
      Returns a list of files or directories under the specified share or
      directory. It lists the

      contents only for a single level of the directory hierarchy.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(options?:
        Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DirectoryListFilesAndDirectoriesSegmentResponse" />&gt;
        description: Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>
  - name: >-
      listFilesAndDirectoriesSegment(ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
    uid: '@azure/storage-file.Directory.listFilesAndDirectoriesSegment_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(callback:
        ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-file.ListFilesAndDirectoriesSegmentResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      listHandles(DirectoryListHandlesOptionalParams,
      ServiceCallback<ListHandlesResponse>)
    uid: '@azure/storage-file.Directory.listHandles_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHandles(options: DirectoryListHandlesOptionalParams,
        callback: ServiceCallback<ListHandlesResponse>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.DirectoryListHandlesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-file.ListHandlesResponse" />&gt;
          description: |
            The callback
  - name: listHandles(Models.DirectoryListHandlesOptionalParams)
    uid: '@azure/storage-file.Directory.listHandles'
    package: '@azure/storage-file'
    summary: Lists handles for directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHandles(options?:
        Models.DirectoryListHandlesOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.DirectoryListHandlesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryListHandlesResponse" />&gt;
        description: Promise<Models.DirectoryListHandlesResponse>
  - name: listHandles(ServiceCallback<ListHandlesResponse>)
    uid: '@azure/storage-file.Directory.listHandles_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listHandles(callback: ServiceCallback<ListHandlesResponse>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-file.ListHandlesResponse" />&gt;
          description: |
            The callback
  - name: 'setMetadata(DirectorySetMetadataOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.setMetadata_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options: DirectorySetMetadataOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.DirectorySetMetadataOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setMetadata(Models.DirectorySetMetadataOptionalParams)
    uid: '@azure/storage-file.Directory.setMetadata'
    package: '@azure/storage-file'
    summary: Updates user defined metadata for the specified directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options?:
        Models.DirectorySetMetadataOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.DirectorySetMetadataOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectorySetMetadataResponse" />&gt;
        description: Promise<Models.DirectorySetMetadataResponse>
  - name: setMetadata(ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.setMetadata_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      setProperties(string, string, string,
      DirectorySetPropertiesOptionalParams, ServiceCallback<void>)
    uid: '@azure/storage-file.Directory.setProperties_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, options:
        DirectorySetPropertiesOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: options
          type: >-
            <xref uid="@azure/storage-file.DirectorySetPropertiesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      setProperties(string, string, string,
      Models.DirectorySetPropertiesOptionalParams)
    uid: '@azure/storage-file.Directory.setProperties'
    package: '@azure/storage-file'
    summary: Sets properties on the directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, options?:
        Models.DirectorySetPropertiesOptionalParams)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: options
          type: <xref uid="Models.DirectorySetPropertiesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectorySetPropertiesResponse" />&gt;
        description: Promise<Models.DirectorySetPropertiesResponse>
  - name: 'setProperties(string, string, string, ServiceCallback<void>)'
    uid: '@azure/storage-file.Directory.setProperties_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreationTime: string,
        fileLastWriteTime: string, callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type: string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreationTime
          type: string
          description: Creation time for the file/directory.
        - id: fileLastWriteTime
          type: string
          description: Last write time for the file/directory.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
