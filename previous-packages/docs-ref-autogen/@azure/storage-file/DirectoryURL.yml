### YamlMime:TSType
name: DirectoryURL
uid: '@azure/storage-file.DirectoryURL'
package: '@azure/storage-file'
summary: >-
  A DirectoryURL represents a URL to the Azure Storage directory allowing you to
  manipulate its files and directories.
fullName: DirectoryURL
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'DirectoryURL(string, Pipeline)'
    uid: '@azure/storage-file.DirectoryURL.constructor'
    package: '@azure/storage-file'
    summary: Creates an instance of DirectoryURL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DirectoryURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file directory, such as
                                "https://myaccount.file.core.windows.net/myshare/mydirectory". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.file.core.windows.net/myshare/mydirectory?sasString".
                                This method accepts an encoded URL or non-encoded URL pointing to a directory.
                                Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.
                                However, if a directory name includes %, directory name must be encoded in the URL.
                                Such as a directory named "mydir%", the URL should be "https://myaccount.file.core.windows.net/myshare/mydir%25".
        - id: pipeline
          type: <xref uid="@azure/storage-file.Pipeline" />
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
properties:
  - name: pipeline
    uid: '@azure/storage-file.DirectoryURL.pipeline'
    package: '@azure/storage-file'
    summary: Request policy pipeline.
    fullName: pipeline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pipeline: Pipeline'
      return:
        type: <xref uid="@azure/storage-file.Pipeline" />
        description: ''
  - name: url
    uid: '@azure/storage-file.DirectoryURL.url'
    package: '@azure/storage-file'
    summary: URL string value.
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        type: string
        description: ''
methods:
  - name: 'create(Aborter, IDirectoryCreateOptions)'
    uid: '@azure/storage-file.DirectoryURL.create'
    package: '@azure/storage-file'
    summary: Creates a new directory under the specified share or parent directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(aborter: Aborter, options?: IDirectoryCreateOptions)'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type: <xref uid="@azure/storage-file.IDirectoryCreateOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryCreateResponse" />&gt;
        description: ''
  - name: delete(Aborter)
    uid: '@azure/storage-file.DirectoryURL.delete'
    package: '@azure/storage-file'
    summary: >-
      Removes the specified empty directory. Note that the directory must be
      empty before it can be

      deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(aborter: Aborter)'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type: Promise&lt;<xref uid="Models.DirectoryDeleteResponse" />&gt;
        description: ''
  - name: 'forceCloseHandle(Aborter, string)'
    uid: '@azure/storage-file.DirectoryURL.forceCloseHandle'
    package: '@azure/storage-file'
    summary: Force close a specific handle for a directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function forceCloseHandle(aborter: Aborter, handleId: string)'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: handleId
          type: string
          description: |-
            Specific handle ID, cannot be asterisk "*".
                                     Use forceCloseHandlesSegment() to close all handles.
      return:
        type: >-
          Promise&lt;<xref uid="Models.DirectoryForceCloseHandlesResponse"
          />&gt;
        description: ''
  - name: >-
      forceCloseHandlesSegment(Aborter, undefined | string,
      IDirectoryForceCloseHandlesSegmentOptions)
    uid: '@azure/storage-file.DirectoryURL.forceCloseHandlesSegment'
    package: '@azure/storage-file'
    summary: Force close all handles for a directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceCloseHandlesSegment(aborter: Aborter, marker?: undefined |
        string, options?: IDirectoryForceCloseHandlesSegmentOptions)
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type: undefined | string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/storage-file.IDirectoryForceCloseHandlesSegmentOptions"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DirectoryForceCloseHandlesResponse"
          />&gt;
        description: ''
  - name: 'fromDirectoryURL(DirectoryURL, string)'
    uid: '@azure/storage-file.DirectoryURL.fromDirectoryURL'
    package: '@azure/storage-file'
    summary: Creates a DirectoryURL object from an existing DirectoryURL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromDirectoryURL(directoryURL: DirectoryURL,
        directoryName: string)
      parameters:
        - id: directoryURL
          type: <xref uid="@azure/storage-file.DirectoryURL" />
          description: A DirectoryURL object
        - id: directoryName
          type: string
          description: |
            A subdirectory name
      return:
        type: <xref uid="@azure/storage-file.DirectoryURL" />
        description: ''
  - name: 'fromShareURL(ShareURL, string)'
    uid: '@azure/storage-file.DirectoryURL.fromShareURL'
    package: '@azure/storage-file'
    summary: Creates a DirectoryURL object from ShareURL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function fromShareURL(shareURL: ShareURL, directoryName: string)'
      parameters:
        - id: shareURL
          type: <xref uid="@azure/storage-file.ShareURL" />
          description: A ShareURL object
        - id: directoryName
          type: string
          description: |
            A directory name
      return:
        type: <xref uid="@azure/storage-file.DirectoryURL" />
        description: ''
  - name: getProperties(Aborter)
    uid: '@azure/storage-file.DirectoryURL.getProperties'
    package: '@azure/storage-file'
    summary: >-
      Returns all system properties for the specified directory, and can also be
      used to check the

      existence of a directory. The data returned does not include the files in
      the directory or any

      subdirectories.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(aborter: Aborter)'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type: Promise&lt;<xref uid="Models.DirectoryGetPropertiesResponse" />&gt;
        description: ''
  - name: >-
      listFilesAndDirectoriesSegment(Aborter, undefined | string,
      IDirectoryListFilesAndDirectoriesSegmentOptions)
    uid: '@azure/storage-file.DirectoryURL.listFilesAndDirectoriesSegment'
    package: '@azure/storage-file'
    summary: >-
      Returns a list of files or directories under the specified share or
      directory. It lists the

      contents only for a single level of the directory hierarchy.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(aborter: Aborter, marker?:
        undefined | string, options?:
        IDirectoryListFilesAndDirectoriesSegmentOptions)
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type: undefined | string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/storage-file.IDirectoryListFilesAndDirectoriesSegmentOptions"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DirectoryListFilesAndDirectoriesSegmentResponse" />&gt;
        description: ''
  - name: >-
      listHandlesSegment(Aborter, undefined | string,
      IDirectoryListHandlesSegmentOptions)
    uid: '@azure/storage-file.DirectoryURL.listHandlesSegment'
    package: '@azure/storage-file'
    summary: Lists handles for a directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHandlesSegment(aborter: Aborter, marker?: undefined |
        string, options?: IDirectoryListHandlesSegmentOptions)
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type: undefined | string
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/storage-file.IDirectoryListHandlesSegmentOptions"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectoryListHandlesResponse" />&gt;
        description: ''
  - name: 'newPipeline(Credential, INewPipelineOptions)'
    uid: '@azure/storage-file.DirectoryURL.newPipeline'
    package: '@azure/storage-file'
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type: <xref uid="@azure/storage-file.Credential" />
          description: 'Such as AnonymousCredential, SharedKeyCredential.'
        - id: pipelineOptions
          type: <xref uid="@azure/storage-file.INewPipelineOptions" />
          description: ''
      return:
        type: <xref uid="@azure/storage-file.Pipeline" />
        description: A new Pipeline object.
  - name: 'setMetadata(Aborter, IMetadata)'
    uid: '@azure/storage-file.DirectoryURL.setMetadata'
    package: '@azure/storage-file'
    summary: Updates user defined metadata for the specified directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMetadata(aborter: Aborter, metadata?: IMetadata)'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: metadata
          type: <xref uid="@azure/storage-file.IMetadata" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectorySetMetadataResponse" />&gt;
        description: ''
  - name: 'setProperties(Aborter, IDirectoryProperties)'
    uid: '@azure/storage-file.DirectoryURL.setProperties'
    package: '@azure/storage-file'
    summary: Sets properties on the directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(aborter: Aborter, properties?:
        IDirectoryProperties)
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: properties
          type: <xref uid="@azure/storage-file.IDirectoryProperties" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DirectorySetPropertiesResponse" />&gt;
        description: ''
  - name: withPipeline(Pipeline)
    uid: '@azure/storage-file.DirectoryURL.withPipeline'
    package: '@azure/storage-file'
    summary: |-
      Creates a new DirectoryURL object identical to the source but with the
      specified request policy pipeline.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type: <xref uid="@azure/storage-file.Pipeline" />
          description: ''
      return:
        type: <xref uid="@azure/storage-file.DirectoryURL" />
        description: ''
extends: <xref uid="@azure/storage-file.StorageURL" />
