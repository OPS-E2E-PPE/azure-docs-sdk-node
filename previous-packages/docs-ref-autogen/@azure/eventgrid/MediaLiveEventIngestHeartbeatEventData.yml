### YamlMime:TSType
name: MediaLiveEventIngestHeartbeatEventData
uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData'
package: '@azure/eventgrid'
summary: Ingest fragment dropped event data.
fullName: MediaLiveEventIngestHeartbeatEventData
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: bitrate
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.bitrate'
    package: '@azure/eventgrid'
    summary: >-
      Gets the bitrate of the track.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: bitrate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bitrate?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: discontinuityCount
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.discontinuityCount'
    package: '@azure/eventgrid'
    summary: >-
      Gets the fragment Discontinuity count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: discontinuityCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'discontinuityCount?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: healthy
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.healthy'
    package: '@azure/eventgrid'
    summary: >-
      Gets a value indicating whether preview is healthy or not.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: healthy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'healthy?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: incomingBitrate
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.incomingBitrate'
    package: '@azure/eventgrid'
    summary: >-
      Gets the incoming bitrate.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: incomingBitrate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'incomingBitrate?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: lastTimestamp
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.lastTimestamp'
    package: '@azure/eventgrid'
    summary: >-
      Gets the last timestamp.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: lastTimestamp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lastTimestamp?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: nonincreasingCount
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.nonincreasingCount'
    package: '@azure/eventgrid'
    summary: >-
      Gets Non increasing count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: nonincreasingCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nonincreasingCount?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: overlapCount
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.overlapCount'
    package: '@azure/eventgrid'
    summary: >-
      Gets the fragment Overlap count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: overlapCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'overlapCount?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: state
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.state'
    package: '@azure/eventgrid'
    summary: >-
      Gets the state of the live event.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: timescale
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.timescale'
    package: '@azure/eventgrid'
    summary: >-
      Gets the timescale of the last timestamp.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: timescale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timescale?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: trackName
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.trackName'
    package: '@azure/eventgrid'
    summary: >-
      Gets the track name.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: trackName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'trackName?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: trackType
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.trackType'
    package: '@azure/eventgrid'
    summary: >-
      Gets the type of the track (Audio / Video).

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: trackType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'trackType?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: unexpectedBitrate
    uid: '@azure/eventgrid.MediaLiveEventIngestHeartbeatEventData.unexpectedBitrate'
    package: '@azure/eventgrid'
    summary: >-
      Gets a value indicating whether unexpected bitrate is present or not.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: unexpectedBitrate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unexpectedBitrate?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
