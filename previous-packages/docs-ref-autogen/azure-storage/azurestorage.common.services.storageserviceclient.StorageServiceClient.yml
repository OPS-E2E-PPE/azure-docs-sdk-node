### YamlMime:TSType
name: StorageServiceClient
uid: >-
  azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
package: azure-storage
summary: ''
fullName: StorageServiceClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'StorageServiceClient(string, string, StorageHost, boolean, string)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.constructor
    package: azure-storage
    summary: Creates a new StorageServiceClient object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new StorageServiceClient(storageAccount?: string, storageAccessKey?:
        string, host?: StorageHost, usePathStyleUri?: boolean, sasToken?:
        string)
      parameters:
        - id: storageAccount
          type: string
          description: The storage account.
        - id: storageAccessKey
          type: string
          description: The storage access key.
        - id: host
          type: <xref uid="azure-storage.azurestorage.StorageHost" />
          description: The host for the service.
        - id: usePathStyleUri
          type: boolean
          description: Boolean value indicating wether to use path style uris.
        - id: sasToken
          type: string
          description: |
            The Shared Access Signature token.
properties:
  - name: captureRejections
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.captureRejections
    package: azure-storage
    summary: Sets or gets the default captureRejection value for all emitters.
    fullName: captureRejections
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejections: boolean'
      return:
        type: boolean
        description: ''
  - name: captureRejectionSymbol
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.captureRejectionSymbol
    package: azure-storage
    summary: ''
    fullName: captureRejectionSymbol
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejectionSymbol: Object'
      return:
        type: Object
        description: ''
  - name: defaultClientRequestTimeoutInMs
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.defaultClientRequestTimeoutInMs
    package: azure-storage
    summary: >-
      The default timeout of client requests, in milliseconds, to use for the
      request.
    fullName: defaultClientRequestTimeoutInMs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultClientRequestTimeoutInMs: number'
      return:
        type: number
        description: ''
  - name: defaultLocationMode
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.defaultLocationMode
    package: azure-storage
    summary: The default location mode for requests made via the service.
    fullName: defaultLocationMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultLocationMode: LocationMode'
      return:
        type: >-
          <xref
          uid="azure-storage.azurestorage.common.util.storageutilities.LocationMode"
          />
        description: ''
  - name: defaultMaximumExecutionTimeInMs
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.defaultMaximumExecutionTimeInMs
    package: azure-storage
    summary: >-
      The default maximum execution time across all potential retries, for
      requests made via the service.
    fullName: defaultMaximumExecutionTimeInMs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultMaximumExecutionTimeInMs: number'
      return:
        type: number
        description: ''
  - name: defaultMaxListeners
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.defaultMaxListeners
    package: azure-storage
    summary: ''
    fullName: defaultMaxListeners
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type: number
        description: ''
  - name: defaultTimeoutIntervalInMs
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.defaultTimeoutIntervalInMs
    package: azure-storage
    summary: >-
      The default timeout interval, in milliseconds, to use for request made via
      the service.
    fullName: defaultTimeoutIntervalInMs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultTimeoutIntervalInMs: number'
      return:
        type: number
        description: ''
  - name: enableGlobalHttpAgent
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.enableGlobalHttpAgent
    package: azure-storage
    summary: >-
      Determines whether global HTTP(s) agent is enabled; true to use Global
      HTTP(s) agent; otherwise, false to use

      http(s).Agent({keepAlive:true}).
    fullName: enableGlobalHttpAgent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableGlobalHttpAgent: boolean'
      return:
        type: boolean
        description: ''
  - name: errorMonitor
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.errorMonitor
    package: azure-storage
    summary: >
      This symbol shall be used to install a listener for only monitoring
      `'error'`

      events. Listeners installed using this symbol are called before the
      regular

      `'error'` listeners are called.

      Installing a listener using this symbol does not change the behavior once
      an

      `'error'` event is emitted, therefore the process will still crash if no

      regular `'error'` listener is installed.
    fullName: errorMonitor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static errorMonitor: Object'
      return:
        type: Object
        description: ''
  - name: logger
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.logger
    package: azure-storage
    summary: The logging settings object.
    fullName: logger
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'logger: Logger'
      return:
        type: >-
          <xref
          uid="azure-storage.azurestorage.common.diagnostics.logger.Logger" />
        description: ''
  - name: proxy
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.proxy
    package: azure-storage
    summary: The proxy object specified by caller.
    fullName: proxy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'proxy: Proxy'
      return:
        type: >-
          <xref
          uid="azure-storage.azurestorage.common.services.storageserviceclient.Proxy"
          />
        description: ''
  - name: useNagleAlgorithm
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.useNagleAlgorithm
    package: azure-storage
    summary: >-
      Determines whether the Nagle algorithm is used for requests made via the
      Queue service; true to use the

      Nagle algorithm; otherwise, false. The default value is false.
    fullName: useNagleAlgorithm
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useNagleAlgorithm: boolean'
      return:
        type: boolean
        description: ''
methods:
  - name: 'addListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.addListener
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'emit(string | symbol, any[])'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.emit
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: eventNames()
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.eventNames
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function eventNames()
      return:
        type: Array&lt;string | symbol&gt;
        description: ''
  - name: getMaxListeners()
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.getMaxListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMaxListeners()
      return:
        type: number
        description: ''
  - name: 'listenerCount(EventEmitter, string | symbol)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.listenerCount
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: since v4.0.0
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listenerCount(string | symbol)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.listenerCount
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listenerCount(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listeners(string | symbol)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.listeners
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: 'off(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.off
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on(EventEmitter, string)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.on
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function on(emitter: EventEmitter, event: string)'
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string
          description: ''
      return:
        type: AsyncIterableIterator&lt;any&gt;
        description: ''
  - name: 'on(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.on
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once(NodeEventTarget, string | symbol)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.once
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function once(emitter: NodeEventTarget, event: string | symbol)'
      parameters:
        - id: emitter
          type: NodeEventTarget
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Promise&lt;any[]&gt;'
        description: ''
  - name: 'once(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.once
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.prependListener
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.prependOnceListener
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: rawListeners(string | symbol)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.rawListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: removeAllListeners(string | symbol)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.removeAllListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.removeListener
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: setMaxListeners(number)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.setMaxListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
      return:
        type: this
        description: ''
  - name: setProxy(Proxy)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.setProxy
    package: azure-storage
    summary: Sets proxy object specified by caller.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setProxy(proxy: Proxy)'
      parameters:
        - id: proxy
          type: >-
            <xref
            uid="azure-storage.azurestorage.common.services.storageserviceclient.Proxy"
            />
          description: |
            proxy to use for tunneling
                                                   {
                                                    host: hostname
                                                    port: port number
                                                    proxyAuth: 'user:password' for basic auth
                                                    headers: {...} headers for proxy server
                                                    key: key for proxy server
                                                    ca: ca for proxy server
                                                    cert: cert for proxy server
                                                   }
                                                   if null or undefined, clears proxy
  - name: withFilter(IFilter)
    uid: >-
      azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient.withFilter
    package: azure-storage
    summary: >
      Associate a filtering operation with this StorageServiceClient. Filtering
      operations

      can include logging, automatically retrying, etc. Filter operations are
      objects

      that implement a method with the signature:
          "function handle (requestOptions, next)".

      After doing its preprocessing on the request options, the method needs to
      call

      "next" passing a callback with the following signature:

      signature:

          "function (returnObject, finalCallback, next)"

      In this callback, and after processing the returnObject (the response from
      the

      request to the server), the callback needs to either invoke next if it
      exists to

      continue processing other filters or simply invoke finalCallback otherwise
      to end

      up the service invocation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withFilter(newFilter: IFilter)'
      parameters:
        - id: newFilter
          type: <xref uid="azure-storage.azurestorage.common.filters.IFilter" />
          description: ''
      return:
        type: >-
          <xref
          uid="azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient"
          />
        description: A new service client with the filter applied.
extends: EventEmitter
