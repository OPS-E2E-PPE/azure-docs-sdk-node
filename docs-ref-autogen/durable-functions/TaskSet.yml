### YamlMime:UniversalReference
items:
  - uid: durable-functions.TaskSet
    name: TaskSet
    fullName: TaskSet
    children:
      - durable-functions.TaskSet.exception
      - durable-functions.TaskSet.isCompleted
      - durable-functions.TaskSet.isFaulted
      - durable-functions.TaskSet.result
      - durable-functions.TaskSet.constructor
      - durable-functions.TaskSet.yieldNewActions
    langs:
      - typeScript
    type: class
    summary: ''
    package: durable-functions
  - uid: durable-functions.TaskSet.exception
    name: exception
    fullName: exception
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exception?: Error | undefined'
      return:
        type:
          - Error | undefined
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskSet.isCompleted
    name: isCompleted
    fullName: isCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isCompleted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskSet.isFaulted
    name: isFaulted
    fullName: isFaulted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isFaulted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskSet.result
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'result?: unknown'
      return:
        type:
          - unknown
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskSet.constructor
    name: >-
      TaskSet(boolean, boolean, TaskBase[], number | undefined, unknown, Error |
      undefined)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new TaskSet(isCompleted: boolean, isFaulted: boolean, tasks: TaskBase[],
        completionIndex?: number | undefined, result?: unknown, exception?:
        Error | undefined)
      parameters:
        - id: isCompleted
          type:
            - boolean
          description: ''
        - id: isFaulted
          type:
            - boolean
          description: ''
        - id: tasks
          type:
            - 'durable-functions.TaskBase[]'
          description: ''
        - id: completionIndex
          type:
            - number | undefined
          description: ''
          optional: true
        - id: result
          type:
            - unknown
          description: ''
          optional: true
        - id: exception
          type:
            - Error | undefined
          description: ''
          optional: true
    package: durable-functions
  - uid: durable-functions.TaskSet.yieldNewActions
    name: yieldNewActions()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function yieldNewActions()
      parameters: []
      return:
        type:
          - 'durable-functions.IAction[]'
        description: ''
    package: durable-functions
references:
  - uid: 'durable-functions.TaskBase[]'
    name: 'TaskBase[]'
    spec.typeScript:
      - name: TaskBase
        fullName: TaskBase
        uid: durable-functions.TaskBase
      - name: '[]'
        fullName: '[]'
  - uid: 'durable-functions.IAction[]'
    name: 'IAction[]'
    spec.typeScript:
      - name: IAction
        fullName: IAction
        uid: durable-functions.IAction
      - name: '[]'
        fullName: '[]'
