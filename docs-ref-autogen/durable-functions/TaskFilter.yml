### YamlMime:UniversalReference
items:
  - uid: durable-functions.TaskFilter
    name: TaskFilter
    fullName: TaskFilter
    children:
      - durable-functions.TaskFilter.CompareFinishedTime
      - durable-functions.TaskFilter.isCompletedTask
      - durable-functions.TaskFilter.isFailedTask
      - durable-functions.TaskFilter.isSingleTask
      - durable-functions.TaskFilter.isSuccessfulTask
      - durable-functions.TaskFilter.isTaskSet
      - durable-functions.TaskFilter.isUncompletedTask
      - durable-functions.TaskFilter.isYieldable
    langs:
      - typeScript
    type: class
    summary: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.CompareFinishedTime
    name: 'CompareFinishedTime(CompletedTask, CompletedTask)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function CompareFinishedTime(taskA: CompletedTask, taskB:
        CompletedTask)
      parameters:
        - id: taskA
          type:
            - durable-functions.CompletedTask
          description: ''
        - id: taskB
          type:
            - durable-functions.CompletedTask
          description: ''
      return:
        type:
          - 1 | 0 | -1
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isCompletedTask
    name: isCompletedTask(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isCompletedTask(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isFailedTask
    name: isFailedTask(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isFailedTask(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isSingleTask
    name: isSingleTask(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isSingleTask(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isSuccessfulTask
    name: isSuccessfulTask(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isSuccessfulTask(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isTaskSet
    name: isTaskSet(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isTaskSet(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isUncompletedTask
    name: isUncompletedTask(TaskBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isUncompletedTask(task: TaskBase)'
      parameters:
        - id: task
          type:
            - durable-functions.TaskBase
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.TaskFilter.isYieldable
    name: isYieldable(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isYieldable(task: any)'
      parameters:
        - id: task
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
references:
  - uid: durable-functions.CompletedTask
    name: CompletedTask
    spec.typeScript:
      - name: CompletedTask
        fullName: CompletedTask
        uid: durable-functions.CompletedTask
  - uid: durable-functions.TaskBase
    name: TaskBase
    spec.typeScript:
      - name: TaskBase
        fullName: TaskBase
        uid: durable-functions.TaskBase
