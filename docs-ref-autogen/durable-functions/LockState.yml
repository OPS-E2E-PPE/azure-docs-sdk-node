### YamlMime:UniversalReference
items:
  - uid: durable-functions.LockState
    name: LockState
    fullName: LockState
    children:
      - durable-functions.LockState.isLocked
      - durable-functions.LockState.constructor
      - durable-functions.LockState.ownedLocks
    langs:
      - typeScript
    type: class
    summary: ''
    package: durable-functions
  - uid: durable-functions.LockState.isLocked
    name: isLocked
    fullName: isLocked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isLocked: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.LockState.constructor
    name: 'LockState(boolean, EntityId[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new LockState(isLocked: boolean, ownedLocks: EntityId[])'
      parameters:
        - id: isLocked
          type:
            - boolean
          description: ''
        - id: ownedLocks
          type:
            - 'durable-functions.EntityId[]'
          description: ''
    package: durable-functions
  - uid: durable-functions.LockState.ownedLocks
    name: ownedLocks
    fullName: ownedLocks
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ownedLocks: EntityId[]'
      return:
        type:
          - 'durable-functions.EntityId[]'
        description: ''
    package: durable-functions
references:
  - uid: 'durable-functions.EntityId[]'
    name: 'EntityId[]'
    spec.typeScript:
      - name: EntityId
        fullName: EntityId
        uid: durable-functions.EntityId
      - name: '[]'
        fullName: '[]'
