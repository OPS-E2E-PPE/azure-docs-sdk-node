### YamlMime:UniversalReference
items:
  - uid: durable-functions.IEntityFunctionContext
    name: IEntityFunctionContext
    fullName: IEntityFunctionContext
    children:
      - durable-functions.IEntityFunctionContext.bindingData
      - durable-functions.IEntityFunctionContext.bindingDefinitions
      - durable-functions.IEntityFunctionContext.bindings
      - durable-functions.IEntityFunctionContext.df
      - durable-functions.IEntityFunctionContext.done
      - durable-functions.IEntityFunctionContext.executionContext
      - durable-functions.IEntityFunctionContext.invocationId
      - durable-functions.IEntityFunctionContext.log
      - durable-functions.IEntityFunctionContext.req
      - durable-functions.IEntityFunctionContext.res
      - durable-functions.IEntityFunctionContext.traceContext
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Context
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.bindingData
    name: bindingData
    fullName: bindingData
    children: []
    langs:
      - typeScript
    type: property
    summary: Trigger metadata and function invocation data.
    syntax:
      content: 'bindingData: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.bindingDefinitions
    name: bindingDefinitions
    fullName: bindingDefinitions
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Bindings your function uses, as defined in function.json.'
    syntax:
      content: 'bindingDefinitions: BindingDefinition[]'
      return:
        type:
          - 'BindingDefinition[]'
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.bindings
    name: bindings
    fullName: bindings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Input and trigger binding data, as defined in function.json. Properties on
      this object are dynamically

      generated and named based off of the "name" property in function.json.
    syntax:
      content: 'bindings: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.df
    name: df
    fullName: df
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'df: DurableEntityContext'
      return:
        type:
          - durable-functions.DurableEntityContext
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.done
    name: 'done(Error | string | null, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A callback function that signals to the runtime that your code has
      completed. If your function is synchronous,

      you must call context.done at the end of execution. If your function is
      asynchronous, you should not use this

      callback.
    syntax:
      content: 'function done(err?: Error | string | null, result?: any)'
      parameters:
        - id: err
          type:
            - Error | string | null
          description: >-
            A user-defined error to pass back to the runtime. If present, your
            function execution will fail.
          optional: true
        - id: result
          type:
            - any
          description: >
            An object containing output binding data. `result` will be passed to
            JSON.stringify unless it is
             a string, Buffer, ArrayBufferView, or number.
          optional: true
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.executionContext
    name: executionContext
    fullName: executionContext
    children: []
    langs:
      - typeScript
    type: property
    summary: Function execution metadata.
    syntax:
      content: 'executionContext: ExecutionContext'
      return:
        type:
          - ExecutionContext
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.invocationId
    name: invocationId
    fullName: invocationId
    children: []
    langs:
      - typeScript
    type: property
    summary: A unique GUID per function invocation.
    syntax:
      content: 'invocationId: string'
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.log
    name: log
    fullName: log
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Allows you to write streaming function logs. Calling directly allows you
      to write streaming function logs

      at the default trace level.
    syntax:
      content: 'log: Logger'
      return:
        type:
          - Logger
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.req
    name: req
    fullName: req
    children: []
    langs:
      - typeScript
    type: property
    summary: HTTP request object. Provided to your function when using HTTP Bindings.
    optional: true
    syntax:
      content: 'req?: HttpRequest'
      return:
        type:
          - HttpRequest
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.res
    name: res
    fullName: res
    children: []
    langs:
      - typeScript
    type: property
    summary: HTTP response object. Provided to your function when using HTTP Bindings.
    optional: true
    syntax:
      content: 'res?: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
        description: ''
    package: durable-functions
  - uid: durable-functions.IEntityFunctionContext.traceContext
    name: traceContext
    fullName: traceContext
    children: []
    langs:
      - typeScript
    type: property
    summary: TraceContext information to enable distributed tracing scenarios.
    syntax:
      content: 'traceContext: TraceContext'
      return:
        type:
          - TraceContext
        description: ''
    package: durable-functions
references:
  - uid: durable-functions.DurableEntityContext
    name: DurableEntityContext
    spec.typeScript:
      - name: DurableEntityContext
        fullName: DurableEntityContext
        uid: durable-functions.DurableEntityContext
