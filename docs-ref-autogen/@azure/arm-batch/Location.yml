### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-batch.Location'
    name: Location
    fullName: Location
    children:
      - '@azure/arm-batch.Location.checkNameAvailability'
      - '@azure/arm-batch.Location.checkNameAvailability_2'
      - '@azure/arm-batch.Location.checkNameAvailability_1'
      - '@azure/arm-batch.Location.getQuotas'
      - '@azure/arm-batch.Location.getQuotas_2'
      - '@azure/arm-batch.Location.getQuotas_1'
      - '@azure/arm-batch.Location.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Location.
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.checkNameAvailability'
    name: 'checkNameAvailability(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the Batch account name is available in the specified
      region.
    syntax:
      content: >-
        function checkNameAvailability(locationName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type:
            - string
          description: The desired region for the name check.
        - id: name
          type:
            - string
          description: The name to check for availability
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LocationCheckNameAvailabilityResponse>
        description: Promise<Models.LocationCheckNameAvailabilityResponse>
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, string, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(locationName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: locationName
          type:
            - string
          description: The desired region for the name check.
        - id: name
          type:
            - string
          description: The name to check for availability
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-batch.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string, string,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(locationName: string, name: string,
        callback: ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: locationName
          type:
            - string
          description: The desired region for the name check.
        - id: name
          type:
            - string
          description: The name to check for availability
        - id: callback
          type:
            - ServiceCallback<@azure/arm-batch.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.getQuotas'
    name: 'getQuotas(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Batch service quotas for the specified subscription at the given
      location.
    syntax:
      content: >-
        function getQuotas(locationName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type:
            - string
          description: The region for which to retrieve Batch service quotas.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LocationGetQuotasResponse>
        description: Promise<Models.LocationGetQuotasResponse>
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.getQuotas_2'
    name: 'getQuotas(string, RequestOptionsBase, ServiceCallback<BatchLocationQuota>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getQuotas(locationName: string, options: RequestOptionsBase,
        callback: ServiceCallback<BatchLocationQuota>)
      parameters:
        - id: locationName
          type:
            - string
          description: The region for which to retrieve Batch service quotas.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-batch.BatchLocationQuota>
          description: |
            The callback
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.getQuotas_1'
    name: 'getQuotas(string, ServiceCallback<BatchLocationQuota>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getQuotas(locationName: string, callback:
        ServiceCallback<BatchLocationQuota>)
      parameters:
        - id: locationName
          type:
            - string
          description: The region for which to retrieve Batch service quotas.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-batch.BatchLocationQuota>
          description: |
            The callback
    package: '@azure/arm-batch'
  - uid: '@azure/arm-batch.Location.constructor'
    name: Location(BatchManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Location.
    syntax:
      content: 'new Location(client: BatchManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-batch.BatchManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-batch'
references:
  - uid: '@azure/arm-batch.BatchManagementClientContext'
    name: BatchManagementClientContext
    spec.typeScript:
      - name: BatchManagementClientContext
        fullName: BatchManagementClientContext
        uid: '@azure/arm-batch.BatchManagementClientContext'
  - uid: ServiceCallback<@azure/arm-batch.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-batch.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-batch.BatchLocationQuota>
    name: BatchLocationQuota>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BatchLocationQuota
        fullName: BatchLocationQuota
        uid: '@azure/arm-batch.BatchLocationQuota'
      - name: '>'
        fullName: '>'
