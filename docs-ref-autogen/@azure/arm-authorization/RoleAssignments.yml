### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-authorization.RoleAssignments'
    name: RoleAssignments
    fullName: RoleAssignments
    children:
      - '@azure/arm-authorization.RoleAssignments.create'
      - '@azure/arm-authorization.RoleAssignments.create_2'
      - '@azure/arm-authorization.RoleAssignments.create_1'
      - '@azure/arm-authorization.RoleAssignments.createById'
      - '@azure/arm-authorization.RoleAssignments.createById_2'
      - '@azure/arm-authorization.RoleAssignments.createById_1'
      - '@azure/arm-authorization.RoleAssignments.deleteById'
      - '@azure/arm-authorization.RoleAssignments.deleteById_2'
      - '@azure/arm-authorization.RoleAssignments.deleteById_1'
      - '@azure/arm-authorization.RoleAssignments.deleteMethod'
      - '@azure/arm-authorization.RoleAssignments.deleteMethod_2'
      - '@azure/arm-authorization.RoleAssignments.deleteMethod_1'
      - '@azure/arm-authorization.RoleAssignments.get'
      - '@azure/arm-authorization.RoleAssignments.get_2'
      - '@azure/arm-authorization.RoleAssignments.get_1'
      - '@azure/arm-authorization.RoleAssignments.getById'
      - '@azure/arm-authorization.RoleAssignments.getById_2'
      - '@azure/arm-authorization.RoleAssignments.getById_1'
      - '@azure/arm-authorization.RoleAssignments.list'
      - '@azure/arm-authorization.RoleAssignments.list_2'
      - '@azure/arm-authorization.RoleAssignments.list_1'
      - '@azure/arm-authorization.RoleAssignments.listForResource'
      - '@azure/arm-authorization.RoleAssignments.listForResource_2'
      - '@azure/arm-authorization.RoleAssignments.listForResource_1'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroup'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroup_2'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroup_1'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_2'
      - '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_1'
      - '@azure/arm-authorization.RoleAssignments.listForResourceNext'
      - '@azure/arm-authorization.RoleAssignments.listForResourceNext_2'
      - '@azure/arm-authorization.RoleAssignments.listForResourceNext_1'
      - '@azure/arm-authorization.RoleAssignments.listForScope'
      - '@azure/arm-authorization.RoleAssignments.listForScope_2'
      - '@azure/arm-authorization.RoleAssignments.listForScope_1'
      - '@azure/arm-authorization.RoleAssignments.listForScopeNext'
      - '@azure/arm-authorization.RoleAssignments.listForScopeNext_2'
      - '@azure/arm-authorization.RoleAssignments.listForScopeNext_1'
      - '@azure/arm-authorization.RoleAssignments.listNext'
      - '@azure/arm-authorization.RoleAssignments.listNext_2'
      - '@azure/arm-authorization.RoleAssignments.listNext_1'
      - '@azure/arm-authorization.RoleAssignments.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a RoleAssignments.
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.create'
    name: >-
      create(string, string, RoleAssignmentCreateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a role assignment.
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsCreateResponse>
        description: Promise<Models.RoleAssignmentsCreateResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.create_2'
    name: >-
      create(string, string, RoleAssignmentCreateParameters, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.create_1'
    name: >-
      create(string, string, RoleAssignmentCreateParameters,
      ServiceCallback<RoleAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.createById'
    name: >-
      createById(string, RoleAssignmentCreateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a role assignment by ID.
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to create.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsCreateByIdResponse>
        description: Promise<Models.RoleAssignmentsCreateByIdResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.createById_2'
    name: >-
      createById(string, RoleAssignmentCreateParameters, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to create.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.createById_1'
    name: >-
      createById(string, RoleAssignmentCreateParameters,
      ServiceCallback<RoleAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to create.
        - id: parameters
          type:
            - '@azure/arm-authorization.RoleAssignmentCreateParameters'
          description: Parameters for the role assignment.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteById'
    name: 'deleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a role assignment.
    syntax:
      content: 'function deleteById(roleId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to delete.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsDeleteByIdResponse>
        description: Promise<Models.RoleAssignmentsDeleteByIdResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteById_2'
    name: 'deleteById(string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteById(roleId: string, options: RequestOptionsBase,
        callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to delete.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteById_1'
    name: 'deleteById(string, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteById(roleId: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to delete.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a role assignment.
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to delete.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsDeleteMethodResponse>
        description: Promise<Models.RoleAssignmentsDeleteMethodResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteMethod_2'
    name: >-
      deleteMethod(string, string, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        options: RequestOptionsBase, callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to delete.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to delete.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the specified role assignment.
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to get.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsGetResponse>
        description: Promise<Models.RoleAssignmentsGetResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to get.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.get_1'
    name: 'get(string, string, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type:
            - string
          description: The name of the role assignment to get.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.getById'
    name: 'getById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a role assignment by ID.
    syntax:
      content: 'function getById(roleId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to get.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsGetByIdResponse>
        description: Promise<Models.RoleAssignmentsGetByIdResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.getById_2'
    name: 'getById(string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(roleId: string, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to get.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.getById_1'
    name: 'getById(string, ServiceCallback<RoleAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(roleId: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type:
            - string
          description: The ID of the role assignment to get.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignment>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.list'
    name: list(Models.RoleAssignmentsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all role assignments for the subscription.
    syntax:
      content: 'function list(options?: Models.RoleAssignmentsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.RoleAssignmentsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListResponse>
        description: Promise<Models.RoleAssignmentsListResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.list_2'
    name: >-
      list(RoleAssignmentsListOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RoleAssignmentsListOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-authorization.RoleAssignmentsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.list_1'
    name: list(ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<RoleAssignmentListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResource'
    name: >-
      listForResource(string, string, string, string, string,
      Models.RoleAssignmentsListForResourceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a resource.
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        Models.RoleAssignmentsListForResourceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get role assignments for.
        - id: options
          type:
            - Models.RoleAssignmentsListForResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForResourceResponse>
        description: Promise<Models.RoleAssignmentsListForResourceResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResource_2'
    name: >-
      listForResource(string, string, string, string, string,
      RoleAssignmentsListForResourceOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options:
        RoleAssignmentsListForResourceOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get role assignments for.
        - id: options
          type:
            - >-
              @azure/arm-authorization.RoleAssignmentsListForResourceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResource_1'
    name: >-
      listForResource(string, string, string, string, string,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get role assignments for.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup'
    name: >-
      listForResourceGroup(string,
      Models.RoleAssignmentsListForResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a resource group.
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        Models.RoleAssignmentsListForResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - Models.RoleAssignmentsListForResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForResourceGroupResponse>
        description: Promise<Models.RoleAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup_2'
    name: >-
      listForResourceGroup(string,
      RoleAssignmentsListForResourceGroupOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options:
        RoleAssignmentsListForResourceGroupOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - >-
              @azure/arm-authorization.RoleAssignmentsListForResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup_1'
    name: 'listForResourceGroup(string, ServiceCallback<RoleAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext'
    name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a resource group.
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForResourceGroupNextResponse>
        description: Promise<Models.RoleAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_2'
    name: >-
      listForResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_1'
    name: >-
      listForResourceGroupNext(string,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext'
    name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a resource.
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForResourceNextResponse>
        description: Promise<Models.RoleAssignmentsListForResourceNextResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext_2'
    name: >-
      listForResourceNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext_1'
    name: 'listForResourceNext(string, ServiceCallback<RoleAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScope'
    name: 'listForScope(string, Models.RoleAssignmentsListForScopeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a scope.
    syntax:
      content: >-
        function listForScope(scope: string, options?:
        Models.RoleAssignmentsListForScopeOptionalParams)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignments.
        - id: options
          type:
            - Models.RoleAssignmentsListForScopeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForScopeResponse>
        description: Promise<Models.RoleAssignmentsListForScopeResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScope_2'
    name: >-
      listForScope(string, RoleAssignmentsListForScopeOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForScope(scope: string, options:
        RoleAssignmentsListForScopeOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignments.
        - id: options
          type:
            - '@azure/arm-authorization.RoleAssignmentsListForScopeOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScope_1'
    name: 'listForScope(string, ServiceCallback<RoleAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForScope(scope: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: scope
          type:
            - string
          description: The scope of the role assignments.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext'
    name: 'listForScopeNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets role assignments for a scope.
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListForScopeNextResponse>
        description: Promise<Models.RoleAssignmentsListForScopeNextResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext_2'
    name: >-
      listForScopeNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext_1'
    name: 'listForScopeNext(string, ServiceCallback<RoleAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all role assignments for the subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoleAssignmentsListNextResponse>
        description: Promise<Models.RoleAssignmentsListNextResponse>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.listNext_1'
    name: 'listNext(string, ServiceCallback<RoleAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
          description: |
            The callback
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.RoleAssignments.constructor'
    name: RoleAssignments(AuthorizationManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a RoleAssignments.
    syntax:
      content: 'new RoleAssignments(client: AuthorizationManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-authorization.AuthorizationManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-authorization'
references:
  - uid: '@azure/arm-authorization.AuthorizationManagementClientContext'
    name: AuthorizationManagementClientContext
    spec.typeScript:
      - name: AuthorizationManagementClientContext
        fullName: AuthorizationManagementClientContext
        uid: '@azure/arm-authorization.AuthorizationManagementClientContext'
  - uid: '@azure/arm-authorization.RoleAssignmentCreateParameters'
    name: RoleAssignmentCreateParameters
    spec.typeScript:
      - name: RoleAssignmentCreateParameters
        fullName: RoleAssignmentCreateParameters
        uid: '@azure/arm-authorization.RoleAssignmentCreateParameters'
  - uid: ServiceCallback<@azure/arm-authorization.RoleAssignment>
    name: RoleAssignment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RoleAssignment
        fullName: RoleAssignment
        uid: '@azure/arm-authorization.RoleAssignment'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-authorization.RoleAssignmentListResult>
    name: RoleAssignmentListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RoleAssignmentListResult
        fullName: RoleAssignmentListResult
        uid: '@azure/arm-authorization.RoleAssignmentListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-authorization.RoleAssignmentsListOptionalParams'
    name: RoleAssignmentsListOptionalParams
    spec.typeScript:
      - name: RoleAssignmentsListOptionalParams
        fullName: RoleAssignmentsListOptionalParams
        uid: '@azure/arm-authorization.RoleAssignmentsListOptionalParams'
  - uid: '@azure/arm-authorization.RoleAssignmentsListForResourceOptionalParams'
    name: RoleAssignmentsListForResourceOptionalParams
    spec.typeScript:
      - name: RoleAssignmentsListForResourceOptionalParams
        fullName: RoleAssignmentsListForResourceOptionalParams
        uid: '@azure/arm-authorization.RoleAssignmentsListForResourceOptionalParams'
  - uid: '@azure/arm-authorization.RoleAssignmentsListForResourceGroupOptionalParams'
    name: RoleAssignmentsListForResourceGroupOptionalParams
    spec.typeScript:
      - name: RoleAssignmentsListForResourceGroupOptionalParams
        fullName: RoleAssignmentsListForResourceGroupOptionalParams
        uid: >-
          @azure/arm-authorization.RoleAssignmentsListForResourceGroupOptionalParams
  - uid: '@azure/arm-authorization.RoleAssignmentsListForScopeOptionalParams'
    name: RoleAssignmentsListForScopeOptionalParams
    spec.typeScript:
      - name: RoleAssignmentsListForScopeOptionalParams
        fullName: RoleAssignmentsListForScopeOptionalParams
        uid: '@azure/arm-authorization.RoleAssignmentsListForScopeOptionalParams'
