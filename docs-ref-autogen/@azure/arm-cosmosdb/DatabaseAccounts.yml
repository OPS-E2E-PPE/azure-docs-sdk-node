### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts'
    name: DatabaseAccounts
    fullName: DatabaseAccounts
    children:
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a DatabaseAccounts.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, accountName:
        string, createUpdateParameters: DatabaseAccountCreateUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: The parameters to provide for the current database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    name: >-
      beginFailoverPriorityChange(string, string, FailoverPolicies,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions -

      1). Failover priority values must be unique for each of the regions in
      which the database

      account exists.
    syntax:
      content: >-
        function beginFailoverPriorityChange(resourceGroupName: string,
        accountName: string, failoverParameters: FailoverPolicies, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: The new failover policies for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    name: >-
      beginOfflineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function beginOfflineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOffline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: Cosmos DB region to offline for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    name: >-
      beginOnlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function beginOnlineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOnline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: Cosmos DB region to online for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    name: >-
      beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function beginRegenerateKey(resourceGroupName: string, accountName:
        string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: The name of the key to regenerate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdate'
    name: >-
      beginUpdate(string, string, DatabaseAccountUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        updateParameters: DatabaseAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountUpdateParameters'
          description: The parameters to provide for the current database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that the Azure Cosmos DB account name already exists. A valid
      account name may contain

      only lowercase letters, numbers, and the '-' character, and must be
      between 3 and 50 characters.
    syntax:
      content: >-
        function checkNameExists(accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
        description: Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameExists(accountName: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    name: 'checkNameExists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameExists(accountName: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    name: >-
      createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: The parameters to provide for the current database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
        description: Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    name: DatabaseAccounts(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a DatabaseAccounts.
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    name: >-
      failoverPriorityChange(string, string, FailoverPolicies,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions -

      1). Failover priority values must be unique for each of the regions in
      which the database

      account exists.
    syntax:
      content: >-
        function failoverPriorityChange(resourceGroupName: string, accountName:
        string, failoverParameters: FailoverPolicies, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: The new failover policies for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves the properties of an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
        description: Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    name: 'get(string, string, ServiceCallback<DatabaseAccountGetResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<DatabaseAccountGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
        description: Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    name: >-
      getReadOnlyKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    name: >-
      getReadOnlyKeys(string, string,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the
      subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
        description: Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    name: list(ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the given
      resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
        description: Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the connection strings for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
        description: Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    name: >-
      listConnectionStrings(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListConnectionStringsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListConnectionStringsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    name: >-
      listConnectionStrings(string, string,
      ServiceCallback<DatabaseAccountListConnectionStringsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, callback:
        ServiceCallback<DatabaseAccountListConnectionStringsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the access keys for the specified Azure Cosmos DB database account.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
        description: Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<DatabaseAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves metric definitions for the given database account.
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
        description: Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    name: >-
      listMetricDefinitions(string, string, RequestOptionsBase,
      ServiceCallback<MetricDefinitionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricDefinitionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    name: >-
      listMetricDefinitions(string, string,
      ServiceCallback<MetricDefinitionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, callback: ServiceCallback<MetricDefinitionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves the metrics determined by the given filter for the given
      database account.
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
        description: Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    name: >-
      listMetrics(string, string, string, RequestOptionsBase,
      ServiceCallback<MetricListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, callback: ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
        description: Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    name: >-
      listReadOnlyKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    name: >-
      listReadOnlyKeys(string, string,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    name: >-
      listUsages(string, string, DatabaseAccountsListUsagesOptionalParams,
      ServiceCallback<UsagesResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options: DatabaseAccountsListUsagesOptionalParams, callback:
        ServiceCallback<UsagesResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    name: >-
      listUsages(string, string,
      Models.DatabaseAccountsListUsagesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves the usages (most recent data) for the given database account.
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options?: Models.DatabaseAccountsListUsagesOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - Models.DatabaseAccountsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
        description: Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<UsagesResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    name: >-
      offlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function offlineRegion(resourceGroupName: string, accountName: string,
        regionParameterForOffline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: Cosmos DB region to offline for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    name: >-
      onlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function onlineRegion(resourceGroupName: string, accountName: string,
        regionParameterForOnline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: Cosmos DB region to online for the database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    name: >-
      regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: The name of the key to regenerate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.update'
    name: >-
      update(string, string, DatabaseAccountUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        updateParameters: DatabaseAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure resource group.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountUpdateParameters'
          description: The parameters to provide for the current database account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateResponse>
        description: Promise<Models.DatabaseAccountsUpdateResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
    name: DatabaseAccountCreateUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountCreateUpdateParameters
        fullName: DatabaseAccountCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.FailoverPolicies'
    name: FailoverPolicies
    spec.typeScript:
      - name: FailoverPolicies
        fullName: FailoverPolicies
        uid: '@azure/arm-cosmosdb.FailoverPolicies'
  - uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
    name: RegionForOnlineOffline
    spec.typeScript:
      - name: RegionForOnlineOffline
        fullName: RegionForOnlineOffline
        uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
    name: DatabaseAccountRegenerateKeyParameters
    spec.typeScript:
      - name: DatabaseAccountRegenerateKeyParameters
        fullName: DatabaseAccountRegenerateKeyParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountUpdateParameters'
    name: DatabaseAccountUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountUpdateParameters
        fullName: DatabaseAccountUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountGetResults>
    name: DatabaseAccountGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountGetResults
        fullName: DatabaseAccountGetResults
        uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
    name: DatabaseAccountListReadOnlyKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListReadOnlyKeysResult
        fullName: DatabaseAccountListReadOnlyKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
    name: DatabaseAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountsListResult
        fullName: DatabaseAccountsListResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
    name: DatabaseAccountListConnectionStringsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListConnectionStringsResult
        fullName: DatabaseAccountListConnectionStringsResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
    name: DatabaseAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListKeysResult
        fullName: DatabaseAccountListKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
    name: MetricDefinitionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionsListResult
        fullName: MetricDefinitionsListResult
        uid: '@azure/arm-cosmosdb.MetricDefinitionsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-cosmosdb.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
    name: UsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UsagesResult
        fullName: UsagesResult
        uid: '@azure/arm-cosmosdb.UsagesResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
    name: DatabaseAccountsListUsagesOptionalParams
    spec.typeScript:
      - name: DatabaseAccountsListUsagesOptionalParams
        fullName: DatabaseAccountsListUsagesOptionalParams
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
