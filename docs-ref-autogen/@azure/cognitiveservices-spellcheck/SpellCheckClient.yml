### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient'
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
      - >-
        @azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
    name: 'SpellCheckClient(ServiceClientCredentials, Models.SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the SpellCheckClient class.
    syntax:
      content: >-
        new SpellCheckClient(credentials: ServiceClientCredentials, options?:
        Models.SpellCheckClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: options
          type:
            - Models.SpellCheckClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
    name: 'spellChecker(string, Models.SpellCheckClientSpellCheckerOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellChecker(text: string, options?:
        Models.SpellCheckClientSpellCheckerOptionalParams)
      parameters:
        - id: text
          type:
            - string
          description: >-
            The text string to check for spelling and grammar errors. The
            combined length of the

            text string, preContextText string, and postContextText string may
            not exceed 10,000 characters.

            You may specify this parameter in the query string of a GET request
            or in the body of a POST

            request. Because of the query string length limit, you'll typically
            use a POST request unless

            you're checking only short strings.
        - id: options
          type:
            - Models.SpellCheckClientSpellCheckerOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
        description: Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellChecker(text: string, callback:
        ServiceCallback<SpellCheck>)
      parameters:
        - id: text
          type:
            - string
          description: >-
            The text string to check for spelling and grammar errors. The
            combined length of the

            text string, preContextText string, and postContextText string may
            not exceed 10,000 characters.

            You may specify this parameter in the query string of a GET request
            or in the body of a POST

            request. Because of the query string length limit, you'll typically
            use a POST request unless

            you're checking only short strings.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            The callback
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    name: >-
      spellChecker(string, SpellCheckClientSpellCheckerOptionalParams,
      ServiceCallback<SpellCheck>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellChecker(text: string, options:
        SpellCheckClientSpellCheckerOptionalParams, callback:
        ServiceCallback<SpellCheck>)
      parameters:
        - id: text
          type:
            - string
          description: >-
            The text string to check for spelling and grammar errors. The
            combined length of the

            text string, preContextText string, and postContextText string may
            not exceed 10,000 characters.

            You may specify this parameter in the query string of a GET request
            or in the body of a POST

            request. Because of the query string length limit, you'll typically
            use a POST request unless

            you're checking only short strings.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            The callback
    package: '@azure/cognitiveservices-spellcheck'
references:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    name: SpellCheckClientContext
    spec.typeScript:
      - name: SpellCheckClientContext
        fullName: SpellCheckClientContext
        uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: '@azure/cognitiveservices-spellcheck.SpellCheck'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams
    name: SpellCheckClientSpellCheckerOptionalParams
    spec.typeScript:
      - name: SpellCheckClientSpellCheckerOptionalParams
        fullName: SpellCheckClientSpellCheckerOptionalParams
        uid: >-
          @azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams
