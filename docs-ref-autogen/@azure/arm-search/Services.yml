### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-search.Services'
    name: Services
    fullName: Services
    children:
      - '@azure/arm-search.Services.beginCreateOrUpdate'
      - '@azure/arm-search.Services.checkNameAvailability'
      - '@azure/arm-search.Services.checkNameAvailability_1'
      - '@azure/arm-search.Services.checkNameAvailability_2'
      - '@azure/arm-search.Services.createOrUpdate'
      - '@azure/arm-search.Services.deleteMethod'
      - '@azure/arm-search.Services.deleteMethod_1'
      - '@azure/arm-search.Services.deleteMethod_2'
      - '@azure/arm-search.Services.get'
      - '@azure/arm-search.Services.get_1'
      - '@azure/arm-search.Services.get_2'
      - '@azure/arm-search.Services.listByResourceGroup'
      - '@azure/arm-search.Services.listByResourceGroup_1'
      - '@azure/arm-search.Services.listByResourceGroup_2'
      - '@azure/arm-search.Services.constructor'
      - '@azure/arm-search.Services.update'
      - '@azure/arm-search.Services.update_1'
      - '@azure/arm-search.Services.update_2'
    langs:
      - typeScript
    type: class
    summary: Class representing a Services.
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, SearchService,
      Models.ServicesBeginCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the
      Search service already

      exists, all properties will be updated with the given values.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        searchServiceName: string, service: SearchService, options?:
        Models.ServicesBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >-
            The name of the Azure Search service to create or update. Search

            service names must only contain lowercase letters, digits or dashes,
            cannot use dash as the

            first two or last one characters, cannot contain consecutive dashes,
            and must be between 2 and

            60 characters in length. Search service names must be globally
            unique since they are part of the

            service URI (https://<name>.search.windows.net). You cannot change
            the service name after the

            service is created.
        - id: service
          type:
            - '@azure/arm-search.SearchService'
          description: The definition of the Search service to create or update.
        - id: options
          type:
            - Models.ServicesBeginCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.checkNameAvailability'
    name: >-
      checkNameAvailability(string,
      Models.ServicesCheckNameAvailabilityOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether or not the given Search service name is available for use.
      Search service names

      must be globally unique since they are part of the service URI

      (https://<name>.search.windows.net).
    syntax:
      content: >-
        function checkNameAvailability(name: string, options?:
        Models.ServicesCheckNameAvailabilityOptionalParams)
      parameters:
        - id: name
          type:
            - string
          description: >-
            The Search service name to validate. Search service names must only
            contain

            lowercase letters, digits or dashes, cannot use dash as the first
            two or last one characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters in length.
        - id: options
          type:
            - Models.ServicesCheckNameAvailabilityOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServicesCheckNameAvailabilityResponse>
        description: Promise<Models.ServicesCheckNameAvailabilityResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: >-
            The Search service name to validate. Search service names must only
            contain

            lowercase letters, digits or dashes, cannot use dash as the first
            two or last one characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters in length.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, ServicesCheckNameAvailabilityOptionalParams,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, options:
        ServicesCheckNameAvailabilityOptionalParams, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: >-
            The Search service name to validate. Search service names must only
            contain

            lowercase letters, digits or dashes, cannot use dash as the first
            two or last one characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters in length.
        - id: options
          type:
            - '@azure/arm-search.ServicesCheckNameAvailabilityOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.createOrUpdate'
    name: >-
      createOrUpdate(string, string, SearchService,
      Models.ServicesCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the
      Search service already

      exists, all properties will be updated with the given values.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, searchServiceName:
        string, service: SearchService, options?:
        Models.ServicesCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >-
            The name of the Azure Search service to create or update. Search

            service names must only contain lowercase letters, digits or dashes,
            cannot use dash as the

            first two or last one characters, cannot contain consecutive dashes,
            and must be between 2 and

            60 characters in length. Search service names must be globally
            unique since they are part of the

            service URI (https://<name>.search.windows.net). You cannot change
            the service name after the

            service is created.
        - id: service
          type:
            - '@azure/arm-search.SearchService'
          description: The definition of the Search service to create or update.
        - id: options
          type:
            - Models.ServicesCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServicesCreateOrUpdateResponse>
        description: Promise<Models.ServicesCreateOrUpdateResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.deleteMethod'
    name: 'deleteMethod(string, string, Models.ServicesDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a Search service in the given resource group, along with its
      associated resources.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, options?: Models.ServicesDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type:
            - Models.ServicesDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.deleteMethod_2'
    name: >-
      deleteMethod(string, string, ServicesDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, options: ServicesDeleteMethodOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type:
            - '@azure/arm-search.ServicesDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.get'
    name: 'get(string, string, Models.ServicesGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Search service with the given name in the given resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options?: Models.ServicesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type:
            - Models.ServicesGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServicesGetResponse>
        description: Promise<Models.ServicesGetResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.get_1'
    name: 'get(string, string, ServiceCallback<SearchService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchService>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.get_2'
    name: >-
      get(string, string, ServicesGetOptionalParams,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options: ServicesGetOptionalParams, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type:
            - '@azure/arm-search.ServicesGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchService>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.ServicesListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all Search services in the given resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.ServicesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - Models.ServicesListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServicesListByResourceGroupResponse>
        description: Promise<Models.ServicesListByResourceGroupResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<SearchServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SearchServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchServiceListResult>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, ServicesListByResourceGroupOptionalParams,
      ServiceCallback<SearchServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        ServicesListByResourceGroupOptionalParams, callback:
        ServiceCallback<SearchServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - '@azure/arm-search.ServicesListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchServiceListResult>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.constructor'
    name: Services(SearchManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Services.
    syntax:
      content: 'new Services(client: SearchManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-search.SearchManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.update'
    name: 'update(string, string, SearchService, Models.ServicesUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing Search service in the given resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, options?: Models.ServicesUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: The name of the Azure Search service to update.
        - id: service
          type:
            - '@azure/arm-search.SearchService'
          description: The definition of the Search service to update.
        - id: options
          type:
            - Models.ServicesUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServicesUpdateResponse>
        description: Promise<Models.ServicesUpdateResponse>
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.update_1'
    name: 'update(string, string, SearchService, ServiceCallback<SearchService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: The name of the Azure Search service to update.
        - id: service
          type:
            - '@azure/arm-search.SearchService'
          description: The definition of the Search service to update.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchService>
          description: |
            The callback
    package: '@azure/arm-search'
  - uid: '@azure/arm-search.Services.update_2'
    name: >-
      update(string, string, SearchService, ServicesUpdateOptionalParams,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, options: ServicesUpdateOptionalParams, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: The name of the Azure Search service to update.
        - id: service
          type:
            - '@azure/arm-search.SearchService'
          description: The definition of the Search service to update.
        - id: options
          type:
            - '@azure/arm-search.ServicesUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-search.SearchService>
          description: |
            The callback
    package: '@azure/arm-search'
references:
  - uid: '@azure/arm-search.SearchManagementClientContext'
    name: SearchManagementClientContext
    spec.typeScript:
      - name: SearchManagementClientContext
        fullName: SearchManagementClientContext
        uid: '@azure/arm-search.SearchManagementClientContext'
  - uid: '@azure/arm-search.SearchService'
    name: SearchService
    spec.typeScript:
      - name: SearchService
        fullName: SearchService
        uid: '@azure/arm-search.SearchService'
  - uid: ServiceCallback<@azure/arm-search.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-search.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-search.ServicesCheckNameAvailabilityOptionalParams'
    name: ServicesCheckNameAvailabilityOptionalParams
    spec.typeScript:
      - name: ServicesCheckNameAvailabilityOptionalParams
        fullName: ServicesCheckNameAvailabilityOptionalParams
        uid: '@azure/arm-search.ServicesCheckNameAvailabilityOptionalParams'
  - uid: '@azure/arm-search.ServicesDeleteMethodOptionalParams'
    name: ServicesDeleteMethodOptionalParams
    spec.typeScript:
      - name: ServicesDeleteMethodOptionalParams
        fullName: ServicesDeleteMethodOptionalParams
        uid: '@azure/arm-search.ServicesDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/arm-search.SearchService>
    name: SearchService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SearchService
        fullName: SearchService
        uid: '@azure/arm-search.SearchService'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-search.ServicesGetOptionalParams'
    name: ServicesGetOptionalParams
    spec.typeScript:
      - name: ServicesGetOptionalParams
        fullName: ServicesGetOptionalParams
        uid: '@azure/arm-search.ServicesGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-search.SearchServiceListResult>
    name: SearchServiceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SearchServiceListResult
        fullName: SearchServiceListResult
        uid: '@azure/arm-search.SearchServiceListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-search.ServicesListByResourceGroupOptionalParams'
    name: ServicesListByResourceGroupOptionalParams
    spec.typeScript:
      - name: ServicesListByResourceGroupOptionalParams
        fullName: ServicesListByResourceGroupOptionalParams
        uid: '@azure/arm-search.ServicesListByResourceGroupOptionalParams'
  - uid: '@azure/arm-search.ServicesUpdateOptionalParams'
    name: ServicesUpdateOptionalParams
    spec.typeScript:
      - name: ServicesUpdateOptionalParams
        fullName: ServicesUpdateOptionalParams
        uid: '@azure/arm-search.ServicesUpdateOptionalParams'
