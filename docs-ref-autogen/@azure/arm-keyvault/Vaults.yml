### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-keyvault.Vaults'
    name: Vaults
    fullName: Vaults
    children:
      - '@azure/arm-keyvault.Vaults.beginCreateOrUpdate'
      - '@azure/arm-keyvault.Vaults.beginPurgeDeleted'
      - '@azure/arm-keyvault.Vaults.checkNameAvailability'
      - '@azure/arm-keyvault.Vaults.checkNameAvailability_2'
      - '@azure/arm-keyvault.Vaults.checkNameAvailability_1'
      - '@azure/arm-keyvault.Vaults.createOrUpdate'
      - '@azure/arm-keyvault.Vaults.deleteMethod'
      - '@azure/arm-keyvault.Vaults.deleteMethod_2'
      - '@azure/arm-keyvault.Vaults.deleteMethod_1'
      - '@azure/arm-keyvault.Vaults.get'
      - '@azure/arm-keyvault.Vaults.get_2'
      - '@azure/arm-keyvault.Vaults.get_1'
      - '@azure/arm-keyvault.Vaults.getDeleted'
      - '@azure/arm-keyvault.Vaults.getDeleted_2'
      - '@azure/arm-keyvault.Vaults.getDeleted_1'
      - '@azure/arm-keyvault.Vaults.list'
      - '@azure/arm-keyvault.Vaults.list_1'
      - '@azure/arm-keyvault.Vaults.list_2'
      - '@azure/arm-keyvault.Vaults.listByResourceGroup'
      - '@azure/arm-keyvault.Vaults.listByResourceGroup_1'
      - '@azure/arm-keyvault.Vaults.listByResourceGroup_2'
      - '@azure/arm-keyvault.Vaults.listByResourceGroupNext'
      - '@azure/arm-keyvault.Vaults.listByResourceGroupNext_2'
      - '@azure/arm-keyvault.Vaults.listByResourceGroupNext_1'
      - '@azure/arm-keyvault.Vaults.listBySubscription'
      - '@azure/arm-keyvault.Vaults.listBySubscription_1'
      - '@azure/arm-keyvault.Vaults.listBySubscription_2'
      - '@azure/arm-keyvault.Vaults.listBySubscriptionNext'
      - '@azure/arm-keyvault.Vaults.listBySubscriptionNext_2'
      - '@azure/arm-keyvault.Vaults.listBySubscriptionNext_1'
      - '@azure/arm-keyvault.Vaults.listDeleted'
      - '@azure/arm-keyvault.Vaults.listDeleted_2'
      - '@azure/arm-keyvault.Vaults.listDeleted_1'
      - '@azure/arm-keyvault.Vaults.listDeletedNext'
      - '@azure/arm-keyvault.Vaults.listDeletedNext_2'
      - '@azure/arm-keyvault.Vaults.listDeletedNext_1'
      - '@azure/arm-keyvault.Vaults.listNext'
      - '@azure/arm-keyvault.Vaults.listNext_2'
      - '@azure/arm-keyvault.Vaults.listNext_1'
      - '@azure/arm-keyvault.Vaults.purgeDeleted'
      - '@azure/arm-keyvault.Vaults.update'
      - '@azure/arm-keyvault.Vaults.update_2'
      - '@azure/arm-keyvault.Vaults.update_1'
      - '@azure/arm-keyvault.Vaults.updateAccessPolicy'
      - '@azure/arm-keyvault.Vaults.updateAccessPolicy_2'
      - '@azure/arm-keyvault.Vaults.updateAccessPolicy_1'
      - '@azure/arm-keyvault.Vaults.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Vaults.
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a key vault in the specified subscription.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultCreateOrUpdateParameters'
          description: Parameters to create or update the vault
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.beginPurgeDeleted'
    name: 'beginPurgeDeleted(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.checkNameAvailability'
    name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks that the vault name is valid and is not already in use.
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: vaultName
          type:
            - '@azure/arm-keyvault.VaultCheckNameAvailabilityParameters'
          description: The name of the vault.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsCheckNameAvailabilityResponse>
        description: Promise<Models.VaultsCheckNameAvailabilityResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.checkNameAvailability_2'
    name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options: RequestOptionsBase,
        callback: ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type:
            - '@azure/arm-keyvault.VaultCheckNameAvailabilityParameters'
          description: The name of the vault.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.checkNameAvailability_1'
    name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type:
            - '@azure/arm-keyvault.VaultCheckNameAvailabilityParameters'
          description: The name of the vault.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.createOrUpdate'
    name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a key vault in the specified subscription.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultCreateOrUpdateParameters'
          description: Parameters to create or update the vault
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsCreateOrUpdateResponse>
        description: Promise<Models.VaultsCreateOrUpdateResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Azure key vault.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault to delete
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault to delete
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault to delete
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified Azure key vault.
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsGetResponse>
        description: Promise<Models.VaultsGetResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Vault>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.Vault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.get_1'
    name: 'get(string, string, ServiceCallback<Vault>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.Vault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.getDeleted'
    name: 'getDeleted(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the deleted Azure key vault.
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: location
          type:
            - string
          description: The location of the deleted vault.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsGetDeletedResponse>
        description: Promise<Models.VaultsGetDeletedResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.getDeleted_2'
    name: >-
      getDeleted(string, string, RequestOptionsBase,
      ServiceCallback<DeletedVault>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: location
          type:
            - string
          description: The location of the deleted vault.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.getDeleted_1'
    name: 'getDeleted(string, string, ServiceCallback<DeletedVault>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, callback:
        ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: location
          type:
            - string
          description: The location of the deleted vault.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.list'
    name: list(Models.VaultsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    syntax:
      content: 'function list(options?: Models.VaultsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.VaultsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListResponse>
        description: Promise<Models.VaultsListResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.list_1'
    name: list(ServiceCallback<ResourceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.list_2'
    name: 'list(VaultsListOptionalParams, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: VaultsListOptionalParams, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-keyvault.VaultsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.VaultsListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription and within

      the specified resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.VaultsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: options
          type:
            - Models.VaultsListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListByResourceGroupResponse>
        description: Promise<Models.VaultsListByResourceGroupResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<VaultListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, VaultsListByResourceGroupOptionalParams,
      ServiceCallback<VaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        VaultsListByResourceGroupOptionalParams, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: options
          type:
            - '@azure/arm-keyvault.VaultsListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription and within

      the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListByResourceGroupNextResponse>
        description: Promise<Models.VaultsListByResourceGroupNextResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<VaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<VaultListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscription'
    name: listBySubscription(Models.VaultsListBySubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    syntax:
      content: >-
        function listBySubscription(options?:
        Models.VaultsListBySubscriptionOptionalParams)
      parameters:
        - id: options
          type:
            - Models.VaultsListBySubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListBySubscriptionResponse>
        description: Promise<Models.VaultsListBySubscriptionResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscription_1'
    name: listBySubscription(ServiceCallback<VaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listBySubscription(callback: ServiceCallback<VaultListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscription_2'
    name: >-
      listBySubscription(VaultsListBySubscriptionOptionalParams,
      ServiceCallback<VaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(options:
        VaultsListBySubscriptionOptionalParams, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-keyvault.VaultsListBySubscriptionOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscriptionNext'
    name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListBySubscriptionNextResponse>
        description: Promise<Models.VaultsListBySubscriptionNextResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscriptionNext_2'
    name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<VaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listBySubscriptionNext_1'
    name: 'listBySubscriptionNext(string, ServiceCallback<VaultListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeleted'
    name: listDeleted(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about the deleted vaults in a subscription.
    syntax:
      content: 'function listDeleted(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListDeletedResponse>
        description: Promise<Models.VaultsListDeletedResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeleted_2'
    name: 'listDeleted(RequestOptionsBase, ServiceCallback<DeletedVaultListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeleted(options: RequestOptionsBase, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeleted_1'
    name: listDeleted(ServiceCallback<DeletedVaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listDeleted(callback: ServiceCallback<DeletedVaultListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeletedNext'
    name: 'listDeletedNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about the deleted vaults in a subscription.
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListDeletedNextResponse>
        description: Promise<Models.VaultsListDeletedNextResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeletedNext_2'
    name: >-
      listDeletedNext(string, RequestOptionsBase,
      ServiceCallback<DeletedVaultListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listDeletedNext_1'
    name: 'listDeletedNext(string, ServiceCallback<DeletedVaultListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.DeletedVaultListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsListNextResponse>
        description: Promise<Models.VaultsListNextResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.listNext_1'
    name: 'listNext(string, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.purgeDeleted'
    name: 'purgeDeleted(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.update'
    name: 'update(string, string, VaultPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a key vault in the specified subscription.
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultPatchParameters'
          description: Parameters to patch the vault
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsUpdateResponse>
        description: Promise<Models.VaultsUpdateResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.update_2'
    name: >-
      update(string, string, VaultPatchParameters, RequestOptionsBase,
      ServiceCallback<Vault>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options: RequestOptionsBase, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultPatchParameters'
          description: Parameters to patch the vault
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.Vault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.update_1'
    name: 'update(string, string, VaultPatchParameters, ServiceCallback<Vault>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultPatchParameters'
          description: Parameters to patch the vault
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.Vault>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.updateAccessPolicy'
    name: >-
      updateAccessPolicy(string, string, Models.AccessPolicyUpdateKind,
      VaultAccessPolicyParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update access policies in a key vault in the specified subscription.
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: Models.AccessPolicyUpdateKind, parameters:
        VaultAccessPolicyParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: operationKind
          type:
            - Models.AccessPolicyUpdateKind
          description: >-
            Name of the operation. Possible values include: 'add', 'replace',
            'remove'
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultAccessPolicyParameters'
          description: Access policy to merge into the vault
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VaultsUpdateAccessPolicyResponse>
        description: Promise<Models.VaultsUpdateAccessPolicyResponse>
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.updateAccessPolicy_2'
    name: >-
      updateAccessPolicy(string, string, Models.AccessPolicyUpdateKind,
      VaultAccessPolicyParameters, RequestOptionsBase,
      ServiceCallback<VaultAccessPolicyParameters>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: Models.AccessPolicyUpdateKind, parameters:
        VaultAccessPolicyParameters, options: RequestOptionsBase, callback:
        ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: operationKind
          type:
            - Models.AccessPolicyUpdateKind
          description: >-
            Name of the operation. Possible values include: 'add', 'replace',
            'remove'
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultAccessPolicyParameters'
          description: Access policy to merge into the vault
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultAccessPolicyParameters>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.updateAccessPolicy_1'
    name: >-
      updateAccessPolicy(string, string, Models.AccessPolicyUpdateKind,
      VaultAccessPolicyParameters, ServiceCallback<VaultAccessPolicyParameters>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: Models.AccessPolicyUpdateKind, parameters:
        VaultAccessPolicyParameters, callback:
        ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: operationKind
          type:
            - Models.AccessPolicyUpdateKind
          description: >-
            Name of the operation. Possible values include: 'add', 'replace',
            'remove'
        - id: parameters
          type:
            - '@azure/arm-keyvault.VaultAccessPolicyParameters'
          description: Access policy to merge into the vault
        - id: callback
          type:
            - ServiceCallback<@azure/arm-keyvault.VaultAccessPolicyParameters>
          description: |
            The callback
    package: '@azure/arm-keyvault'
  - uid: '@azure/arm-keyvault.Vaults.constructor'
    name: Vaults(KeyVaultManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Vaults.
    syntax:
      content: 'new Vaults(client: KeyVaultManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-keyvault.KeyVaultManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-keyvault'
references:
  - uid: '@azure/arm-keyvault.KeyVaultManagementClientContext'
    name: KeyVaultManagementClientContext
    spec.typeScript:
      - name: KeyVaultManagementClientContext
        fullName: KeyVaultManagementClientContext
        uid: '@azure/arm-keyvault.KeyVaultManagementClientContext'
  - uid: '@azure/arm-keyvault.VaultCreateOrUpdateParameters'
    name: VaultCreateOrUpdateParameters
    spec.typeScript:
      - name: VaultCreateOrUpdateParameters
        fullName: VaultCreateOrUpdateParameters
        uid: '@azure/arm-keyvault.VaultCreateOrUpdateParameters'
  - uid: '@azure/arm-keyvault.VaultCheckNameAvailabilityParameters'
    name: VaultCheckNameAvailabilityParameters
    spec.typeScript:
      - name: VaultCheckNameAvailabilityParameters
        fullName: VaultCheckNameAvailabilityParameters
        uid: '@azure/arm-keyvault.VaultCheckNameAvailabilityParameters'
  - uid: ServiceCallback<@azure/arm-keyvault.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-keyvault.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-keyvault.Vault>
    name: Vault>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Vault
        fullName: Vault
        uid: '@azure/arm-keyvault.Vault'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-keyvault.DeletedVault>
    name: DeletedVault>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedVault
        fullName: DeletedVault
        uid: '@azure/arm-keyvault.DeletedVault'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-keyvault.ResourceListResult>
    name: ResourceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceListResult
        fullName: ResourceListResult
        uid: '@azure/arm-keyvault.ResourceListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-keyvault.VaultsListOptionalParams'
    name: VaultsListOptionalParams
    spec.typeScript:
      - name: VaultsListOptionalParams
        fullName: VaultsListOptionalParams
        uid: '@azure/arm-keyvault.VaultsListOptionalParams'
  - uid: ServiceCallback<@azure/arm-keyvault.VaultListResult>
    name: VaultListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VaultListResult
        fullName: VaultListResult
        uid: '@azure/arm-keyvault.VaultListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-keyvault.VaultsListByResourceGroupOptionalParams'
    name: VaultsListByResourceGroupOptionalParams
    spec.typeScript:
      - name: VaultsListByResourceGroupOptionalParams
        fullName: VaultsListByResourceGroupOptionalParams
        uid: '@azure/arm-keyvault.VaultsListByResourceGroupOptionalParams'
  - uid: '@azure/arm-keyvault.VaultsListBySubscriptionOptionalParams'
    name: VaultsListBySubscriptionOptionalParams
    spec.typeScript:
      - name: VaultsListBySubscriptionOptionalParams
        fullName: VaultsListBySubscriptionOptionalParams
        uid: '@azure/arm-keyvault.VaultsListBySubscriptionOptionalParams'
  - uid: ServiceCallback<@azure/arm-keyvault.DeletedVaultListResult>
    name: DeletedVaultListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedVaultListResult
        fullName: DeletedVaultListResult
        uid: '@azure/arm-keyvault.DeletedVaultListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-keyvault.VaultPatchParameters'
    name: VaultPatchParameters
    spec.typeScript:
      - name: VaultPatchParameters
        fullName: VaultPatchParameters
        uid: '@azure/arm-keyvault.VaultPatchParameters'
  - uid: '@azure/arm-keyvault.VaultAccessPolicyParameters'
    name: VaultAccessPolicyParameters
    spec.typeScript:
      - name: VaultAccessPolicyParameters
        fullName: VaultAccessPolicyParameters
        uid: '@azure/arm-keyvault.VaultAccessPolicyParameters'
  - uid: ServiceCallback<@azure/arm-keyvault.VaultAccessPolicyParameters>
    name: VaultAccessPolicyParameters>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VaultAccessPolicyParameters
        fullName: VaultAccessPolicyParameters
        uid: '@azure/arm-keyvault.VaultAccessPolicyParameters'
      - name: '>'
        fullName: '>'
