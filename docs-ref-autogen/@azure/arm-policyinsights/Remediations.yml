### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-policyinsights.Remediations'
    name: Remediations
    fullName: Remediations
    children:
      - '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup'
      - '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup_2'
      - '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup_1'
      - '@azure/arm-policyinsights.Remediations.cancelAtResource'
      - '@azure/arm-policyinsights.Remediations.cancelAtResource_2'
      - '@azure/arm-policyinsights.Remediations.cancelAtResource_1'
      - '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup'
      - '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup_1'
      - '@azure/arm-policyinsights.Remediations.cancelAtSubscription'
      - '@azure/arm-policyinsights.Remediations.cancelAtSubscription_2'
      - '@azure/arm-policyinsights.Remediations.cancelAtSubscription_1'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup_2'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup_1'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource_2'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource_1'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup_1'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription_2'
      - '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription_1'
      - '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup'
      - '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup_2'
      - '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup_1'
      - '@azure/arm-policyinsights.Remediations.deleteAtResource'
      - '@azure/arm-policyinsights.Remediations.deleteAtResource_2'
      - '@azure/arm-policyinsights.Remediations.deleteAtResource_1'
      - '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup'
      - '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup_1'
      - '@azure/arm-policyinsights.Remediations.deleteAtSubscription'
      - '@azure/arm-policyinsights.Remediations.deleteAtSubscription_2'
      - '@azure/arm-policyinsights.Remediations.deleteAtSubscription_1'
      - '@azure/arm-policyinsights.Remediations.getAtManagementGroup'
      - '@azure/arm-policyinsights.Remediations.getAtManagementGroup_2'
      - '@azure/arm-policyinsights.Remediations.getAtManagementGroup_1'
      - '@azure/arm-policyinsights.Remediations.getAtResource'
      - '@azure/arm-policyinsights.Remediations.getAtResource_2'
      - '@azure/arm-policyinsights.Remediations.getAtResource_1'
      - '@azure/arm-policyinsights.Remediations.getAtResourceGroup'
      - '@azure/arm-policyinsights.Remediations.getAtResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.getAtResourceGroup_1'
      - '@azure/arm-policyinsights.Remediations.getAtSubscription'
      - '@azure/arm-policyinsights.Remediations.getAtSubscription_2'
      - '@azure/arm-policyinsights.Remediations.getAtSubscription_1'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup'
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup_2
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup_1
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext_2
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext_1
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource_2'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource_1'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup_1'
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext_2
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext_1
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext_2'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext_1'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription_2'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription_1'
      - '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext'
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext_2
      - >-
        @azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext_1
      - '@azure/arm-policyinsights.Remediations.listForManagementGroup'
      - '@azure/arm-policyinsights.Remediations.listForManagementGroup_2'
      - '@azure/arm-policyinsights.Remediations.listForManagementGroup_1'
      - '@azure/arm-policyinsights.Remediations.listForManagementGroupNext'
      - '@azure/arm-policyinsights.Remediations.listForManagementGroupNext_2'
      - '@azure/arm-policyinsights.Remediations.listForManagementGroupNext_1'
      - '@azure/arm-policyinsights.Remediations.listForResource'
      - '@azure/arm-policyinsights.Remediations.listForResource_2'
      - '@azure/arm-policyinsights.Remediations.listForResource_1'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroup'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroup_2'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroup_1'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroupNext'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroupNext_2'
      - '@azure/arm-policyinsights.Remediations.listForResourceGroupNext_1'
      - '@azure/arm-policyinsights.Remediations.listForResourceNext'
      - '@azure/arm-policyinsights.Remediations.listForResourceNext_2'
      - '@azure/arm-policyinsights.Remediations.listForResourceNext_1'
      - '@azure/arm-policyinsights.Remediations.listForSubscription'
      - '@azure/arm-policyinsights.Remediations.listForSubscription_2'
      - '@azure/arm-policyinsights.Remediations.listForSubscription_1'
      - '@azure/arm-policyinsights.Remediations.listForSubscriptionNext'
      - '@azure/arm-policyinsights.Remediations.listForSubscriptionNext_2'
      - '@azure/arm-policyinsights.Remediations.listForSubscriptionNext_1'
      - '@azure/arm-policyinsights.Remediations.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Remediations.
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup'
    name: 'cancelAtManagementGroup(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels a remediation at management group scope.
    syntax:
      content: >-
        function cancelAtManagementGroup(managementGroupId: string,
        remediationName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCancelAtManagementGroupResponse>
        description: Promise<Models.RemediationsCancelAtManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup_2'
    name: >-
      cancelAtManagementGroup(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtManagementGroup(managementGroupId: string,
        remediationName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtManagementGroup_1'
    name: 'cancelAtManagementGroup(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtManagementGroup(managementGroupId: string,
        remediationName: string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResource'
    name: 'cancelAtResource(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancel a remediation at resource scope.
    syntax:
      content: >-
        function cancelAtResource(resourceId: string, remediationName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCancelAtResourceResponse>
        description: Promise<Models.RemediationsCancelAtResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResource_2'
    name: >-
      cancelAtResource(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtResource(resourceId: string, remediationName: string,
        options: RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResource_1'
    name: 'cancelAtResource(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtResource(resourceId: string, remediationName: string,
        callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup'
    name: 'cancelAtResourceGroup(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels a remediation at resource group scope.
    syntax:
      content: >-
        function cancelAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCancelAtResourceGroupResponse>
        description: Promise<Models.RemediationsCancelAtResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup_2'
    name: >-
      cancelAtResourceGroup(string, string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtResourceGroup_1'
    name: >-
      cancelAtResourceGroup(string, string, string,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtSubscription'
    name: 'cancelAtSubscription(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels a remediation at subscription scope.
    syntax:
      content: >-
        function cancelAtSubscription(subscriptionId: string, remediationName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCancelAtSubscriptionResponse>
        description: Promise<Models.RemediationsCancelAtSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtSubscription_2'
    name: >-
      cancelAtSubscription(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtSubscription(subscriptionId: string, remediationName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.cancelAtSubscription_1'
    name: 'cancelAtSubscription(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelAtSubscription(subscriptionId: string, remediationName:
        string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup'
    name: >-
      createOrUpdateAtManagementGroup(string, string, Remediation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a remediation at management group scope.
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        remediationName: string, parameters: Remediation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCreateOrUpdateAtManagementGroupResponse>
        description: Promise<Models.RemediationsCreateOrUpdateAtManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup_2'
    name: >-
      createOrUpdateAtManagementGroup(string, string, Remediation,
      RequestOptionsBase, ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        remediationName: string, parameters: Remediation, options:
        RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtManagementGroup_1'
    name: >-
      createOrUpdateAtManagementGroup(string, string, Remediation,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        remediationName: string, parameters: Remediation, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource'
    name: >-
      createOrUpdateAtResource(string, string, Remediation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a remediation at resource scope.
    syntax:
      content: >-
        function createOrUpdateAtResource(resourceId: string, remediationName:
        string, parameters: Remediation, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCreateOrUpdateAtResourceResponse>
        description: Promise<Models.RemediationsCreateOrUpdateAtResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource_2'
    name: >-
      createOrUpdateAtResource(string, string, Remediation, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtResource(resourceId: string, remediationName:
        string, parameters: Remediation, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResource_1'
    name: >-
      createOrUpdateAtResource(string, string, Remediation,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtResource(resourceId: string, remediationName:
        string, parameters: Remediation, callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup'
    name: >-
      createOrUpdateAtResourceGroup(string, string, string, Remediation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a remediation at resource group scope.
    syntax:
      content: >-
        function createOrUpdateAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, parameters:
        Remediation, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCreateOrUpdateAtResourceGroupResponse>
        description: Promise<Models.RemediationsCreateOrUpdateAtResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup_2'
    name: >-
      createOrUpdateAtResourceGroup(string, string, string, Remediation,
      RequestOptionsBase, ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, parameters:
        Remediation, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtResourceGroup_1'
    name: >-
      createOrUpdateAtResourceGroup(string, string, string, Remediation,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, parameters:
        Remediation, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription'
    name: >-
      createOrUpdateAtSubscription(string, string, Remediation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a remediation at subscription scope.
    syntax:
      content: >-
        function createOrUpdateAtSubscription(subscriptionId: string,
        remediationName: string, parameters: Remediation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsCreateOrUpdateAtSubscriptionResponse>
        description: Promise<Models.RemediationsCreateOrUpdateAtSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription_2'
    name: >-
      createOrUpdateAtSubscription(string, string, Remediation,
      RequestOptionsBase, ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtSubscription(subscriptionId: string,
        remediationName: string, parameters: Remediation, options:
        RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.createOrUpdateAtSubscription_1'
    name: >-
      createOrUpdateAtSubscription(string, string, Remediation,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtSubscription(subscriptionId: string,
        remediationName: string, parameters: Remediation, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: parameters
          type:
            - '@azure/arm-policyinsights.Remediation'
          description: The remediation parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup'
    name: 'deleteAtManagementGroup(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing remediation at management group scope.
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        remediationName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsDeleteAtManagementGroupResponse>
        description: Promise<Models.RemediationsDeleteAtManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup_2'
    name: >-
      deleteAtManagementGroup(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        remediationName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtManagementGroup_1'
    name: 'deleteAtManagementGroup(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        remediationName: string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResource'
    name: 'deleteAtResource(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing remediation at individual resource scope.
    syntax:
      content: >-
        function deleteAtResource(resourceId: string, remediationName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsDeleteAtResourceResponse>
        description: Promise<Models.RemediationsDeleteAtResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResource_2'
    name: >-
      deleteAtResource(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtResource(resourceId: string, remediationName: string,
        options: RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResource_1'
    name: 'deleteAtResource(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtResource(resourceId: string, remediationName: string,
        callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup'
    name: 'deleteAtResourceGroup(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing remediation at resource group scope.
    syntax:
      content: >-
        function deleteAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsDeleteAtResourceGroupResponse>
        description: Promise<Models.RemediationsDeleteAtResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup_2'
    name: >-
      deleteAtResourceGroup(string, string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtResourceGroup_1'
    name: >-
      deleteAtResourceGroup(string, string, string,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtSubscription'
    name: 'deleteAtSubscription(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing remediation at subscription scope.
    syntax:
      content: >-
        function deleteAtSubscription(subscriptionId: string, remediationName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsDeleteAtSubscriptionResponse>
        description: Promise<Models.RemediationsDeleteAtSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtSubscription_2'
    name: >-
      deleteAtSubscription(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtSubscription(subscriptionId: string, remediationName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.deleteAtSubscription_1'
    name: 'deleteAtSubscription(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtSubscription(subscriptionId: string, remediationName:
        string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtManagementGroup'
    name: 'getAtManagementGroup(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an existing remediation at management group scope.
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        remediationName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsGetAtManagementGroupResponse>
        description: Promise<Models.RemediationsGetAtManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtManagementGroup_2'
    name: >-
      getAtManagementGroup(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        remediationName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtManagementGroup_1'
    name: 'getAtManagementGroup(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        remediationName: string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResource'
    name: 'getAtResource(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an existing remediation at resource scope.
    syntax:
      content: >-
        function getAtResource(resourceId: string, remediationName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsGetAtResourceResponse>
        description: Promise<Models.RemediationsGetAtResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResource_2'
    name: >-
      getAtResource(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtResource(resourceId: string, remediationName: string,
        options: RequestOptionsBase, callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResource_1'
    name: 'getAtResource(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtResource(resourceId: string, remediationName: string,
        callback: ServiceCallback<Remediation>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResourceGroup'
    name: 'getAtResourceGroup(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an existing remediation at resource group scope.
    syntax:
      content: >-
        function getAtResourceGroup(subscriptionId: string, resourceGroupName:
        string, remediationName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsGetAtResourceGroupResponse>
        description: Promise<Models.RemediationsGetAtResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResourceGroup_2'
    name: >-
      getAtResourceGroup(string, string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtResourceGroup(subscriptionId: string, resourceGroupName:
        string, remediationName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtResourceGroup_1'
    name: 'getAtResourceGroup(string, string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtResourceGroup(subscriptionId: string, resourceGroupName:
        string, remediationName: string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtSubscription'
    name: 'getAtSubscription(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an existing remediation at subscription scope.
    syntax:
      content: >-
        function getAtSubscription(subscriptionId: string, remediationName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsGetAtSubscriptionResponse>
        description: Promise<Models.RemediationsGetAtSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtSubscription_2'
    name: >-
      getAtSubscription(string, string, RequestOptionsBase,
      ServiceCallback<Remediation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtSubscription(subscriptionId: string, remediationName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.getAtSubscription_1'
    name: 'getAtSubscription(string, string, ServiceCallback<Remediation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtSubscription(subscriptionId: string, remediationName:
        string, callback: ServiceCallback<Remediation>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.Remediation>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup'
    name: >-
      listDeploymentsAtManagementGroup(string, string,
      Models.RemediationsListDeploymentsAtManagementGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at management group scope.
    syntax:
      content: >-
        function listDeploymentsAtManagementGroup(managementGroupId: string,
        remediationName: string, options?:
        Models.RemediationsListDeploymentsAtManagementGroupOptionalParams)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - Models.RemediationsListDeploymentsAtManagementGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListDeploymentsAtManagementGroupResponse>
        description: Promise<Models.RemediationsListDeploymentsAtManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup_2'
    name: >-
      listDeploymentsAtManagementGroup(string, string,
      RemediationsListDeploymentsAtManagementGroupOptionalParams,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtManagementGroup(managementGroupId: string,
        remediationName: string, options:
        RemediationsListDeploymentsAtManagementGroupOptionalParams, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListDeploymentsAtManagementGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroup_1'
    name: >-
      listDeploymentsAtManagementGroup(string, string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtManagementGroup(managementGroupId: string,
        remediationName: string, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: >-
      @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext
    name: 'listDeploymentsAtManagementGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at management group scope.
    syntax:
      content: >-
        function listDeploymentsAtManagementGroupNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.RemediationsListDeploymentsAtManagementGroupNextResponse>
        description: >-
          Promise<Models.RemediationsListDeploymentsAtManagementGroupNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: >-
      @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext_2
    name: >-
      listDeploymentsAtManagementGroupNext(string, RequestOptionsBase,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtManagementGroupNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: >-
      @azure/arm-policyinsights.Remediations.listDeploymentsAtManagementGroupNext_1
    name: >-
      listDeploymentsAtManagementGroupNext(string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtManagementGroupNext(nextPageLink: string,
        callback: ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource'
    name: >-
      listDeploymentsAtResource(string, string,
      Models.RemediationsListDeploymentsAtResourceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at resource scope.
    syntax:
      content: >-
        function listDeploymentsAtResource(resourceId: string, remediationName:
        string, options?:
        Models.RemediationsListDeploymentsAtResourceOptionalParams)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - Models.RemediationsListDeploymentsAtResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListDeploymentsAtResourceResponse>
        description: Promise<Models.RemediationsListDeploymentsAtResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource_2'
    name: >-
      listDeploymentsAtResource(string, string,
      RemediationsListDeploymentsAtResourceOptionalParams,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResource(resourceId: string, remediationName:
        string, options: RemediationsListDeploymentsAtResourceOptionalParams,
        callback: ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResource_1'
    name: >-
      listDeploymentsAtResource(string, string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResource(resourceId: string, remediationName:
        string, callback: ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup'
    name: >-
      listDeploymentsAtResourceGroup(string, string, string,
      Models.RemediationsListDeploymentsAtResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at resource group scope.
    syntax:
      content: >-
        function listDeploymentsAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options?:
        Models.RemediationsListDeploymentsAtResourceGroupOptionalParams)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - Models.RemediationsListDeploymentsAtResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListDeploymentsAtResourceGroupResponse>
        description: Promise<Models.RemediationsListDeploymentsAtResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup_2'
    name: >-
      listDeploymentsAtResourceGroup(string, string, string,
      RemediationsListDeploymentsAtResourceGroupOptionalParams,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, options:
        RemediationsListDeploymentsAtResourceGroupOptionalParams, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroup_1'
    name: >-
      listDeploymentsAtResourceGroup(string, string, string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceGroup(subscriptionId: string,
        resourceGroupName: string, remediationName: string, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext'
    name: 'listDeploymentsAtResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at resource group scope.
    syntax:
      content: >-
        function listDeploymentsAtResourceGroupNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.RemediationsListDeploymentsAtResourceGroupNextResponse>
        description: Promise<Models.RemediationsListDeploymentsAtResourceGroupNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: >-
      @azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext_2
    name: >-
      listDeploymentsAtResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceGroupNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: >-
      @azure/arm-policyinsights.Remediations.listDeploymentsAtResourceGroupNext_1
    name: >-
      listDeploymentsAtResourceGroupNext(string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceGroupNext(nextPageLink: string,
        callback: ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext'
    name: 'listDeploymentsAtResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at resource scope.
    syntax:
      content: >-
        function listDeploymentsAtResourceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListDeploymentsAtResourceNextResponse>
        description: Promise<Models.RemediationsListDeploymentsAtResourceNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext_2'
    name: >-
      listDeploymentsAtResourceNext(string, RequestOptionsBase,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtResourceNext_1'
    name: >-
      listDeploymentsAtResourceNext(string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtResourceNext(nextPageLink: string, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription'
    name: >-
      listDeploymentsAtSubscription(string, string,
      Models.RemediationsListDeploymentsAtSubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at subscription scope.
    syntax:
      content: >-
        function listDeploymentsAtSubscription(subscriptionId: string,
        remediationName: string, options?:
        Models.RemediationsListDeploymentsAtSubscriptionOptionalParams)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - Models.RemediationsListDeploymentsAtSubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListDeploymentsAtSubscriptionResponse>
        description: Promise<Models.RemediationsListDeploymentsAtSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription_2'
    name: >-
      listDeploymentsAtSubscription(string, string,
      RemediationsListDeploymentsAtSubscriptionOptionalParams,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtSubscription(subscriptionId: string,
        remediationName: string, options:
        RemediationsListDeploymentsAtSubscriptionOptionalParams, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListDeploymentsAtSubscriptionOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscription_1'
    name: >-
      listDeploymentsAtSubscription(string, string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtSubscription(subscriptionId: string,
        remediationName: string, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: remediationName
          type:
            - string
          description: The name of the remediation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext'
    name: 'listDeploymentsAtSubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all deployments for a remediation at subscription scope.
    syntax:
      content: >-
        function listDeploymentsAtSubscriptionNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.RemediationsListDeploymentsAtSubscriptionNextResponse>
        description: Promise<Models.RemediationsListDeploymentsAtSubscriptionNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext_2'
    name: >-
      listDeploymentsAtSubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtSubscriptionNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listDeploymentsAtSubscriptionNext_1'
    name: >-
      listDeploymentsAtSubscriptionNext(string,
      ServiceCallback<RemediationDeploymentsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsAtSubscriptionNext(nextPageLink: string,
        callback: ServiceCallback<RemediationDeploymentsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroup'
    name: >-
      listForManagementGroup(string,
      Models.RemediationsListForManagementGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the management group.
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, options?:
        Models.RemediationsListForManagementGroupOptionalParams)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: options
          type:
            - Models.RemediationsListForManagementGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForManagementGroupResponse>
        description: Promise<Models.RemediationsListForManagementGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroup_2'
    name: >-
      listForManagementGroup(string,
      RemediationsListForManagementGroupOptionalParams,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, options:
        RemediationsListForManagementGroupOptionalParams, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListForManagementGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroup_1'
    name: 'listForManagementGroup(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: managementGroupId
          type:
            - string
          description: Management group ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroupNext'
    name: 'listForManagementGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the management group.
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForManagementGroupNextResponse>
        description: Promise<Models.RemediationsListForManagementGroupNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroupNext_2'
    name: >-
      listForManagementGroupNext(string, RequestOptionsBase,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForManagementGroupNext_1'
    name: 'listForManagementGroupNext(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResource'
    name: 'listForResource(string, Models.RemediationsListForResourceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for a resource.
    syntax:
      content: >-
        function listForResource(resourceId: string, options?:
        Models.RemediationsListForResourceOptionalParams)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: options
          type:
            - Models.RemediationsListForResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForResourceResponse>
        description: Promise<Models.RemediationsListForResourceResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResource_2'
    name: >-
      listForResource(string, RemediationsListForResourceOptionalParams,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceId: string, options:
        RemediationsListForResourceOptionalParams, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListForResourceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResource_1'
    name: 'listForResource(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceId: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: resourceId
          type:
            - string
          description: Resource ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroup'
    name: >-
      listForResourceGroup(string, string,
      Models.RemediationsListForResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the subscription.
    syntax:
      content: >-
        function listForResourceGroup(subscriptionId: string, resourceGroupName:
        string, options?: Models.RemediationsListForResourceGroupOptionalParams)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: options
          type:
            - Models.RemediationsListForResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForResourceGroupResponse>
        description: Promise<Models.RemediationsListForResourceGroupResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroup_2'
    name: >-
      listForResourceGroup(string, string,
      RemediationsListForResourceGroupOptionalParams,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(subscriptionId: string, resourceGroupName:
        string, options: RemediationsListForResourceGroupOptionalParams,
        callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListForResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroup_1'
    name: >-
      listForResourceGroup(string, string,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(subscriptionId: string, resourceGroupName:
        string, callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: resourceGroupName
          type:
            - string
          description: Resource group name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroupNext'
    name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the subscription.
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForResourceGroupNextResponse>
        description: Promise<Models.RemediationsListForResourceGroupNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroupNext_2'
    name: >-
      listForResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceGroupNext_1'
    name: 'listForResourceGroupNext(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceNext'
    name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for a resource.
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForResourceNextResponse>
        description: Promise<Models.RemediationsListForResourceNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceNext_2'
    name: >-
      listForResourceNext(string, RequestOptionsBase,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForResourceNext_1'
    name: 'listForResourceNext(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscription'
    name: >-
      listForSubscription(string,
      Models.RemediationsListForSubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the subscription.
    syntax:
      content: >-
        function listForSubscription(subscriptionId: string, options?:
        Models.RemediationsListForSubscriptionOptionalParams)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: options
          type:
            - Models.RemediationsListForSubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForSubscriptionResponse>
        description: Promise<Models.RemediationsListForSubscriptionResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscription_2'
    name: >-
      listForSubscription(string, RemediationsListForSubscriptionOptionalParams,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForSubscription(subscriptionId: string, options:
        RemediationsListForSubscriptionOptionalParams, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: options
          type:
            - >-
              @azure/arm-policyinsights.RemediationsListForSubscriptionOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscription_1'
    name: 'listForSubscription(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForSubscription(subscriptionId: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Microsoft Azure subscription ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscriptionNext'
    name: 'listForSubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all remediations for the subscription.
    syntax:
      content: >-
        function listForSubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RemediationsListForSubscriptionNextResponse>
        description: Promise<Models.RemediationsListForSubscriptionNextResponse>
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscriptionNext_2'
    name: >-
      listForSubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<RemediationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForSubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.listForSubscriptionNext_1'
    name: 'listForSubscriptionNext(string, ServiceCallback<RemediationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForSubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<RemediationListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
          description: |
            The callback
    package: '@azure/arm-policyinsights'
  - uid: '@azure/arm-policyinsights.Remediations.constructor'
    name: Remediations(PolicyInsightsClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Remediations.
    syntax:
      content: 'new Remediations(client: PolicyInsightsClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-policyinsights.PolicyInsightsClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-policyinsights'
references:
  - uid: '@azure/arm-policyinsights.PolicyInsightsClientContext'
    name: PolicyInsightsClientContext
    spec.typeScript:
      - name: PolicyInsightsClientContext
        fullName: PolicyInsightsClientContext
        uid: '@azure/arm-policyinsights.PolicyInsightsClientContext'
  - uid: ServiceCallback<@azure/arm-policyinsights.Remediation>
    name: Remediation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Remediation
        fullName: Remediation
        uid: '@azure/arm-policyinsights.Remediation'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-policyinsights.Remediation'
    name: Remediation
    spec.typeScript:
      - name: Remediation
        fullName: Remediation
        uid: '@azure/arm-policyinsights.Remediation'
  - uid: >-
      ServiceCallback<@azure/arm-policyinsights.RemediationDeploymentsListResult>
    name: RemediationDeploymentsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RemediationDeploymentsListResult
        fullName: RemediationDeploymentsListResult
        uid: '@azure/arm-policyinsights.RemediationDeploymentsListResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-policyinsights.RemediationsListDeploymentsAtManagementGroupOptionalParams
    name: RemediationsListDeploymentsAtManagementGroupOptionalParams
    spec.typeScript:
      - name: RemediationsListDeploymentsAtManagementGroupOptionalParams
        fullName: RemediationsListDeploymentsAtManagementGroupOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListDeploymentsAtManagementGroupOptionalParams
  - uid: >-
      @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceOptionalParams
    name: RemediationsListDeploymentsAtResourceOptionalParams
    spec.typeScript:
      - name: RemediationsListDeploymentsAtResourceOptionalParams
        fullName: RemediationsListDeploymentsAtResourceOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceOptionalParams
  - uid: >-
      @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceGroupOptionalParams
    name: RemediationsListDeploymentsAtResourceGroupOptionalParams
    spec.typeScript:
      - name: RemediationsListDeploymentsAtResourceGroupOptionalParams
        fullName: RemediationsListDeploymentsAtResourceGroupOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListDeploymentsAtResourceGroupOptionalParams
  - uid: >-
      @azure/arm-policyinsights.RemediationsListDeploymentsAtSubscriptionOptionalParams
    name: RemediationsListDeploymentsAtSubscriptionOptionalParams
    spec.typeScript:
      - name: RemediationsListDeploymentsAtSubscriptionOptionalParams
        fullName: RemediationsListDeploymentsAtSubscriptionOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListDeploymentsAtSubscriptionOptionalParams
  - uid: ServiceCallback<@azure/arm-policyinsights.RemediationListResult>
    name: RemediationListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RemediationListResult
        fullName: RemediationListResult
        uid: '@azure/arm-policyinsights.RemediationListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-policyinsights.RemediationsListForManagementGroupOptionalParams'
    name: RemediationsListForManagementGroupOptionalParams
    spec.typeScript:
      - name: RemediationsListForManagementGroupOptionalParams
        fullName: RemediationsListForManagementGroupOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListForManagementGroupOptionalParams
  - uid: '@azure/arm-policyinsights.RemediationsListForResourceOptionalParams'
    name: RemediationsListForResourceOptionalParams
    spec.typeScript:
      - name: RemediationsListForResourceOptionalParams
        fullName: RemediationsListForResourceOptionalParams
        uid: '@azure/arm-policyinsights.RemediationsListForResourceOptionalParams'
  - uid: '@azure/arm-policyinsights.RemediationsListForResourceGroupOptionalParams'
    name: RemediationsListForResourceGroupOptionalParams
    spec.typeScript:
      - name: RemediationsListForResourceGroupOptionalParams
        fullName: RemediationsListForResourceGroupOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListForResourceGroupOptionalParams
  - uid: '@azure/arm-policyinsights.RemediationsListForSubscriptionOptionalParams'
    name: RemediationsListForSubscriptionOptionalParams
    spec.typeScript:
      - name: RemediationsListForSubscriptionOptionalParams
        fullName: RemediationsListForSubscriptionOptionalParams
        uid: >-
          @azure/arm-policyinsights.RemediationsListForSubscriptionOptionalParams
