### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-mysql.Databases'
    name: Databases
    fullName: Databases
    children:
      - '@azure/arm-mysql.Databases.beginCreateOrUpdate'
      - '@azure/arm-mysql.Databases.beginDeleteMethod'
      - '@azure/arm-mysql.Databases.createOrUpdate'
      - '@azure/arm-mysql.Databases.constructor'
      - '@azure/arm-mysql.Databases.deleteMethod'
      - '@azure/arm-mysql.Databases.get'
      - '@azure/arm-mysql.Databases.get_2'
      - '@azure/arm-mysql.Databases.get_1'
      - '@azure/arm-mysql.Databases.listByServer'
      - '@azure/arm-mysql.Databases.listByServer_2'
      - '@azure/arm-mysql.Databases.listByServer_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Databases.
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-mysql.Database'
          description: The required parameters for creating or updating a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a database.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-mysql.Database'
          description: The required parameters for creating or updating a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesCreateOrUpdateResponse>
        description: Promise<Models.DatabasesCreateOrUpdateResponse>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.constructor'
    name: Databases(MySQLManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Databases.
    syntax:
      content: 'new Databases(client: MySQLManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-mysql.MySQLManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a database.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about a database.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesGetResponse>
        description: Promise<Models.DatabasesGetResponse>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Database>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mysql.Database>
          description: |
            The callback
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.get_1'
    name: 'get(string, string, string, ServiceCallback<Database>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, callback: ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mysql.Database>
          description: |
            The callback
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.listByServer'
    name: 'listByServer(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the databases in a given server.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListByServerResponse>
        description: Promise<Models.DatabasesListByServerResponse>
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.listByServer_2'
    name: >-
      listByServer(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mysql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-mysql'
  - uid: '@azure/arm-mysql.Databases.listByServer_1'
    name: 'listByServer(string, string, ServiceCallback<DatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mysql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-mysql'
references:
  - uid: '@azure/arm-mysql.MySQLManagementClientContext'
    name: MySQLManagementClientContext
    spec.typeScript:
      - name: MySQLManagementClientContext
        fullName: MySQLManagementClientContext
        uid: '@azure/arm-mysql.MySQLManagementClientContext'
  - uid: '@azure/arm-mysql.Database'
    name: Database
    spec.typeScript:
      - name: Database
        fullName: Database
        uid: '@azure/arm-mysql.Database'
  - uid: ServiceCallback<@azure/arm-mysql.Database>
    name: Database>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Database
        fullName: Database
        uid: '@azure/arm-mysql.Database'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-mysql.DatabaseListResult>
    name: DatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseListResult
        fullName: DatabaseListResult
        uid: '@azure/arm-mysql.DatabaseListResult'
      - name: '>'
        fullName: '>'
