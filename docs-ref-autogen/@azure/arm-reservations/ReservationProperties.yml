### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-reservations.ReservationProperties'
    name: ReservationProperties
    fullName: ReservationProperties
    children:
      - '@azure/arm-reservations.ReservationProperties.appliedScopes'
      - '@azure/arm-reservations.ReservationProperties.appliedScopeType'
      - '@azure/arm-reservations.ReservationProperties.billingPlan'
      - '@azure/arm-reservations.ReservationProperties.billingScopeId'
      - '@azure/arm-reservations.ReservationProperties.displayName'
      - '@azure/arm-reservations.ReservationProperties.effectiveDateTime'
      - '@azure/arm-reservations.ReservationProperties.expiryDate'
      - '@azure/arm-reservations.ReservationProperties.extendedStatusInfo'
      - '@azure/arm-reservations.ReservationProperties.instanceFlexibility'
      - '@azure/arm-reservations.ReservationProperties.lastUpdatedDateTime'
      - '@azure/arm-reservations.ReservationProperties.mergeProperties'
      - '@azure/arm-reservations.ReservationProperties.provisioningState'
      - '@azure/arm-reservations.ReservationProperties.quantity'
      - '@azure/arm-reservations.ReservationProperties.renew'
      - '@azure/arm-reservations.ReservationProperties.renewDestination'
      - '@azure/arm-reservations.ReservationProperties.renewProperties'
      - '@azure/arm-reservations.ReservationProperties.renewSource'
      - '@azure/arm-reservations.ReservationProperties.reservedResourceType'
      - '@azure/arm-reservations.ReservationProperties.skuDescription'
      - '@azure/arm-reservations.ReservationProperties.splitProperties'
      - '@azure/arm-reservations.ReservationProperties.term'
    langs:
      - typeScript
    type: interface
    summary: An interface representing ReservationProperties.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.appliedScopes'
    name: appliedScopes
    fullName: appliedScopes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'appliedScopes?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.appliedScopeType'
    name: appliedScopeType
    fullName: appliedScopeType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''Single'', ''Shared'''
    optional: true
    syntax:
      content: 'appliedScopeType?: AppliedScopeType'
      return:
        type:
          - '@azure/arm-reservations.AppliedScopeType'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.billingPlan'
    name: billingPlan
    fullName: billingPlan
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''Upfront'', ''Monthly'''
    optional: true
    syntax:
      content: 'billingPlan?: ReservationBillingPlan'
      return:
        type:
          - '@azure/arm-reservations.ReservationBillingPlan'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.billingScopeId'
    name: billingScopeId
    fullName: billingScopeId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'billingScopeId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.displayName'
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: Friendly name for user to easily identify the reservation
    optional: true
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.effectiveDateTime'
    name: effectiveDateTime
    fullName: effectiveDateTime
    children: []
    langs:
      - typeScript
    type: property
    summary: DateTime of the Reservation starting when this version is effective from.
    optional: true
    syntax:
      content: 'effectiveDateTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.expiryDate'
    name: expiryDate
    fullName: expiryDate
    children: []
    langs:
      - typeScript
    type: property
    summary: This is the date when the Reservation will expire.
    optional: true
    syntax:
      content: 'expiryDate?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.extendedStatusInfo'
    name: extendedStatusInfo
    fullName: extendedStatusInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'extendedStatusInfo?: ExtendedStatusInfo'
      return:
        type:
          - '@azure/arm-reservations.ExtendedStatusInfo'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.instanceFlexibility'
    name: instanceFlexibility
    fullName: instanceFlexibility
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''On'', ''Off'''
    optional: true
    syntax:
      content: 'instanceFlexibility?: InstanceFlexibility'
      return:
        type:
          - '@azure/arm-reservations.InstanceFlexibility'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.lastUpdatedDateTime'
    name: lastUpdatedDateTime
    fullName: lastUpdatedDateTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      DateTime of the last time the Reservation was updated.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'lastUpdatedDateTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.mergeProperties'
    name: mergeProperties
    fullName: mergeProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'mergeProperties?: ReservationMergeProperties'
      return:
        type:
          - '@azure/arm-reservations.ReservationMergeProperties'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.provisioningState'
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: Current state of the reservation.
    optional: true
    syntax:
      content: 'provisioningState?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.quantity'
    name: quantity
    fullName: quantity
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'quantity?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.renew'
    name: renew
    fullName: renew
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'renew?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.renewDestination'
    name: renewDestination
    fullName: renewDestination
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Reservation Id of the reservation which is purchased because of renew.
      Format of the resource

      Id is

      /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
    optional: true
    syntax:
      content: 'renewDestination?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.renewProperties'
    name: renewProperties
    fullName: renewProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'renewProperties?: RenewPropertiesResponse'
      return:
        type:
          - '@azure/arm-reservations.RenewPropertiesResponse'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.renewSource'
    name: renewSource
    fullName: renewSource
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Reservation Id of the reservation from which this reservation is renewed.
      Format of the

      resource Id is

      /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
    optional: true
    syntax:
      content: 'renewSource?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.reservedResourceType'
    name: reservedResourceType
    fullName: reservedResourceType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Possible values include: 'VirtualMachines', 'SqlDatabases', 'SuseLinux',
      'CosmosDb', 'RedHat',

      'SqlDataWarehouse', 'VMwareCloudSimple', 'RedHatOsa'
    optional: true
    syntax:
      content: 'reservedResourceType?: ReservedResourceType'
      return:
        type:
          - '@azure/arm-reservations.ReservedResourceType'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.skuDescription'
    name: skuDescription
    fullName: skuDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: Description of the SKU in english.
    optional: true
    syntax:
      content: 'skuDescription?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.splitProperties'
    name: splitProperties
    fullName: splitProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'splitProperties?: ReservationSplitProperties'
      return:
        type:
          - '@azure/arm-reservations.ReservationSplitProperties'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.ReservationProperties.term'
    name: term
    fullName: term
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''P1Y'', ''P3Y'''
    optional: true
    syntax:
      content: 'term?: ReservationTerm'
      return:
        type:
          - '@azure/arm-reservations.ReservationTerm'
        description: ''
    package: '@azure/arm-reservations'
references:
  - uid: '@azure/arm-reservations.AppliedScopeType'
    name: AppliedScopeType
    spec.typeScript:
      - name: AppliedScopeType
        fullName: AppliedScopeType
        uid: '@azure/arm-reservations.AppliedScopeType'
  - uid: '@azure/arm-reservations.ReservationBillingPlan'
    name: ReservationBillingPlan
    spec.typeScript:
      - name: ReservationBillingPlan
        fullName: ReservationBillingPlan
        uid: '@azure/arm-reservations.ReservationBillingPlan'
  - uid: '@azure/arm-reservations.ExtendedStatusInfo'
    name: ExtendedStatusInfo
    spec.typeScript:
      - name: ExtendedStatusInfo
        fullName: ExtendedStatusInfo
        uid: '@azure/arm-reservations.ExtendedStatusInfo'
  - uid: '@azure/arm-reservations.InstanceFlexibility'
    name: InstanceFlexibility
    spec.typeScript:
      - name: InstanceFlexibility
        fullName: InstanceFlexibility
        uid: '@azure/arm-reservations.InstanceFlexibility'
  - uid: '@azure/arm-reservations.ReservationMergeProperties'
    name: ReservationMergeProperties
    spec.typeScript:
      - name: ReservationMergeProperties
        fullName: ReservationMergeProperties
        uid: '@azure/arm-reservations.ReservationMergeProperties'
  - uid: '@azure/arm-reservations.RenewPropertiesResponse'
    name: RenewPropertiesResponse
    spec.typeScript:
      - name: RenewPropertiesResponse
        fullName: RenewPropertiesResponse
        uid: '@azure/arm-reservations.RenewPropertiesResponse'
  - uid: '@azure/arm-reservations.ReservedResourceType'
    name: ReservedResourceType
    spec.typeScript:
      - name: ReservedResourceType
        fullName: ReservedResourceType
        uid: '@azure/arm-reservations.ReservedResourceType'
  - uid: '@azure/arm-reservations.ReservationSplitProperties'
    name: ReservationSplitProperties
    spec.typeScript:
      - name: ReservationSplitProperties
        fullName: ReservationSplitProperties
        uid: '@azure/arm-reservations.ReservationSplitProperties'
  - uid: '@azure/arm-reservations.ReservationTerm'
    name: ReservationTerm
    spec.typeScript:
      - name: ReservationTerm
        fullName: ReservationTerm
        uid: '@azure/arm-reservations.ReservationTerm'
