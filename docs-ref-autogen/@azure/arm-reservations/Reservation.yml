### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-reservations.Reservation'
    name: Reservation
    fullName: Reservation
    children:
      - '@azure/arm-reservations.Reservation.availableScopes'
      - '@azure/arm-reservations.Reservation.beginAvailableScopes'
      - '@azure/arm-reservations.Reservation.beginMerge'
      - '@azure/arm-reservations.Reservation.beginSplit'
      - '@azure/arm-reservations.Reservation.beginUpdate'
      - '@azure/arm-reservations.Reservation.get'
      - '@azure/arm-reservations.Reservation.get_2'
      - '@azure/arm-reservations.Reservation.get_1'
      - '@azure/arm-reservations.Reservation.list'
      - '@azure/arm-reservations.Reservation.list_2'
      - '@azure/arm-reservations.Reservation.list_1'
      - '@azure/arm-reservations.Reservation.listNext'
      - '@azure/arm-reservations.Reservation.listNext_2'
      - '@azure/arm-reservations.Reservation.listNext_1'
      - '@azure/arm-reservations.Reservation.listRevisions'
      - '@azure/arm-reservations.Reservation.listRevisions_2'
      - '@azure/arm-reservations.Reservation.listRevisions_1'
      - '@azure/arm-reservations.Reservation.listRevisionsNext'
      - '@azure/arm-reservations.Reservation.listRevisionsNext_2'
      - '@azure/arm-reservations.Reservation.listRevisionsNext_1'
      - '@azure/arm-reservations.Reservation.merge'
      - '@azure/arm-reservations.Reservation.constructor'
      - '@azure/arm-reservations.Reservation.split'
      - '@azure/arm-reservations.Reservation.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a Reservation.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.availableScopes'
    name: 'availableScopes(string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get Available Scopes for `Reservation`.
    syntax:
      content: >-
        function availableScopes(reservationOrderId: string, reservationId:
        string, body: string[], options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: body
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationAvailableScopesResponse>
        description: Promise<Models.ReservationAvailableScopesResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.beginAvailableScopes'
    name: 'beginAvailableScopes(string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get Available Scopes for `Reservation`.
    syntax:
      content: >-
        function beginAvailableScopes(reservationOrderId: string, reservationId:
        string, body: string[], options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: body
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.beginMerge'
    name: 'beginMerge(string, MergeRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Merge the specified `Reservation`s into a new `Reservation`. The two
      `Reservation`s being merged

      must have same properties.
    syntax:
      content: >-
        function beginMerge(reservationOrderId: string, body: MergeRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: body
          type:
            - '@azure/arm-reservations.MergeRequest'
          description: Information needed for commercial request for a reservation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.beginSplit'
    name: 'beginSplit(string, SplitRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Split a `Reservation` into two `Reservation`s with specified quantity
      distribution.
    syntax:
      content: >-
        function beginSplit(reservationOrderId: string, body: SplitRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: body
          type:
            - '@azure/arm-reservations.SplitRequest'
          description: Information needed to Split a reservation item
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.beginUpdate'
    name: 'beginUpdate(string, string, Patch, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the applied scopes of the `Reservation`.
    syntax:
      content: >-
        function beginUpdate(reservationOrderId: string, reservationId: string,
        parameters: Patch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: parameters
          type:
            - '@azure/arm-reservations.Patch'
          description: Information needed to patch a reservation item
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.get'
    name: 'get(string, string, Models.ReservationGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get specific `Reservation` details.
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string,
        options?: Models.ReservationGetOptionalParams)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - Models.ReservationGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationGetResponse>
        description: Promise<Models.ReservationGetResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.get_2'
    name: >-
      get(string, string, ReservationGetOptionalParams,
      ServiceCallback<ReservationResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string, options:
        ReservationGetOptionalParams, callback:
        ServiceCallback<ReservationResponse>)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - '@azure/arm-reservations.ReservationGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationResponse>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.get_1'
    name: 'get(string, string, ServiceCallback<ReservationResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string,
        callback: ServiceCallback<ReservationResponse>)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationResponse>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List `Reservation`s within a single `ReservationOrder`.
    syntax:
      content: >-
        function list(reservationOrderId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationListResponse>
        description: Promise<Models.ReservationListResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.list_2'
    name: 'list(string, RequestOptionsBase, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(reservationOrderId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ReservationList>)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.list_1'
    name: 'list(string, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(reservationOrderId: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List `Reservation`s within a single `ReservationOrder`.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationListNextResponse>
        description: Promise<Models.ReservationListNextResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listNext_1'
    name: 'listNext(string, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisions'
    name: 'listRevisions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List of all the revisions for the `Reservation`.
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationListRevisionsResponse>
        description: Promise<Models.ReservationListRevisionsResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisions_2'
    name: >-
      listRevisions(string, string, RequestOptionsBase,
      ServiceCallback<ReservationList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisions_1'
    name: 'listRevisions(string, string, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, callback: ServiceCallback<ReservationList>)
      parameters:
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisionsNext'
    name: 'listRevisionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List of all the revisions for the `Reservation`.
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationListRevisionsNextResponse>
        description: Promise<Models.ReservationListRevisionsNextResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisionsNext_2'
    name: >-
      listRevisionsNext(string, RequestOptionsBase,
      ServiceCallback<ReservationList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.listRevisionsNext_1'
    name: 'listRevisionsNext(string, ServiceCallback<ReservationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.ReservationList>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.merge'
    name: 'merge(string, MergeRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Merge the specified `Reservation`s into a new `Reservation`. The two
      `Reservation`s being merged

      must have same properties.
    syntax:
      content: >-
        function merge(reservationOrderId: string, body: MergeRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: body
          type:
            - '@azure/arm-reservations.MergeRequest'
          description: Information needed for commercial request for a reservation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationMergeResponse>
        description: Promise<Models.ReservationMergeResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.constructor'
    name: Reservation(AzureReservationAPIContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Reservation.
    syntax:
      content: 'new Reservation(client: AzureReservationAPIContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-reservations.AzureReservationAPIContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.split'
    name: 'split(string, SplitRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Split a `Reservation` into two `Reservation`s with specified quantity
      distribution.
    syntax:
      content: >-
        function split(reservationOrderId: string, body: SplitRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: body
          type:
            - '@azure/arm-reservations.SplitRequest'
          description: Information needed to Split a reservation item
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationSplitResponse>
        description: Promise<Models.ReservationSplitResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.Reservation.update'
    name: 'update(string, string, Patch, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the applied scopes of the `Reservation`.
    syntax:
      content: >-
        function update(reservationOrderId: string, reservationId: string,
        parameters: Patch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type:
            - string
          description: Order Id of the reservation
        - id: reservationId
          type:
            - string
          description: Id of the Reservation Item
        - id: parameters
          type:
            - '@azure/arm-reservations.Patch'
          description: Information needed to patch a reservation item
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReservationUpdateResponse>
        description: Promise<Models.ReservationUpdateResponse>
    package: '@azure/arm-reservations'
references:
  - uid: '@azure/arm-reservations.AzureReservationAPIContext'
    name: AzureReservationAPIContext
    spec.typeScript:
      - name: AzureReservationAPIContext
        fullName: AzureReservationAPIContext
        uid: '@azure/arm-reservations.AzureReservationAPIContext'
  - uid: '@azure/arm-reservations.MergeRequest'
    name: MergeRequest
    spec.typeScript:
      - name: MergeRequest
        fullName: MergeRequest
        uid: '@azure/arm-reservations.MergeRequest'
  - uid: '@azure/arm-reservations.SplitRequest'
    name: SplitRequest
    spec.typeScript:
      - name: SplitRequest
        fullName: SplitRequest
        uid: '@azure/arm-reservations.SplitRequest'
  - uid: '@azure/arm-reservations.Patch'
    name: Patch
    spec.typeScript:
      - name: Patch
        fullName: Patch
        uid: '@azure/arm-reservations.Patch'
  - uid: ServiceCallback<@azure/arm-reservations.ReservationResponse>
    name: ReservationResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReservationResponse
        fullName: ReservationResponse
        uid: '@azure/arm-reservations.ReservationResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-reservations.ReservationGetOptionalParams'
    name: ReservationGetOptionalParams
    spec.typeScript:
      - name: ReservationGetOptionalParams
        fullName: ReservationGetOptionalParams
        uid: '@azure/arm-reservations.ReservationGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-reservations.ReservationList>
    name: ReservationList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReservationList
        fullName: ReservationList
        uid: '@azure/arm-reservations.ReservationList'
      - name: '>'
        fullName: '>'
