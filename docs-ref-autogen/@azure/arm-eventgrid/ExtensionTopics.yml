### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.ExtensionTopics'
    name: ExtensionTopics
    fullName: ExtensionTopics
    children:
      - '@azure/arm-eventgrid.ExtensionTopics.constructor'
      - '@azure/arm-eventgrid.ExtensionTopics.get'
      - '@azure/arm-eventgrid.ExtensionTopics.get_2'
      - '@azure/arm-eventgrid.ExtensionTopics.get_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ExtensionTopics.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.ExtensionTopics.constructor'
    name: ExtensionTopics(EventGridManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ExtensionTopics.
    syntax:
      content: 'new ExtensionTopics(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventgrid.EventGridManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.ExtensionTopics.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the properties of an extension topic.
    syntax:
      content: 'function get(scope: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The identifier of the resource to which extension topic is queried.
            The scope can

            be a subscription, or a resource group, or a top level resource
            belonging to a resource provider

            namespace. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for Azure resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ExtensionTopicsGetResponse>
        description: Promise<Models.ExtensionTopicsGetResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.ExtensionTopics.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<ExtensionTopic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, options: RequestOptionsBase, callback:
        ServiceCallback<ExtensionTopic>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The identifier of the resource to which extension topic is queried.
            The scope can

            be a subscription, or a resource group, or a top level resource
            belonging to a resource provider

            namespace. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for Azure resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.ExtensionTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.ExtensionTopics.get_1'
    name: 'get(string, ServiceCallback<ExtensionTopic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, callback: ServiceCallback<ExtensionTopic>)'
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The identifier of the resource to which extension topic is queried.
            The scope can

            be a subscription, or a resource group, or a top level resource
            belonging to a resource provider

            namespace. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for Azure resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.ExtensionTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: ServiceCallback<@azure/arm-eventgrid.ExtensionTopic>
    name: ExtensionTopic>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExtensionTopic
        fullName: ExtensionTopic
        uid: '@azure/arm-eventgrid.ExtensionTopic'
      - name: '>'
        fullName: '>'
