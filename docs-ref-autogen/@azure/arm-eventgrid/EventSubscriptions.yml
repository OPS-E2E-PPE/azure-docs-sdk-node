### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.EventSubscriptions'
    name: EventSubscriptions
    fullName: EventSubscriptions
    children:
      - '@azure/arm-eventgrid.EventSubscriptions.beginCreateOrUpdate'
      - '@azure/arm-eventgrid.EventSubscriptions.beginDeleteMethod'
      - '@azure/arm-eventgrid.EventSubscriptions.beginUpdate'
      - '@azure/arm-eventgrid.EventSubscriptions.createOrUpdate'
      - '@azure/arm-eventgrid.EventSubscriptions.deleteMethod'
      - '@azure/arm-eventgrid.EventSubscriptions.constructor'
      - '@azure/arm-eventgrid.EventSubscriptions.get'
      - '@azure/arm-eventgrid.EventSubscriptions.get_2'
      - '@azure/arm-eventgrid.EventSubscriptions.get_1'
      - '@azure/arm-eventgrid.EventSubscriptions.getFullUrl'
      - '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_2'
      - '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResource_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResource'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResource_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1'
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_1
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1'
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_1
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_1'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1'
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_1
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext'
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_1
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1'
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_2
      - >-
        @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_1
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_2'
      - '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_1'
      - '@azure/arm-eventgrid.EventSubscriptions.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a EventSubscriptions.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, EventSubscription,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates a new event subscription or updates an existing
      event subscription based

      on the specified scope.
    syntax:
      content: >-
        function beginCreateOrUpdate(scope: string, eventSubscriptionName:
        string, eventSubscriptionInfo: EventSubscription, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The identifier of the resource to which the event subscription needs
            to be created

            or updated. The scope can be a subscription, or a resource group, or
            a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >-
            Name of the event subscription. Event subscription names must be

            between 3 and 64 characters in length and should use alphanumeric
            letters only.
        - id: eventSubscriptionInfo
          type:
            - '@azure/arm-eventgrid.EventSubscription'
          description: |-
            Event subscription properties containing the destination and filter
            information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete an existing event subscription.
    syntax:
      content: >-
        function beginDeleteMethod(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.beginUpdate'
    name: >-
      beginUpdate(string, string, EventSubscriptionUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates an existing event subscription.
    syntax:
      content: >-
        function beginUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of existing event subscription. The scope can be a
            subscription, or a

            resource group, or a top level resource belonging to a resource
            provider namespace, or an

            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/'
            for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription to be updated.
        - id: eventSubscriptionUpdateParameters
          type:
            - '@azure/arm-eventgrid.EventSubscriptionUpdateParameters'
          description: Updated event subscription information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.createOrUpdate'
    name: >-
      createOrUpdate(string, string, EventSubscription,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates a new event subscription or updates an existing
      event subscription based

      on the specified scope.
    syntax:
      content: >-
        function createOrUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionInfo: EventSubscription, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The identifier of the resource to which the event subscription needs
            to be created

            or updated. The scope can be a subscription, or a resource group, or
            a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >-
            Name of the event subscription. Event subscription names must be

            between 3 and 64 characters in length and should use alphanumeric
            letters only.
        - id: eventSubscriptionInfo
          type:
            - '@azure/arm-eventgrid.EventSubscription'
          description: |-
            Event subscription properties containing the destination and filter
            information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsCreateOrUpdateResponse>
        description: Promise<Models.EventSubscriptionsCreateOrUpdateResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete an existing event subscription.
    syntax:
      content: >-
        function deleteMethod(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.constructor'
    name: EventSubscriptions(EventGridManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a EventSubscriptions.
    syntax:
      content: 'new EventSubscriptions(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventgrid.EventGridManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get properties of an event subscription.
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsGetResponse>
        description: Promise<Models.EventSubscriptionsGetResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscription>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.get_1'
    name: 'get(string, string, ServiceCallback<EventSubscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscription>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl'
    name: 'getFullUrl(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the full endpoint URL for an event subscription.
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsGetFullUrlResponse>
        description: Promise<Models.EventSubscriptionsGetFullUrlResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_2'
    name: >-
      getFullUrl(string, string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionFullUrl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionFullUrl>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_1'
    name: 'getFullUrl(string, string, ServiceCallback<EventSubscriptionFullUrl>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        callback: ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionFullUrl>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_2'
    name: >-
      listByDomainTopic(string, string, string,
      EventSubscriptionsListByDomainTopicOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options:
        EventSubscriptionsListByDomainTopicOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the top level domain.
        - id: topicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListByDomainTopicOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic'
    name: >-
      listByDomainTopic(string, string, string,
      Models.EventSubscriptionsListByDomainTopicOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions that have been created for a specific domain
      topic.
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options?:
        Models.EventSubscriptionsListByDomainTopicOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the top level domain.
        - id: topicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - Models.EventSubscriptionsListByDomainTopicOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListByDomainTopicResponse>
        description: Promise<Models.EventSubscriptionsListByDomainTopicResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_1'
    name: >-
      listByDomainTopic(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the top level domain.
        - id: topicName
          type:
            - string
          description: Name of the domain topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext'
    name: 'listByDomainTopicNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions that have been created for a specific domain
      topic.
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListByDomainTopicNextResponse>
        description: Promise<Models.EventSubscriptionsListByDomainTopicNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_2'
    name: >-
      listByDomainTopicNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_1'
    name: >-
      listByDomainTopicNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource_2'
    name: >-
      listByResource(string, string, string, string,
      EventSubscriptionsListByResourceOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options:
        EventSubscriptionsListByResourceOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the resource type.
        - id: resourceName
          type:
            - string
          description: Name of the resource.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListByResourceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource'
    name: >-
      listByResource(string, string, string, string,
      Models.EventSubscriptionsListByResourceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all event subscriptions that have been created for a specific topic.
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options?:
        Models.EventSubscriptionsListByResourceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the resource type.
        - id: resourceName
          type:
            - string
          description: Name of the resource.
        - id: options
          type:
            - Models.EventSubscriptionsListByResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListByResourceResponse>
        description: Promise<Models.EventSubscriptionsListByResourceResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource_1'
    name: >-
      listByResource(string, string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the resource type.
        - id: resourceName
          type:
            - string
          description: Name of the resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext'
    name: 'listByResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all event subscriptions that have been created for a specific topic.
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListByResourceNextResponse>
        description: Promise<Models.EventSubscriptionsListByResourceNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_2'
    name: >-
      listByResourceNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_1'
    name: 'listByResourceNext(string, ServiceCallback<EventSubscriptionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2'
    name: >-
      listGlobalByResourceGroup(string,
      EventSubscriptionsListGlobalByResourceGroupOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options:
        EventSubscriptionsListGlobalByResourceGroupOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup'
    name: >-
      listGlobalByResourceGroup(string,
      Models.EventSubscriptionsListGlobalByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under a specific Azure subscription
      and resource group.
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options?:
        Models.EventSubscriptionsListGlobalByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - Models.EventSubscriptionsListGlobalByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListGlobalByResourceGroupResponse>
        description: Promise<Models.EventSubscriptionsListGlobalByResourceGroupResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1'
    name: >-
      listGlobalByResourceGroup(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
    name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options:
        EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
    name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under a resource group for a specific
      topic type.
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options?:
        Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse>
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
    name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext
    name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under a resource group for a specific
      topic type.
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_2
    name: >-
      listGlobalByResourceGroupForTopicTypeNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_1
    name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext'
    name: 'listGlobalByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under a specific Azure subscription
      and resource group.
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalByResourceGroupNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_2'
    name: >-
      listGlobalByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_1'
    name: >-
      listGlobalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2'
    name: >-
      listGlobalBySubscription(EventSubscriptionsListGlobalBySubscriptionOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscription(options:
        EventSubscriptionsListGlobalBySubscriptionOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription'
    name: >-
      listGlobalBySubscription(Models.EventSubscriptionsListGlobalBySubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all aggregated global event subscriptions under a specific Azure
      subscription.
    syntax:
      content: >-
        function listGlobalBySubscription(options?:
        Models.EventSubscriptionsListGlobalBySubscriptionOptionalParams)
      parameters:
        - id: options
          type:
            - Models.EventSubscriptionsListGlobalBySubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListGlobalBySubscriptionResponse>
        description: Promise<Models.EventSubscriptionsListGlobalBySubscriptionResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1'
    name: listGlobalBySubscription(ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscription(callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
    name: >-
      listGlobalBySubscriptionForTopicType(string,
      EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options:
        EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
    name: >-
      listGlobalBySubscriptionForTopicType(string,
      Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under an Azure subscription for a
      topic type.
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options?:
        Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse>
        description: >-
          Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
    name: >-
      listGlobalBySubscriptionForTopicType(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext
    name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all global event subscriptions under an Azure subscription for a
      topic type.
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_2
    name: >-
      listGlobalBySubscriptionForTopicTypeNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_1
    name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext'
    name: 'listGlobalBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all aggregated global event subscriptions under a specific Azure
      subscription.
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListGlobalBySubscriptionNextResponse>
        description: Promise<Models.EventSubscriptionsListGlobalBySubscriptionNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_2'
    name: >-
      listGlobalBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_1'
    name: >-
      listGlobalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2'
    name: >-
      listRegionalByResourceGroup(string, string,
      EventSubscriptionsListRegionalByResourceGroupOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options:
        EventSubscriptionsListRegionalByResourceGroupOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup'
    name: >-
      listRegionalByResourceGroup(string, string,
      Models.EventSubscriptionsListRegionalByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group.
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: options
          type:
            - Models.EventSubscriptionsListRegionalByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalByResourceGroupResponse>
        description: Promise<Models.EventSubscriptionsListRegionalByResourceGroupResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1'
    name: >-
      listRegionalByResourceGroup(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
    name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options:
        EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
    name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group and topic type.
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
    name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext
    name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group and topic type.
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_2
    name: >-
      listRegionalByResourceGroupForTopicTypeNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_1
    name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext'
    name: 'listRegionalByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group.
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalByResourceGroupNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_2'
    name: >-
      listRegionalByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_1'
    name: >-
      listRegionalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2'
    name: >-
      listRegionalBySubscription(string,
      EventSubscriptionsListRegionalBySubscriptionOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, options:
        EventSubscriptionsListRegionalBySubscriptionOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription'
    name: >-
      listRegionalBySubscription(string,
      Models.EventSubscriptionsListRegionalBySubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription.
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionOptionalParams)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: options
          type:
            - Models.EventSubscriptionsListRegionalBySubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsListRegionalBySubscriptionResponse>
        description: Promise<Models.EventSubscriptionsListRegionalBySubscriptionResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1'
    name: >-
      listRegionalBySubscription(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
    name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options:
        EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
    name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      topic type.
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: options
          type:
            - >-
              Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
    name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: Name of the location.
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext
    name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      topic type.
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_2
    name: >-
      listRegionalBySubscriptionForTopicTypeNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_1
    name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext'
    name: 'listRegionalBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription.
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.EventSubscriptionsListRegionalBySubscriptionNextResponse>
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_2'
    name: >-
      listRegionalBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_1'
    name: >-
      listRegionalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventSubscriptions.update'
    name: >-
      update(string, string, EventSubscriptionUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates an existing event subscription.
    syntax:
      content: >-
        function update(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope of existing event subscription. The scope can be a
            subscription, or a

            resource group, or a top level resource belonging to a resource
            provider namespace, or an

            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/'
            for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription to be updated.
        - id: eventSubscriptionUpdateParameters
          type:
            - '@azure/arm-eventgrid.EventSubscriptionUpdateParameters'
          description: Updated event subscription information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventSubscriptionsUpdateResponse>
        description: Promise<Models.EventSubscriptionsUpdateResponse>
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: '@azure/arm-eventgrid.EventSubscription'
    name: EventSubscription
    spec.typeScript:
      - name: EventSubscription
        fullName: EventSubscription
        uid: '@azure/arm-eventgrid.EventSubscription'
  - uid: '@azure/arm-eventgrid.EventSubscriptionUpdateParameters'
    name: EventSubscriptionUpdateParameters
    spec.typeScript:
      - name: EventSubscriptionUpdateParameters
        fullName: EventSubscriptionUpdateParameters
        uid: '@azure/arm-eventgrid.EventSubscriptionUpdateParameters'
  - uid: ServiceCallback<@azure/arm-eventgrid.EventSubscription>
    name: EventSubscription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscription
        fullName: EventSubscription
        uid: '@azure/arm-eventgrid.EventSubscription'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.EventSubscriptionFullUrl>
    name: EventSubscriptionFullUrl>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscriptionFullUrl
        fullName: EventSubscriptionFullUrl
        uid: '@azure/arm-eventgrid.EventSubscriptionFullUrl'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.EventSubscriptionsListResult>
    name: EventSubscriptionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscriptionsListResult
        fullName: EventSubscriptionsListResult
        uid: '@azure/arm-eventgrid.EventSubscriptionsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicOptionalParams'
    name: EventSubscriptionsListByDomainTopicOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListByDomainTopicOptionalParams
        fullName: EventSubscriptionsListByDomainTopicOptionalParams
        uid: '@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicOptionalParams'
  - uid: '@azure/arm-eventgrid.EventSubscriptionsListByResourceOptionalParams'
    name: EventSubscriptionsListByResourceOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListByResourceOptionalParams
        fullName: EventSubscriptionsListByResourceOptionalParams
        uid: '@azure/arm-eventgrid.EventSubscriptionsListByResourceOptionalParams'
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupOptionalParams
    name: EventSubscriptionsListGlobalByResourceGroupOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListGlobalByResourceGroupOptionalParams
        fullName: EventSubscriptionsListGlobalByResourceGroupOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
    name: EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
        fullName: EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionOptionalParams
    name: EventSubscriptionsListGlobalBySubscriptionOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListGlobalBySubscriptionOptionalParams
        fullName: EventSubscriptionsListGlobalBySubscriptionOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
    name: EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
        fullName: EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupOptionalParams
    name: EventSubscriptionsListRegionalByResourceGroupOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListRegionalByResourceGroupOptionalParams
        fullName: EventSubscriptionsListRegionalByResourceGroupOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
    name: EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
    spec.typeScript:
      - name: >-
          EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
        fullName: >-
          EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionOptionalParams
    name: EventSubscriptionsListRegionalBySubscriptionOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListRegionalBySubscriptionOptionalParams
        fullName: EventSubscriptionsListRegionalBySubscriptionOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionOptionalParams
  - uid: >-
      @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
    name: EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
    spec.typeScript:
      - name: EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
        fullName: EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
        uid: >-
          @azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams
