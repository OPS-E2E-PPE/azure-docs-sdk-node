### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.SystemTopics'
    name: SystemTopics
    fullName: SystemTopics
    children:
      - '@azure/arm-eventgrid.SystemTopics.beginCreateOrUpdate'
      - '@azure/arm-eventgrid.SystemTopics.beginDeleteMethod'
      - '@azure/arm-eventgrid.SystemTopics.beginUpdate'
      - '@azure/arm-eventgrid.SystemTopics.createOrUpdate'
      - '@azure/arm-eventgrid.SystemTopics.deleteMethod'
      - '@azure/arm-eventgrid.SystemTopics.get'
      - '@azure/arm-eventgrid.SystemTopics.get_2'
      - '@azure/arm-eventgrid.SystemTopics.get_1'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroup'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroup_1'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroup_2'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext_2'
      - '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext_1'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscription'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscription_1'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscription_2'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext_2'
      - '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext_1'
      - '@azure/arm-eventgrid.SystemTopics.constructor'
      - '@azure/arm-eventgrid.SystemTopics.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a SystemTopics.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, SystemTopic,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously creates a new system topic with the specified parameters.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, systemTopicName:
        string, systemTopicInfo: SystemTopic, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: systemTopicInfo
          type:
            - '@azure/arm-eventgrid.SystemTopic'
          description: System Topic information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing system topic.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, systemTopicName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.beginUpdate'
    name: >-
      beginUpdate(string, string, SystemTopicUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates a system topic with the specified parameters.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, systemTopicName: string,
        systemTopicUpdateParameters: SystemTopicUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: systemTopicUpdateParameters
          type:
            - '@azure/arm-eventgrid.SystemTopicUpdateParameters'
          description: SystemTopic update information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.createOrUpdate'
    name: 'createOrUpdate(string, string, SystemTopic, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously creates a new system topic with the specified parameters.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, systemTopicName:
        string, systemTopicInfo: SystemTopic, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: systemTopicInfo
          type:
            - '@azure/arm-eventgrid.SystemTopic'
          description: System Topic information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsCreateOrUpdateResponse>
        description: Promise<Models.SystemTopicsCreateOrUpdateResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing system topic.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, systemTopicName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get properties of a system topic.
    syntax:
      content: >-
        function get(resourceGroupName: string, systemTopicName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsGetResponse>
        description: Promise<Models.SystemTopicsGetResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<SystemTopic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, systemTopicName: string,
        options: RequestOptionsBase, callback: ServiceCallback<SystemTopic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.get_1'
    name: 'get(string, string, ServiceCallback<SystemTopic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, systemTopicName: string,
        callback: ServiceCallback<SystemTopic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.SystemTopicsListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the system topics under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.SystemTopicsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - Models.SystemTopicsListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsListByResourceGroupResponse>
        description: Promise<Models.SystemTopicsListByResourceGroupResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<SystemTopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, SystemTopicsListByResourceGroupOptionalParams,
      ServiceCallback<SystemTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        SystemTopicsListByResourceGroupOptionalParams, callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - '@azure/arm-eventgrid.SystemTopicsListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the system topics under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsListByResourceGroupNextResponse>
        description: Promise<Models.SystemTopicsListByResourceGroupNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<SystemTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<SystemTopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscription'
    name: listBySubscription(Models.SystemTopicsListBySubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the system topics under an Azure subscription.
    syntax:
      content: >-
        function listBySubscription(options?:
        Models.SystemTopicsListBySubscriptionOptionalParams)
      parameters:
        - id: options
          type:
            - Models.SystemTopicsListBySubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsListBySubscriptionResponse>
        description: Promise<Models.SystemTopicsListBySubscriptionResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscription_1'
    name: listBySubscription(ServiceCallback<SystemTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscription_2'
    name: >-
      listBySubscription(SystemTopicsListBySubscriptionOptionalParams,
      ServiceCallback<SystemTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(options:
        SystemTopicsListBySubscriptionOptionalParams, callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-eventgrid.SystemTopicsListBySubscriptionOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext'
    name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the system topics under an Azure subscription.
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsListBySubscriptionNextResponse>
        description: Promise<Models.SystemTopicsListBySubscriptionNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext_2'
    name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<SystemTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.listBySubscriptionNext_1'
    name: 'listBySubscriptionNext(string, ServiceCallback<SystemTopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<SystemTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.constructor'
    name: SystemTopics(EventGridManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SystemTopics.
    syntax:
      content: 'new SystemTopics(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventgrid.EventGridManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.SystemTopics.update'
    name: >-
      update(string, string, SystemTopicUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates a system topic with the specified parameters.
    syntax:
      content: >-
        function update(resourceGroupName: string, systemTopicName: string,
        systemTopicUpdateParameters: SystemTopicUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: systemTopicName
          type:
            - string
          description: Name of the system topic.
        - id: systemTopicUpdateParameters
          type:
            - '@azure/arm-eventgrid.SystemTopicUpdateParameters'
          description: SystemTopic update information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SystemTopicsUpdateResponse>
        description: Promise<Models.SystemTopicsUpdateResponse>
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: '@azure/arm-eventgrid.SystemTopic'
    name: SystemTopic
    spec.typeScript:
      - name: SystemTopic
        fullName: SystemTopic
        uid: '@azure/arm-eventgrid.SystemTopic'
  - uid: '@azure/arm-eventgrid.SystemTopicUpdateParameters'
    name: SystemTopicUpdateParameters
    spec.typeScript:
      - name: SystemTopicUpdateParameters
        fullName: SystemTopicUpdateParameters
        uid: '@azure/arm-eventgrid.SystemTopicUpdateParameters'
  - uid: ServiceCallback<@azure/arm-eventgrid.SystemTopic>
    name: SystemTopic>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SystemTopic
        fullName: SystemTopic
        uid: '@azure/arm-eventgrid.SystemTopic'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.SystemTopicsListResult>
    name: SystemTopicsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SystemTopicsListResult
        fullName: SystemTopicsListResult
        uid: '@azure/arm-eventgrid.SystemTopicsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventgrid.SystemTopicsListByResourceGroupOptionalParams'
    name: SystemTopicsListByResourceGroupOptionalParams
    spec.typeScript:
      - name: SystemTopicsListByResourceGroupOptionalParams
        fullName: SystemTopicsListByResourceGroupOptionalParams
        uid: '@azure/arm-eventgrid.SystemTopicsListByResourceGroupOptionalParams'
  - uid: '@azure/arm-eventgrid.SystemTopicsListBySubscriptionOptionalParams'
    name: SystemTopicsListBySubscriptionOptionalParams
    spec.typeScript:
      - name: SystemTopicsListBySubscriptionOptionalParams
        fullName: SystemTopicsListBySubscriptionOptionalParams
        uid: '@azure/arm-eventgrid.SystemTopicsListBySubscriptionOptionalParams'
