### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.Topics'
    name: Topics
    fullName: Topics
    children:
      - '@azure/arm-eventgrid.Topics.beginCreateOrUpdate'
      - '@azure/arm-eventgrid.Topics.beginDeleteMethod'
      - '@azure/arm-eventgrid.Topics.beginUpdate'
      - '@azure/arm-eventgrid.Topics.createOrUpdate'
      - '@azure/arm-eventgrid.Topics.deleteMethod'
      - '@azure/arm-eventgrid.Topics.get'
      - '@azure/arm-eventgrid.Topics.get_2'
      - '@azure/arm-eventgrid.Topics.get_1'
      - '@azure/arm-eventgrid.Topics.listByResourceGroup'
      - '@azure/arm-eventgrid.Topics.listByResourceGroup_1'
      - '@azure/arm-eventgrid.Topics.listByResourceGroup_2'
      - '@azure/arm-eventgrid.Topics.listByResourceGroupNext'
      - '@azure/arm-eventgrid.Topics.listByResourceGroupNext_2'
      - '@azure/arm-eventgrid.Topics.listByResourceGroupNext_1'
      - '@azure/arm-eventgrid.Topics.listBySubscription'
      - '@azure/arm-eventgrid.Topics.listBySubscription_1'
      - '@azure/arm-eventgrid.Topics.listBySubscription_2'
      - '@azure/arm-eventgrid.Topics.listBySubscriptionNext'
      - '@azure/arm-eventgrid.Topics.listBySubscriptionNext_2'
      - '@azure/arm-eventgrid.Topics.listBySubscriptionNext_1'
      - '@azure/arm-eventgrid.Topics.listEventTypes'
      - '@azure/arm-eventgrid.Topics.listEventTypes_2'
      - '@azure/arm-eventgrid.Topics.listEventTypes_1'
      - '@azure/arm-eventgrid.Topics.listSharedAccessKeys'
      - '@azure/arm-eventgrid.Topics.listSharedAccessKeys_2'
      - '@azure/arm-eventgrid.Topics.listSharedAccessKeys_1'
      - '@azure/arm-eventgrid.Topics.regenerateKey'
      - '@azure/arm-eventgrid.Topics.regenerateKey_2'
      - '@azure/arm-eventgrid.Topics.regenerateKey_1'
      - '@azure/arm-eventgrid.Topics.constructor'
      - '@azure/arm-eventgrid.Topics.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a Topics.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Topic, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously creates a new topic with the specified parameters.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, topicName:
        string, topicInfo: Topic, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: topicInfo
          type:
            - '@azure/arm-eventgrid.Topic'
          description: Topic information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing topic.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, topicName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.beginUpdate'
    name: >-
      beginUpdate(string, string, TopicUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates a topic with the specified parameters.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, topicName: string,
        topicUpdateParameters: TopicUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: topicUpdateParameters
          type:
            - '@azure/arm-eventgrid.TopicUpdateParameters'
          description: Topic update information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.createOrUpdate'
    name: 'createOrUpdate(string, string, Topic, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously creates a new topic with the specified parameters.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, topicName: string,
        topicInfo: Topic, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: topicInfo
          type:
            - '@azure/arm-eventgrid.Topic'
          description: Topic information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsCreateOrUpdateResponse>
        description: Promise<Models.TopicsCreateOrUpdateResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing topic.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, topicName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get properties of a topic.
    syntax:
      content: >-
        function get(resourceGroupName: string, topicName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsGetResponse>
        description: Promise<Models.TopicsGetResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Topic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, topicName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Topic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.Topic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.get_1'
    name: 'get(string, string, ServiceCallback<Topic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, topicName: string, callback:
        ServiceCallback<Topic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.Topic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.TopicsListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.TopicsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - Models.TopicsListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListByResourceGroupResponse>
        description: Promise<Models.TopicsListByResourceGroupResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<TopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<TopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, TopicsListByResourceGroupOptionalParams,
      ServiceCallback<TopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        TopicsListByResourceGroupOptionalParams, callback:
        ServiceCallback<TopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: options
          type:
            - '@azure/arm-eventgrid.TopicsListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListByResourceGroupNextResponse>
        description: Promise<Models.TopicsListByResourceGroupNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<TopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<TopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<TopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<TopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscription'
    name: listBySubscription(Models.TopicsListBySubscriptionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics under an Azure subscription.
    syntax:
      content: >-
        function listBySubscription(options?:
        Models.TopicsListBySubscriptionOptionalParams)
      parameters:
        - id: options
          type:
            - Models.TopicsListBySubscriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListBySubscriptionResponse>
        description: Promise<Models.TopicsListBySubscriptionResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscription_1'
    name: listBySubscription(ServiceCallback<TopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listBySubscription(callback: ServiceCallback<TopicsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscription_2'
    name: >-
      listBySubscription(TopicsListBySubscriptionOptionalParams,
      ServiceCallback<TopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(options:
        TopicsListBySubscriptionOptionalParams, callback:
        ServiceCallback<TopicsListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-eventgrid.TopicsListBySubscriptionOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscriptionNext'
    name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics under an Azure subscription.
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListBySubscriptionNextResponse>
        description: Promise<Models.TopicsListBySubscriptionNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscriptionNext_2'
    name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<TopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<TopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listBySubscriptionNext_1'
    name: 'listBySubscriptionNext(string, ServiceCallback<TopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<TopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listEventTypes'
    name: 'listEventTypes(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List event types for a topic.
    syntax:
      content: >-
        function listEventTypes(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the topic type.
        - id: resourceName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListEventTypesResponse>
        description: Promise<Models.TopicsListEventTypesResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listEventTypes_2'
    name: >-
      listEventTypes(string, string, string, string, RequestOptionsBase,
      ServiceCallback<EventTypesListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listEventTypes(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EventTypesListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the topic type.
        - id: resourceName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventTypesListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listEventTypes_1'
    name: >-
      listEventTypes(string, string, string, string,
      ServiceCallback<EventTypesListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listEventTypes(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, callback:
        ServiceCallback<EventTypesListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type:
            - string
          description: Name of the topic type.
        - id: resourceName
          type:
            - string
          description: Name of the topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.EventTypesListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listSharedAccessKeys'
    name: 'listSharedAccessKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the two keys used to publish to a topic.
    syntax:
      content: >-
        function listSharedAccessKeys(resourceGroupName: string, topicName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsListSharedAccessKeysResponse>
        description: Promise<Models.TopicsListSharedAccessKeysResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listSharedAccessKeys_2'
    name: >-
      listSharedAccessKeys(string, string, RequestOptionsBase,
      ServiceCallback<TopicSharedAccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSharedAccessKeys(resourceGroupName: string, topicName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<TopicSharedAccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicSharedAccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.listSharedAccessKeys_1'
    name: >-
      listSharedAccessKeys(string, string,
      ServiceCallback<TopicSharedAccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSharedAccessKeys(resourceGroupName: string, topicName:
        string, callback: ServiceCallback<TopicSharedAccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicSharedAccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.regenerateKey'
    name: >-
      regenerateKey(string, string, TopicRegenerateKeyRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerate a shared access key for a topic.
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, topicName: string,
        regenerateKeyRequest: TopicRegenerateKeyRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: regenerateKeyRequest
          type:
            - '@azure/arm-eventgrid.TopicRegenerateKeyRequest'
          description: Request body to regenerate key.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsRegenerateKeyResponse>
        description: Promise<Models.TopicsRegenerateKeyResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.regenerateKey_2'
    name: >-
      regenerateKey(string, string, TopicRegenerateKeyRequest,
      RequestOptionsBase, ServiceCallback<TopicSharedAccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, topicName: string,
        regenerateKeyRequest: TopicRegenerateKeyRequest, options:
        RequestOptionsBase, callback: ServiceCallback<TopicSharedAccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: regenerateKeyRequest
          type:
            - '@azure/arm-eventgrid.TopicRegenerateKeyRequest'
          description: Request body to regenerate key.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicSharedAccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.regenerateKey_1'
    name: >-
      regenerateKey(string, string, TopicRegenerateKeyRequest,
      ServiceCallback<TopicSharedAccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, topicName: string,
        regenerateKeyRequest: TopicRegenerateKeyRequest, callback:
        ServiceCallback<TopicSharedAccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: regenerateKeyRequest
          type:
            - '@azure/arm-eventgrid.TopicRegenerateKeyRequest'
          description: Request body to regenerate key.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.TopicSharedAccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.constructor'
    name: Topics(EventGridManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Topics.
    syntax:
      content: 'new Topics(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventgrid.EventGridManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topics.update'
    name: 'update(string, string, TopicUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously updates a topic with the specified parameters.
    syntax:
      content: >-
        function update(resourceGroupName: string, topicName: string,
        topicUpdateParameters: TopicUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: topicName
          type:
            - string
          description: Name of the topic.
        - id: topicUpdateParameters
          type:
            - '@azure/arm-eventgrid.TopicUpdateParameters'
          description: Topic update information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopicsUpdateResponse>
        description: Promise<Models.TopicsUpdateResponse>
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: '@azure/arm-eventgrid.Topic'
    name: Topic
    spec.typeScript:
      - name: Topic
        fullName: Topic
        uid: '@azure/arm-eventgrid.Topic'
  - uid: '@azure/arm-eventgrid.TopicUpdateParameters'
    name: TopicUpdateParameters
    spec.typeScript:
      - name: TopicUpdateParameters
        fullName: TopicUpdateParameters
        uid: '@azure/arm-eventgrid.TopicUpdateParameters'
  - uid: ServiceCallback<@azure/arm-eventgrid.Topic>
    name: Topic>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Topic
        fullName: Topic
        uid: '@azure/arm-eventgrid.Topic'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.TopicsListResult>
    name: TopicsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TopicsListResult
        fullName: TopicsListResult
        uid: '@azure/arm-eventgrid.TopicsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventgrid.TopicsListByResourceGroupOptionalParams'
    name: TopicsListByResourceGroupOptionalParams
    spec.typeScript:
      - name: TopicsListByResourceGroupOptionalParams
        fullName: TopicsListByResourceGroupOptionalParams
        uid: '@azure/arm-eventgrid.TopicsListByResourceGroupOptionalParams'
  - uid: '@azure/arm-eventgrid.TopicsListBySubscriptionOptionalParams'
    name: TopicsListBySubscriptionOptionalParams
    spec.typeScript:
      - name: TopicsListBySubscriptionOptionalParams
        fullName: TopicsListBySubscriptionOptionalParams
        uid: '@azure/arm-eventgrid.TopicsListBySubscriptionOptionalParams'
  - uid: ServiceCallback<@azure/arm-eventgrid.EventTypesListResult>
    name: EventTypesListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventTypesListResult
        fullName: EventTypesListResult
        uid: '@azure/arm-eventgrid.EventTypesListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.TopicSharedAccessKeys>
    name: TopicSharedAccessKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TopicSharedAccessKeys
        fullName: TopicSharedAccessKeys
        uid: '@azure/arm-eventgrid.TopicSharedAccessKeys'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventgrid.TopicRegenerateKeyRequest'
    name: TopicRegenerateKeyRequest
    spec.typeScript:
      - name: TopicRegenerateKeyRequest
        fullName: TopicRegenerateKeyRequest
        uid: '@azure/arm-eventgrid.TopicRegenerateKeyRequest'
