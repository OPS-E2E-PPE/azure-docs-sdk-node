### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.EventGridManagementClient'
    name: EventGridManagementClient
    fullName: EventGridManagementClient
    children:
      - '@azure/arm-eventgrid.EventGridManagementClient.acceptLanguage'
      - '@azure/arm-eventgrid.EventGridManagementClient.apiVersion'
      - '@azure/arm-eventgrid.EventGridManagementClient.beginLongRunningRequest'
      - '@azure/arm-eventgrid.EventGridManagementClient.credentials'
      - '@azure/arm-eventgrid.EventGridManagementClient.domains'
      - '@azure/arm-eventgrid.EventGridManagementClient.domainTopics'
      - '@azure/arm-eventgrid.EventGridManagementClient.eventChannels'
      - '@azure/arm-eventgrid.EventGridManagementClient.constructor'
      - '@azure/arm-eventgrid.EventGridManagementClient.eventSubscriptions'
      - '@azure/arm-eventgrid.EventGridManagementClient.extensionTopics'
      - >-
        @azure/arm-eventgrid.EventGridManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-eventgrid.EventGridManagementClient.operations'
      - '@azure/arm-eventgrid.EventGridManagementClient.partnerNamespaces'
      - '@azure/arm-eventgrid.EventGridManagementClient.partnerRegistrations'
      - >-
        @azure/arm-eventgrid.EventGridManagementClient.partnerTopicEventSubscriptions
      - '@azure/arm-eventgrid.EventGridManagementClient.partnerTopics'
      - >-
        @azure/arm-eventgrid.EventGridManagementClient.privateEndpointConnections
      - '@azure/arm-eventgrid.EventGridManagementClient.privateLinkResources'
      - '@azure/arm-eventgrid.EventGridManagementClient.restoreLROPoller'
      - '@azure/arm-eventgrid.EventGridManagementClient.sendLongRunningRequest'
      - '@azure/arm-eventgrid.EventGridManagementClient.sendLRORequest'
      - '@azure/arm-eventgrid.EventGridManagementClient.sendOperationRequest'
      - '@azure/arm-eventgrid.EventGridManagementClient.sendRequest'
      - '@azure/arm-eventgrid.EventGridManagementClient.subscriptionId'
      - >-
        @azure/arm-eventgrid.EventGridManagementClient.systemTopicEventSubscriptions
      - '@azure/arm-eventgrid.EventGridManagementClient.systemTopics'
      - '@azure/arm-eventgrid.EventGridManagementClient.topics'
      - '@azure/arm-eventgrid.EventGridManagementClient.topicTypes'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-eventgrid.EventGridManagementClientContext'
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.domains'
    name: domains
    fullName: domains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domains: Domains'
      return:
        type:
          - '@azure/arm-eventgrid.Domains'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.domainTopics'
    name: domainTopics
    fullName: domainTopics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domainTopics: DomainTopics'
      return:
        type:
          - '@azure/arm-eventgrid.DomainTopics'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.eventChannels'
    name: eventChannels
    fullName: eventChannels
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eventChannels: EventChannels'
      return:
        type:
          - '@azure/arm-eventgrid.EventChannels'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.constructor'
    name: >-
      EventGridManagementClient(ServiceClientCredentials, string,
      Models.EventGridManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the EventGridManagementClient class.
    syntax:
      content: >-
        new EventGridManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.EventGridManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: >-
            Subscription credentials that uniquely identify a Microsoft Azure

            subscription. The subscription ID forms part of the URI for every
            service call.
        - id: options
          type:
            - Models.EventGridManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.eventSubscriptions'
    name: eventSubscriptions
    fullName: eventSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eventSubscriptions: EventSubscriptions'
      return:
        type:
          - '@azure/arm-eventgrid.EventSubscriptions'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.extensionTopics'
    name: extensionTopics
    fullName: extensionTopics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'extensionTopics: ExtensionTopics'
      return:
        type:
          - '@azure/arm-eventgrid.ExtensionTopics'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventGridManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-eventgrid.Operations'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.partnerNamespaces'
    name: partnerNamespaces
    fullName: partnerNamespaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'partnerNamespaces: PartnerNamespaces'
      return:
        type:
          - '@azure/arm-eventgrid.PartnerNamespaces'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.partnerRegistrations'
    name: partnerRegistrations
    fullName: partnerRegistrations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'partnerRegistrations: PartnerRegistrations'
      return:
        type:
          - '@azure/arm-eventgrid.PartnerRegistrations'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventGridManagementClient.partnerTopicEventSubscriptions
    name: partnerTopicEventSubscriptions
    fullName: partnerTopicEventSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'partnerTopicEventSubscriptions: PartnerTopicEventSubscriptions'
      return:
        type:
          - '@azure/arm-eventgrid.PartnerTopicEventSubscriptions'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.partnerTopics'
    name: partnerTopics
    fullName: partnerTopics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'partnerTopics: PartnerTopics'
      return:
        type:
          - '@azure/arm-eventgrid.PartnerTopics'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.privateEndpointConnections'
    name: privateEndpointConnections
    fullName: privateEndpointConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'privateEndpointConnections: PrivateEndpointConnections'
      return:
        type:
          - '@azure/arm-eventgrid.PrivateEndpointConnections'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.privateLinkResources'
    name: privateLinkResources
    fullName: privateLinkResources
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'privateLinkResources: PrivateLinkResources'
      return:
        type:
          - '@azure/arm-eventgrid.PrivateLinkResources'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: >-
      @azure/arm-eventgrid.EventGridManagementClient.systemTopicEventSubscriptions
    name: systemTopicEventSubscriptions
    fullName: systemTopicEventSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'systemTopicEventSubscriptions: SystemTopicEventSubscriptions'
      return:
        type:
          - '@azure/arm-eventgrid.SystemTopicEventSubscriptions'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.systemTopics'
    name: systemTopics
    fullName: systemTopics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'systemTopics: SystemTopics'
      return:
        type:
          - '@azure/arm-eventgrid.SystemTopics'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.topics'
    name: topics
    fullName: topics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'topics: Topics'
      return:
        type:
          - '@azure/arm-eventgrid.Topics'
        description: ''
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.EventGridManagementClient.topicTypes'
    name: topicTypes
    fullName: topicTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'topicTypes: TopicTypes'
      return:
        type:
          - '@azure/arm-eventgrid.TopicTypes'
        description: ''
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: '@azure/arm-eventgrid.DomainTopics'
    name: DomainTopics
    spec.typeScript:
      - name: DomainTopics
        fullName: DomainTopics
        uid: '@azure/arm-eventgrid.DomainTopics'
  - uid: '@azure/arm-eventgrid.Domains'
    name: Domains
    spec.typeScript:
      - name: Domains
        fullName: Domains
        uid: '@azure/arm-eventgrid.Domains'
  - uid: '@azure/arm-eventgrid.EventChannels'
    name: EventChannels
    spec.typeScript:
      - name: EventChannels
        fullName: EventChannels
        uid: '@azure/arm-eventgrid.EventChannels'
  - uid: '@azure/arm-eventgrid.EventSubscriptions'
    name: EventSubscriptions
    spec.typeScript:
      - name: EventSubscriptions
        fullName: EventSubscriptions
        uid: '@azure/arm-eventgrid.EventSubscriptions'
  - uid: '@azure/arm-eventgrid.ExtensionTopics'
    name: ExtensionTopics
    spec.typeScript:
      - name: ExtensionTopics
        fullName: ExtensionTopics
        uid: '@azure/arm-eventgrid.ExtensionTopics'
  - uid: '@azure/arm-eventgrid.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-eventgrid.Operations'
  - uid: '@azure/arm-eventgrid.PartnerNamespaces'
    name: PartnerNamespaces
    spec.typeScript:
      - name: PartnerNamespaces
        fullName: PartnerNamespaces
        uid: '@azure/arm-eventgrid.PartnerNamespaces'
  - uid: '@azure/arm-eventgrid.PartnerRegistrations'
    name: PartnerRegistrations
    spec.typeScript:
      - name: PartnerRegistrations
        fullName: PartnerRegistrations
        uid: '@azure/arm-eventgrid.PartnerRegistrations'
  - uid: '@azure/arm-eventgrid.PartnerTopicEventSubscriptions'
    name: PartnerTopicEventSubscriptions
    spec.typeScript:
      - name: PartnerTopicEventSubscriptions
        fullName: PartnerTopicEventSubscriptions
        uid: '@azure/arm-eventgrid.PartnerTopicEventSubscriptions'
  - uid: '@azure/arm-eventgrid.PartnerTopics'
    name: PartnerTopics
    spec.typeScript:
      - name: PartnerTopics
        fullName: PartnerTopics
        uid: '@azure/arm-eventgrid.PartnerTopics'
  - uid: '@azure/arm-eventgrid.PrivateEndpointConnections'
    name: PrivateEndpointConnections
    spec.typeScript:
      - name: PrivateEndpointConnections
        fullName: PrivateEndpointConnections
        uid: '@azure/arm-eventgrid.PrivateEndpointConnections'
  - uid: '@azure/arm-eventgrid.PrivateLinkResources'
    name: PrivateLinkResources
    spec.typeScript:
      - name: PrivateLinkResources
        fullName: PrivateLinkResources
        uid: '@azure/arm-eventgrid.PrivateLinkResources'
  - uid: '@azure/arm-eventgrid.SystemTopicEventSubscriptions'
    name: SystemTopicEventSubscriptions
    spec.typeScript:
      - name: SystemTopicEventSubscriptions
        fullName: SystemTopicEventSubscriptions
        uid: '@azure/arm-eventgrid.SystemTopicEventSubscriptions'
  - uid: '@azure/arm-eventgrid.SystemTopics'
    name: SystemTopics
    spec.typeScript:
      - name: SystemTopics
        fullName: SystemTopics
        uid: '@azure/arm-eventgrid.SystemTopics'
  - uid: '@azure/arm-eventgrid.TopicTypes'
    name: TopicTypes
    spec.typeScript:
      - name: TopicTypes
        fullName: TopicTypes
        uid: '@azure/arm-eventgrid.TopicTypes'
  - uid: '@azure/arm-eventgrid.Topics'
    name: Topics
    spec.typeScript:
      - name: Topics
        fullName: Topics
        uid: '@azure/arm-eventgrid.Topics'
