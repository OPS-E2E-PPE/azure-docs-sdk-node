### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.DomainTopics'
    name: DomainTopics
    fullName: DomainTopics
    children:
      - '@azure/arm-eventgrid.DomainTopics.beginCreateOrUpdate'
      - '@azure/arm-eventgrid.DomainTopics.beginDeleteMethod'
      - '@azure/arm-eventgrid.DomainTopics.createOrUpdate'
      - '@azure/arm-eventgrid.DomainTopics.deleteMethod'
      - '@azure/arm-eventgrid.DomainTopics.constructor'
      - '@azure/arm-eventgrid.DomainTopics.get'
      - '@azure/arm-eventgrid.DomainTopics.get_2'
      - '@azure/arm-eventgrid.DomainTopics.get_1'
      - '@azure/arm-eventgrid.DomainTopics.listByDomain_2'
      - '@azure/arm-eventgrid.DomainTopics.listByDomain'
      - '@azure/arm-eventgrid.DomainTopics.listByDomain_1'
      - '@azure/arm-eventgrid.DomainTopics.listByDomainNext'
      - '@azure/arm-eventgrid.DomainTopics.listByDomainNext_2'
      - '@azure/arm-eventgrid.DomainTopics.listByDomainNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a DomainTopics.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates or updates a new domain topic with the specified
      parameters.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, domainName:
        string, domainTopicName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing domain topic.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, domainName:
        string, domainTopicName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.createOrUpdate'
    name: 'createOrUpdate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates or updates a new domain topic with the specified
      parameters.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, domainName: string,
        domainTopicName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DomainTopicsCreateOrUpdateResponse>
        description: Promise<Models.DomainTopicsCreateOrUpdateResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete existing domain topic.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, domainName: string,
        domainTopicName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the domain topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.constructor'
    name: DomainTopics(EventGridManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a DomainTopics.
    syntax:
      content: 'new DomainTopics(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventgrid.EventGridManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get properties of a domain topic.
    syntax:
      content: >-
        function get(resourceGroupName: string, domainName: string,
        domainTopicName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DomainTopicsGetResponse>
        description: Promise<Models.DomainTopicsGetResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<DomainTopic>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, domainName: string,
        domainTopicName: string, options: RequestOptionsBase, callback:
        ServiceCallback<DomainTopic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the topic.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.get_1'
    name: 'get(string, string, string, ServiceCallback<DomainTopic>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, domainName: string,
        domainTopicName: string, callback: ServiceCallback<DomainTopic>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Name of the domain.
        - id: domainTopicName
          type:
            - string
          description: Name of the topic.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopic>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomain_2'
    name: >-
      listByDomain(string, string, DomainTopicsListByDomainOptionalParams,
      ServiceCallback<DomainTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomain(resourceGroupName: string, domainName: string,
        options: DomainTopicsListByDomainOptionalParams, callback:
        ServiceCallback<DomainTopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Domain name.
        - id: options
          type:
            - '@azure/arm-eventgrid.DomainTopicsListByDomainOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomain'
    name: >-
      listByDomain(string, string,
      Models.DomainTopicsListByDomainOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics in a domain.
    syntax:
      content: >-
        function listByDomain(resourceGroupName: string, domainName: string,
        options?: Models.DomainTopicsListByDomainOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Domain name.
        - id: options
          type:
            - Models.DomainTopicsListByDomainOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DomainTopicsListByDomainResponse>
        description: Promise<Models.DomainTopicsListByDomainResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomain_1'
    name: 'listByDomain(string, string, ServiceCallback<DomainTopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomain(resourceGroupName: string, domainName: string,
        callback: ServiceCallback<DomainTopicsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type:
            - string
          description: Domain name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomainNext'
    name: 'listByDomainNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the topics in a domain.
    syntax:
      content: >-
        function listByDomainNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DomainTopicsListByDomainNextResponse>
        description: Promise<Models.DomainTopicsListByDomainNextResponse>
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomainNext_2'
    name: >-
      listByDomainNext(string, RequestOptionsBase,
      ServiceCallback<DomainTopicsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DomainTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.DomainTopics.listByDomainNext_1'
    name: 'listByDomainNext(string, ServiceCallback<DomainTopicsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainNext(nextPageLink: string, callback:
        ServiceCallback<DomainTopicsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventgrid.DomainTopicsListResult>
          description: |
            The callback
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
    name: EventGridManagementClientContext
    spec.typeScript:
      - name: EventGridManagementClientContext
        fullName: EventGridManagementClientContext
        uid: '@azure/arm-eventgrid.EventGridManagementClientContext'
  - uid: ServiceCallback<@azure/arm-eventgrid.DomainTopic>
    name: DomainTopic>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainTopic
        fullName: DomainTopic
        uid: '@azure/arm-eventgrid.DomainTopic'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventgrid.DomainTopicsListResult>
    name: DomainTopicsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainTopicsListResult
        fullName: DomainTopicsListResult
        uid: '@azure/arm-eventgrid.DomainTopicsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventgrid.DomainTopicsListByDomainOptionalParams'
    name: DomainTopicsListByDomainOptionalParams
    spec.typeScript:
      - name: DomainTopicsListByDomainOptionalParams
        fullName: DomainTopicsListByDomainOptionalParams
        uid: '@azure/arm-eventgrid.DomainTopicsListByDomainOptionalParams'
