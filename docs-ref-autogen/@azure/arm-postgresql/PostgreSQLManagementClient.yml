### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient'
    name: PostgreSQLManagementClient
    fullName: PostgreSQLManagementClient
    children:
      - '@azure/arm-postgresql.PostgreSQLManagementClient.acceptLanguage'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.apiVersion'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.beginLongRunningRequest'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.checkNameAvailability'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.configurations'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.credentials'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.databases'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.firewallRules'
      - >-
        @azure/arm-postgresql.PostgreSQLManagementClient.locationBasedPerformanceTier
      - '@azure/arm-postgresql.PostgreSQLManagementClient.logFiles'
      - >-
        @azure/arm-postgresql.PostgreSQLManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-postgresql.PostgreSQLManagementClient.operations'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.constructor'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.replicas'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.restoreLROPoller'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.sendLongRunningRequest'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.sendLRORequest'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.sendOperationRequest'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.sendRequest'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.servers'
      - >-
        @azure/arm-postgresql.PostgreSQLManagementClient.serverSecurityAlertPolicies
      - '@azure/arm-postgresql.PostgreSQLManagementClient.subscriptionId'
      - '@azure/arm-postgresql.PostgreSQLManagementClient.virtualNetworkRules'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-postgresql.PostgreSQLManagementClientContext'
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.checkNameAvailability'
    name: checkNameAvailability
    fullName: checkNameAvailability
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'checkNameAvailability: CheckNameAvailability'
      return:
        type:
          - '@azure/arm-postgresql.CheckNameAvailability'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.configurations'
    name: configurations
    fullName: configurations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'configurations: Configurations'
      return:
        type:
          - '@azure/arm-postgresql.Configurations'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.databases'
    name: databases
    fullName: databases
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'databases: Databases'
      return:
        type:
          - '@azure/arm-postgresql.Databases'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.firewallRules'
    name: firewallRules
    fullName: firewallRules
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'firewallRules: FirewallRules'
      return:
        type:
          - '@azure/arm-postgresql.FirewallRules'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: >-
      @azure/arm-postgresql.PostgreSQLManagementClient.locationBasedPerformanceTier
    name: locationBasedPerformanceTier
    fullName: locationBasedPerformanceTier
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'locationBasedPerformanceTier: LocationBasedPerformanceTier'
      return:
        type:
          - '@azure/arm-postgresql.LocationBasedPerformanceTier'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.logFiles'
    name: logFiles
    fullName: logFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'logFiles: LogFiles'
      return:
        type:
          - '@azure/arm-postgresql.LogFiles'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: >-
      @azure/arm-postgresql.PostgreSQLManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-postgresql.Operations'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.constructor'
    name: >-
      PostgreSQLManagementClient(ServiceClientCredentials, string,
      Models.PostgreSQLManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the PostgreSQLManagementClient class.
    syntax:
      content: >-
        new PostgreSQLManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.PostgreSQLManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: The subscription ID that identifies an Azure subscription.
        - id: options
          type:
            - Models.PostgreSQLManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.replicas'
    name: replicas
    fullName: replicas
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'replicas: Replicas'
      return:
        type:
          - '@azure/arm-postgresql.Replicas'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.servers'
    name: servers
    fullName: servers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'servers: Servers'
      return:
        type:
          - '@azure/arm-postgresql.Servers'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: >-
      @azure/arm-postgresql.PostgreSQLManagementClient.serverSecurityAlertPolicies
    name: serverSecurityAlertPolicies
    fullName: serverSecurityAlertPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'serverSecurityAlertPolicies: ServerSecurityAlertPolicies'
      return:
        type:
          - '@azure/arm-postgresql.ServerSecurityAlertPolicies'
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-postgresql'
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClient.virtualNetworkRules'
    name: virtualNetworkRules
    fullName: virtualNetworkRules
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'virtualNetworkRules: VirtualNetworkRules'
      return:
        type:
          - '@azure/arm-postgresql.VirtualNetworkRules'
        description: ''
    package: '@azure/arm-postgresql'
references:
  - uid: '@azure/arm-postgresql.PostgreSQLManagementClientContext'
    name: PostgreSQLManagementClientContext
    spec.typeScript:
      - name: PostgreSQLManagementClientContext
        fullName: PostgreSQLManagementClientContext
        uid: '@azure/arm-postgresql.PostgreSQLManagementClientContext'
  - uid: '@azure/arm-postgresql.CheckNameAvailability'
    name: CheckNameAvailability
    spec.typeScript:
      - name: CheckNameAvailability
        fullName: CheckNameAvailability
        uid: '@azure/arm-postgresql.CheckNameAvailability'
  - uid: '@azure/arm-postgresql.Configurations'
    name: Configurations
    spec.typeScript:
      - name: Configurations
        fullName: Configurations
        uid: '@azure/arm-postgresql.Configurations'
  - uid: '@azure/arm-postgresql.Databases'
    name: Databases
    spec.typeScript:
      - name: Databases
        fullName: Databases
        uid: '@azure/arm-postgresql.Databases'
  - uid: '@azure/arm-postgresql.FirewallRules'
    name: FirewallRules
    spec.typeScript:
      - name: FirewallRules
        fullName: FirewallRules
        uid: '@azure/arm-postgresql.FirewallRules'
  - uid: '@azure/arm-postgresql.LocationBasedPerformanceTier'
    name: LocationBasedPerformanceTier
    spec.typeScript:
      - name: LocationBasedPerformanceTier
        fullName: LocationBasedPerformanceTier
        uid: '@azure/arm-postgresql.LocationBasedPerformanceTier'
  - uid: '@azure/arm-postgresql.LogFiles'
    name: LogFiles
    spec.typeScript:
      - name: LogFiles
        fullName: LogFiles
        uid: '@azure/arm-postgresql.LogFiles'
  - uid: '@azure/arm-postgresql.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-postgresql.Operations'
  - uid: '@azure/arm-postgresql.Replicas'
    name: Replicas
    spec.typeScript:
      - name: Replicas
        fullName: Replicas
        uid: '@azure/arm-postgresql.Replicas'
  - uid: '@azure/arm-postgresql.ServerSecurityAlertPolicies'
    name: ServerSecurityAlertPolicies
    spec.typeScript:
      - name: ServerSecurityAlertPolicies
        fullName: ServerSecurityAlertPolicies
        uid: '@azure/arm-postgresql.ServerSecurityAlertPolicies'
  - uid: '@azure/arm-postgresql.Servers'
    name: Servers
    spec.typeScript:
      - name: Servers
        fullName: Servers
        uid: '@azure/arm-postgresql.Servers'
  - uid: '@azure/arm-postgresql.VirtualNetworkRules'
    name: VirtualNetworkRules
    spec.typeScript:
      - name: VirtualNetworkRules
        fullName: VirtualNetworkRules
        uid: '@azure/arm-postgresql.VirtualNetworkRules'
