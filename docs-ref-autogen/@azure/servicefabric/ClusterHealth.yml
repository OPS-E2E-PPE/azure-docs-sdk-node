### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ClusterHealth'
    name: ClusterHealth
    fullName: ClusterHealth
    children:
      - '@azure/servicefabric.ClusterHealth.aggregatedHealthState'
      - '@azure/servicefabric.ClusterHealth.applicationHealthStates'
      - '@azure/servicefabric.ClusterHealth.healthEvents'
      - '@azure/servicefabric.ClusterHealth.healthStatistics'
      - '@azure/servicefabric.ClusterHealth.nodeHealthStates'
      - '@azure/servicefabric.ClusterHealth.unhealthyEvaluations'
    langs:
      - typeScript
    type: interface
    summary: >-
      Represents the health of the cluster.

      Contains the cluster aggregated health state, the cluster application and
      node health states as

      well as the health events and the unhealthy evaluations.
    extends:
      name: '@azure/servicefabric.EntityHealth'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.aggregatedHealthState'
    name: aggregatedHealthState
    fullName: aggregatedHealthState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The HealthState representing the aggregated health state of the entity
      computed by Health

      Manager.

      The health evaluation of the entity reflects all events reported on the
      entity and its

      children (if any).

      The aggregation is done by applying the desired health policy. Possible
      values include:

      'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
    optional: true
    syntax:
      content: 'aggregatedHealthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.applicationHealthStates'
    name: applicationHealthStates
    fullName: applicationHealthStates
    children: []
    langs:
      - typeScript
    type: property
    summary: Cluster application health states as found in the health store.
    optional: true
    syntax:
      content: 'applicationHealthStates?: ApplicationHealthState[]'
      return:
        type:
          - '@azure/servicefabric.ApplicationHealthState[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.healthEvents'
    name: healthEvents
    fullName: healthEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: The list of health events reported on the entity.
    optional: true
    syntax:
      content: 'healthEvents?: HealthEvent[]'
      return:
        type:
          - '@azure/servicefabric.HealthEvent[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.healthStatistics'
    name: healthStatistics
    fullName: healthStatistics
    children: []
    langs:
      - typeScript
    type: property
    summary: Shows the health statistics for all children types of the queried entity.
    optional: true
    syntax:
      content: 'healthStatistics?: HealthStatistics'
      return:
        type:
          - '@azure/servicefabric.HealthStatistics'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.nodeHealthStates'
    name: nodeHealthStates
    fullName: nodeHealthStates
    children: []
    langs:
      - typeScript
    type: property
    summary: Cluster node health states as found in the health store.
    optional: true
    syntax:
      content: 'nodeHealthStates?: NodeHealthState[]'
      return:
        type:
          - '@azure/servicefabric.NodeHealthState[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ClusterHealth.unhealthyEvaluations'
    name: unhealthyEvaluations
    fullName: unhealthyEvaluations
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The unhealthy evaluations that show why the current aggregated health
      state was returned by

      Health Manager.
    optional: true
    syntax:
      content: 'unhealthyEvaluations?: HealthEvaluationWrapper[]'
      return:
        type:
          - '@azure/servicefabric.HealthEvaluationWrapper[]'
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.EntityHealth'
    name: EntityHealth
    spec.typeScript:
      - name: EntityHealth
        fullName: EntityHealth
        uid: '@azure/servicefabric.EntityHealth'
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.ApplicationHealthState[]'
    name: 'ApplicationHealthState[]'
    spec.typeScript:
      - name: ApplicationHealthState
        fullName: ApplicationHealthState
        uid: '@azure/servicefabric.ApplicationHealthState'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthEvent[]'
    name: 'HealthEvent[]'
    spec.typeScript:
      - name: HealthEvent
        fullName: HealthEvent
        uid: '@azure/servicefabric.HealthEvent'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthStatistics'
    name: HealthStatistics
    spec.typeScript:
      - name: HealthStatistics
        fullName: HealthStatistics
        uid: '@azure/servicefabric.HealthStatistics'
  - uid: '@azure/servicefabric.NodeHealthState[]'
    name: 'NodeHealthState[]'
    spec.typeScript:
      - name: NodeHealthState
        fullName: NodeHealthState
        uid: '@azure/servicefabric.NodeHealthState'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.HealthEvaluationWrapper[]'
    name: 'HealthEvaluationWrapper[]'
    spec.typeScript:
      - name: HealthEvaluationWrapper
        fullName: HealthEvaluationWrapper
        uid: '@azure/servicefabric.HealthEvaluationWrapper'
      - name: '[]'
        fullName: '[]'
