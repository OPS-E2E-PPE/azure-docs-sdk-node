### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceInfo'
    name: StatelessServiceInfo
    fullName: StatelessServiceInfo
    children:
      - '@azure/servicefabric.StatelessServiceInfo.healthState'
      - '@azure/servicefabric.StatelessServiceInfo.id'
      - '@azure/servicefabric.StatelessServiceInfo.isServiceGroup'
      - '@azure/servicefabric.StatelessServiceInfo.manifestVersion'
      - '@azure/servicefabric.StatelessServiceInfo.name'
      - '@azure/servicefabric.StatelessServiceInfo.serviceKind'
      - '@azure/servicefabric.StatelessServiceInfo.serviceStatus'
      - '@azure/servicefabric.StatelessServiceInfo.typeName'
    langs:
      - typeScript
    type: interface
    summary: Information about a stateless Service Fabric service.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.healthState'
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The health state of a Service Fabric entity such as Cluster, Node,
      Application, Service,

      Partition, Replica etc. Possible values include: 'Invalid', 'Ok',
      'Warning', 'Error',

      'Unknown'
    optional: true
    syntax:
      content: 'healthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The identity of the service. This ID is an encoded representation of the
      service name. This is

      used in the REST APIs to identify the service resource.

      Starting in version 6.0, hierarchical names are delimited with the "\~"
      character. For

      example, if the service name is "fabric:/myapp/app1/svc1",

      the service identity would be "myapp~app1\~svc1" in 6.0+ and
      "myapp/app1/svc1" in previous

      versions.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.isServiceGroup'
    name: isServiceGroup
    fullName: isServiceGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the service is in a service group.
    optional: true
    syntax:
      content: 'isServiceGroup?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.manifestVersion'
    name: manifestVersion
    fullName: manifestVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: The version of the service manifest.
    optional: true
    syntax:
      content: 'manifestVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The full name of the service with ''fabric:'' URI scheme.'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.serviceKind'
    name: serviceKind
    fullName: serviceKind
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'serviceKind: "Stateless"'
      return:
        type:
          - '"Stateless"'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.serviceStatus'
    name: serviceStatus
    fullName: serviceStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The status of the application. Possible values include: 'Unknown',
      'Active', 'Upgrading',

      'Deleting', 'Creating', 'Failed'
    optional: true
    syntax:
      content: 'serviceStatus?: ServiceStatus'
      return:
        type:
          - '@azure/servicefabric.ServiceStatus'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.typeName'
    name: typeName
    fullName: typeName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of the service type as specified in the service manifest.
    optional: true
    syntax:
      content: 'typeName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.ServiceStatus'
    name: ServiceStatus
    spec.typeScript:
      - name: ServiceStatus
        fullName: ServiceStatus
        uid: '@azure/servicefabric.ServiceStatus'
