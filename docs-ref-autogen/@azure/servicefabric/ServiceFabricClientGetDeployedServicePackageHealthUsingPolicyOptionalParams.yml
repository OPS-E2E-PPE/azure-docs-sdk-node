### YamlMime:UniversalReference
items:
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    name: >-
      ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    fullName: >-
      ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    children:
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.abortSignal
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.applicationHealthPolicy
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.customHeaders
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.eventsHealthStateFilter
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.onDownloadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.onUploadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.timeout
      - >-
        @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.applicationHealthPolicy
    name: applicationHealthPolicy
    fullName: applicationHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Describes the health policies used to evaluate the health of an
      application or one of its

      children.

      If not present, the health evaluation uses the health policy from
      application manifest or the

      default health policy.
    optional: true
    syntax:
      content: 'applicationHealthPolicy?: ApplicationHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ApplicationHealthPolicy'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.eventsHealthStateFilter
    name: eventsHealthStateFilter
    fullName: eventsHealthStateFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Allows filtering the collection of HealthEvent objects returned based on
      health state.

      The possible values for this parameter include integer value of one of the
      following health

      states.

      Only events that match the filter are returned. All events are used to
      evaluate the aggregated

      health state.

      If not specified, all entries are returned. The state values are
      flag-based enumeration, so

      the value could be a combination of these values, obtained using the
      bitwise 'OR' operator.

      For example, If the provided value is 6 then all of the events with
      HealthState value of OK

      (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.

      - None - Filter that doesn't match any HealthState value. Used in order to
      return no results

      on a given collection of states. The value is 1.

      - Ok - Filter that matches input with HealthState value Ok. The value is
      2.

      - Warning - Filter that matches input with HealthState value Warning. The
      value is 4.

      - Error - Filter that matches input with HealthState value Error. The
      value is 8.

      - All - Filter that matches input with any HealthState value. The value is
      65535. Default

      value: 0.
    optional: true
    syntax:
      content: 'eventsHealthStateFilter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams.timeoutParameter
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The server timeout for performing the operation in seconds. This timeout
      specifies the time

      duration that the client is willing to wait for the requested operation to
      complete. The

      default value for this parameter is 60 seconds. Default value: 60.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ApplicationHealthPolicy'
    name: ApplicationHealthPolicy
    spec.typeScript:
      - name: ApplicationHealthPolicy
        fullName: ApplicationHealthPolicy
        uid: '@azure/servicefabric.ApplicationHealthPolicy'
