### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription'
    name: ApplicationUpgradeDescription
    fullName: ApplicationUpgradeDescription
    children:
      - >-
        @azure/servicefabric.ApplicationUpgradeDescription.applicationHealthPolicy
      - '@azure/servicefabric.ApplicationUpgradeDescription.forceRestart'
      - >-
        @azure/servicefabric.ApplicationUpgradeDescription.instanceCloseDelayDurationInSeconds
      - '@azure/servicefabric.ApplicationUpgradeDescription.monitoringPolicy'
      - '@azure/servicefabric.ApplicationUpgradeDescription.name'
      - '@azure/servicefabric.ApplicationUpgradeDescription.parameters'
      - '@azure/servicefabric.ApplicationUpgradeDescription.rollingUpgradeMode'
      - '@azure/servicefabric.ApplicationUpgradeDescription.sortOrder'
      - >-
        @azure/servicefabric.ApplicationUpgradeDescription.targetApplicationTypeVersion
      - '@azure/servicefabric.ApplicationUpgradeDescription.upgradeKind'
      - >-
        @azure/servicefabric.ApplicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
    langs:
      - typeScript
    type: interface
    summary: >-
      Describes the parameters for an application upgrade. Note that upgrade
      description replaces the

      existing application description. This means that if the parameters are
      not specified, the

      existing parameters on the applications will be overwritten with the empty
      parameters list. This

      would result in the application using the default value of the parameters
      from the application

      manifest. If you do not want to change any existing parameter values,
      please get the application

      parameters first using the GetApplicationInfo query and then supply those
      values as Parameters

      in this ApplicationUpgradeDescription.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.applicationHealthPolicy'
    name: applicationHealthPolicy
    fullName: applicationHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines a health policy used to evaluate the health of an application or
      one of its children

      entities.
    optional: true
    syntax:
      content: 'applicationHealthPolicy?: ApplicationHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ApplicationHealthPolicy'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.forceRestart'
    name: forceRestart
    fullName: forceRestart
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, then processes are forcefully restarted during upgrade even when
      the code version has

      not changed (the upgrade only changes configuration or data).
    optional: true
    syntax:
      content: 'forceRestart?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.instanceCloseDelayDurationInSeconds
    name: instanceCloseDelayDurationInSeconds
    fullName: instanceCloseDelayDurationInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster

      upgrade, only for those instances which have a non-zero delay duration
      configured in the

      service description. See InstanceCloseDelayDurationSeconds property in
      $ref:

      "#/definitions/StatelessServiceDescription.yaml" for details.

      Note, the default value of InstanceCloseDelayDurationInSeconds is
      4294967295, which indicates

      that the behavior will entirely depend on the delay configured in the
      stateless service

      description.
    optional: true
    syntax:
      content: 'instanceCloseDelayDurationInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.monitoringPolicy'
    name: monitoringPolicy
    fullName: monitoringPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: Describes the parameters for monitoring an upgrade in Monitored mode.
    optional: true
    syntax:
      content: 'monitoringPolicy?: MonitoringPolicyDescription'
      return:
        type:
          - '@azure/servicefabric.MonitoringPolicyDescription'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The name of the target application, including the ''fabric:'' URI scheme.'
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.parameters'
    name: parameters
    fullName: parameters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      List of application parameters with overridden values from their default
      values specified in

      the application manifest.
    optional: true
    syntax:
      content: 'parameters?: ApplicationParameter[]'
      return:
        type:
          - '@azure/servicefabric.ApplicationParameter[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.rollingUpgradeMode'
    name: rollingUpgradeMode
    fullName: rollingUpgradeMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The mode used to monitor health during a rolling upgrade. The values are
      UnmonitoredAuto,

      UnmonitoredManual, and Monitored. Possible values include: 'Invalid',
      'UnmonitoredAuto',

      'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto'.
    optional: true
    syntax:
      content: 'rollingUpgradeMode?: UpgradeMode'
      return:
        type:
          - '@azure/servicefabric.UpgradeMode'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.sortOrder'
    name: sortOrder
    fullName: sortOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the order in which an upgrade proceeds through the cluster.
      Possible values include:

      'Invalid', 'Default', 'Numeric', 'Lexicographical', 'ReverseNumeric',

      'ReverseLexicographical'. Default value: 'Default'.
    optional: true
    syntax:
      content: 'sortOrder?: UpgradeSortOrder'
      return:
        type:
          - '@azure/servicefabric.UpgradeSortOrder'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.targetApplicationTypeVersion
    name: targetApplicationTypeVersion
    fullName: targetApplicationTypeVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The target application type version (found in the application manifest)
      for the application

      upgrade.
    syntax:
      content: 'targetApplicationTypeVersion: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription.upgradeKind'
    name: upgradeKind
    fullName: upgradeKind
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The kind of upgrade out of the following possible values. Possible values
      include: 'Invalid',

      'Rolling'. Default value: 'Rolling'.
    syntax:
      content: 'upgradeKind: UpgradeKind'
      return:
        type:
          - '@azure/servicefabric.UpgradeKind'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
    name: upgradeReplicaSetCheckTimeoutInSeconds
    fullName: upgradeReplicaSetCheckTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum amount of time to block processing of an upgrade domain and
      prevent loss of

      availability when there are unexpected issues. When this timeout expires,
      processing of the

      upgrade domain will proceed regardless of availability loss issues. The
      timeout is reset at

      the start of each upgrade domain. Valid values are between 0 and
      42949672925 inclusive.

      (unsigned 32-bit integer).
    optional: true
    syntax:
      content: 'upgradeReplicaSetCheckTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ApplicationHealthPolicy'
    name: ApplicationHealthPolicy
    spec.typeScript:
      - name: ApplicationHealthPolicy
        fullName: ApplicationHealthPolicy
        uid: '@azure/servicefabric.ApplicationHealthPolicy'
  - uid: '@azure/servicefabric.MonitoringPolicyDescription'
    name: MonitoringPolicyDescription
    spec.typeScript:
      - name: MonitoringPolicyDescription
        fullName: MonitoringPolicyDescription
        uid: '@azure/servicefabric.MonitoringPolicyDescription'
  - uid: '@azure/servicefabric.ApplicationParameter[]'
    name: 'ApplicationParameter[]'
    spec.typeScript:
      - name: ApplicationParameter
        fullName: ApplicationParameter
        uid: '@azure/servicefabric.ApplicationParameter'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.UpgradeMode'
    name: UpgradeMode
    spec.typeScript:
      - name: UpgradeMode
        fullName: UpgradeMode
        uid: '@azure/servicefabric.UpgradeMode'
  - uid: '@azure/servicefabric.UpgradeSortOrder'
    name: UpgradeSortOrder
    spec.typeScript:
      - name: UpgradeSortOrder
        fullName: UpgradeSortOrder
        uid: '@azure/servicefabric.UpgradeSortOrder'
  - uid: '@azure/servicefabric.UpgradeKind'
    name: UpgradeKind
    spec.typeScript:
      - name: UpgradeKind
        fullName: UpgradeKind
        uid: '@azure/servicefabric.UpgradeKind'
