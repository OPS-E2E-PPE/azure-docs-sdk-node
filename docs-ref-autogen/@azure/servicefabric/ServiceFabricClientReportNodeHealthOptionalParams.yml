### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
    name: ServiceFabricClientReportNodeHealthOptionalParams
    fullName: ServiceFabricClientReportNodeHealthOptionalParams
    children:
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.abortSignal
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.customHeaders
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.immediate
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.onDownloadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.onUploadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.timeout
      - >-
        @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.immediate
    name: immediate
    fullName: immediate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A flag that indicates whether the report should be sent immediately.

      A health report is sent to a Service Fabric gateway Application, which
      forwards to the health

      store.

      If Immediate is set to true, the report is sent immediately from HTTP
      Gateway to the health

      store, regardless of the fabric client settings that the HTTP Gateway
      Application is using.

      This is useful for critical reports that should be sent as soon as
      possible.

      Depending on timing and other conditions, sending the report may still
      fail, for example if

      the HTTP Gateway is closed or the message doesn't reach the Gateway.

      If Immediate is set to false, the report is sent based on the health
      client settings from the

      HTTP Gateway. Therefore, it will be batched according to the
      HealthReportSendInterval

      configuration.

      This is the recommended setting because it allows the health client to
      optimize health

      reporting messages to health store as well as health report processing.

      By default, reports are not sent immediately. Default value: false.
    optional: true
    syntax:
      content: 'immediate?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams.timeoutParameter
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The server timeout for performing the operation in seconds. This timeout
      specifies the time

      duration that the client is willing to wait for the requested operation to
      complete. The

      default value for this parameter is 60 seconds. Default value: 60.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
