### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.MeshApplication'
    name: MeshApplication
    fullName: MeshApplication
    children:
      - '@azure/servicefabric.MeshApplication.createOrUpdate'
      - '@azure/servicefabric.MeshApplication.createOrUpdate_2'
      - '@azure/servicefabric.MeshApplication.createOrUpdate_1'
      - '@azure/servicefabric.MeshApplication.deleteMethod'
      - '@azure/servicefabric.MeshApplication.deleteMethod_2'
      - '@azure/servicefabric.MeshApplication.deleteMethod_1'
      - '@azure/servicefabric.MeshApplication.get'
      - '@azure/servicefabric.MeshApplication.get_2'
      - '@azure/servicefabric.MeshApplication.get_1'
      - '@azure/servicefabric.MeshApplication.getUpgradeProgress'
      - '@azure/servicefabric.MeshApplication.getUpgradeProgress_2'
      - '@azure/servicefabric.MeshApplication.getUpgradeProgress_1'
      - '@azure/servicefabric.MeshApplication.list'
      - '@azure/servicefabric.MeshApplication.list_2'
      - '@azure/servicefabric.MeshApplication.list_1'
      - '@azure/servicefabric.MeshApplication.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a MeshApplication.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.createOrUpdate'
    name: >-
      createOrUpdate(string, ApplicationResourceDescription,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a Application resource with the specified name, description and
      properties. If

      Application resource with the same name exists, then it is updated with
      the specified

      description and properties.
    syntax:
      content: >-
        function createOrUpdate(applicationResourceName: string,
        applicationResourceDescription: ApplicationResourceDescription,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: applicationResourceDescription
          type:
            - '@azure/servicefabric.ApplicationResourceDescription'
          description: Description for creating a Application resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MeshApplicationCreateOrUpdateResponse>
        description: Promise<Models.MeshApplicationCreateOrUpdateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.createOrUpdate_2'
    name: >-
      createOrUpdate(string, ApplicationResourceDescription, RequestOptionsBase,
      ServiceCallback<ApplicationResourceDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(applicationResourceName: string,
        applicationResourceDescription: ApplicationResourceDescription, options:
        RequestOptionsBase, callback:
        ServiceCallback<ApplicationResourceDescription>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: applicationResourceDescription
          type:
            - '@azure/servicefabric.ApplicationResourceDescription'
          description: Description for creating a Application resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceDescription>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.createOrUpdate_1'
    name: >-
      createOrUpdate(string, ApplicationResourceDescription,
      ServiceCallback<ApplicationResourceDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(applicationResourceName: string,
        applicationResourceDescription: ApplicationResourceDescription,
        callback: ServiceCallback<ApplicationResourceDescription>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: applicationResourceDescription
          type:
            - '@azure/servicefabric.ApplicationResourceDescription'
          description: Description for creating a Application resource.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceDescription>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the Application resource identified by the name.
    syntax:
      content: >-
        function deleteMethod(applicationResourceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(applicationResourceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(applicationResourceName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the information about the Application resource with the given name.
      The information include

      the description and other properties of the Application.
    syntax:
      content: >-
        function get(applicationResourceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MeshApplicationGetResponse>
        description: Promise<Models.MeshApplicationGetResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.get_2'
    name: >-
      get(string, RequestOptionsBase,
      ServiceCallback<ApplicationResourceDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(applicationResourceName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ApplicationResourceDescription>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceDescription>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.get_1'
    name: 'get(string, ServiceCallback<ApplicationResourceDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(applicationResourceName: string, callback:
        ServiceCallback<ApplicationResourceDescription>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceDescription>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.getUpgradeProgress'
    name: 'getUpgradeProgress(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the upgrade progress information about the Application resource with
      the given name. The

      information include percentage of completion and other upgrade state
      information of the

      Application resource.
    syntax:
      content: >-
        function getUpgradeProgress(applicationResourceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MeshApplicationGetUpgradeProgressResponse>
        description: Promise<Models.MeshApplicationGetUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.getUpgradeProgress_2'
    name: >-
      getUpgradeProgress(string, RequestOptionsBase,
      ServiceCallback<ApplicationResourceUpgradeProgressInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getUpgradeProgress(applicationResourceName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ApplicationResourceUpgradeProgressInfo>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceUpgradeProgressInfo>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.getUpgradeProgress_1'
    name: >-
      getUpgradeProgress(string,
      ServiceCallback<ApplicationResourceUpgradeProgressInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getUpgradeProgress(applicationResourceName: string, callback:
        ServiceCallback<ApplicationResourceUpgradeProgressInfo>)
      parameters:
        - id: applicationResourceName
          type:
            - string
          description: The identity of the application.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.ApplicationResourceUpgradeProgressInfo>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the information about all application resources in a given resource
      group. The information

      include the description and other properties of the Application.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MeshApplicationListResponse>
        description: Promise<Models.MeshApplicationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.list_2'
    name: >-
      list(RequestOptionsBase,
      ServiceCallback<PagedApplicationResourceDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<PagedApplicationResourceDescriptionList>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.PagedApplicationResourceDescriptionList>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.list_1'
    name: list(ServiceCallback<PagedApplicationResourceDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(callback:
        ServiceCallback<PagedApplicationResourceDescriptionList>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/servicefabric.PagedApplicationResourceDescriptionList>
          description: |
            The callback
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.MeshApplication.constructor'
    name: MeshApplication(ServiceFabricClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a MeshApplication.
    syntax:
      content: 'new MeshApplication(client: ServiceFabricClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/servicefabric.ServiceFabricClientContext'
          description: |
            Reference to the service client.
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceFabricClientContext'
    name: ServiceFabricClientContext
    spec.typeScript:
      - name: ServiceFabricClientContext
        fullName: ServiceFabricClientContext
        uid: '@azure/servicefabric.ServiceFabricClientContext'
  - uid: '@azure/servicefabric.ApplicationResourceDescription'
    name: ApplicationResourceDescription
    spec.typeScript:
      - name: ApplicationResourceDescription
        fullName: ApplicationResourceDescription
        uid: '@azure/servicefabric.ApplicationResourceDescription'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationResourceDescription>
    name: ApplicationResourceDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationResourceDescription
        fullName: ApplicationResourceDescription
        uid: '@azure/servicefabric.ApplicationResourceDescription'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/servicefabric.ApplicationResourceUpgradeProgressInfo>
    name: ApplicationResourceUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationResourceUpgradeProgressInfo
        fullName: ApplicationResourceUpgradeProgressInfo
        uid: '@azure/servicefabric.ApplicationResourceUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/servicefabric.PagedApplicationResourceDescriptionList>
    name: PagedApplicationResourceDescriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationResourceDescriptionList
        fullName: PagedApplicationResourceDescriptionList
        uid: '@azure/servicefabric.PagedApplicationResourceDescriptionList'
      - name: '>'
        fullName: '>'
