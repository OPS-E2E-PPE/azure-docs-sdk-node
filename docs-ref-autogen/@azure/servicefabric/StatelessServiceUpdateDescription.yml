### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription'
    name: StatelessServiceUpdateDescription
    fullName: StatelessServiceUpdateDescription
    children:
      - '@azure/servicefabric.StatelessServiceUpdateDescription.correlationScheme'
      - '@azure/servicefabric.StatelessServiceUpdateDescription.defaultMoveCost'
      - '@azure/servicefabric.StatelessServiceUpdateDescription.flags'
      - >-
        @azure/servicefabric.StatelessServiceUpdateDescription.instanceCloseDelayDurationSeconds
      - '@azure/servicefabric.StatelessServiceUpdateDescription.instanceCount'
      - '@azure/servicefabric.StatelessServiceUpdateDescription.loadMetrics'
      - '@azure/servicefabric.StatelessServiceUpdateDescription.minInstanceCount'
      - >-
        @azure/servicefabric.StatelessServiceUpdateDescription.minInstancePercentage
      - >-
        @azure/servicefabric.StatelessServiceUpdateDescription.placementConstraints
      - '@azure/servicefabric.StatelessServiceUpdateDescription.scalingPolicies'
      - '@azure/servicefabric.StatelessServiceUpdateDescription.serviceKind'
      - >-
        @azure/servicefabric.StatelessServiceUpdateDescription.servicePlacementPolicies
    langs:
      - typeScript
    type: interface
    summary: Describes an update for a stateless service.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.correlationScheme'
    name: correlationScheme
    fullName: correlationScheme
    children: []
    langs:
      - typeScript
    type: property
    summary: The correlation scheme.
    optional: true
    syntax:
      content: 'correlationScheme?: ServiceCorrelationDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceCorrelationDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.defaultMoveCost'
    name: defaultMoveCost
    fullName: defaultMoveCost
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The move cost for the service. Possible values include: 'Zero', 'Low',
      'Medium', 'High',

      'VeryHigh'
    optional: true
    syntax:
      content: 'defaultMoveCost?: MoveCost'
      return:
        type:
          - '@azure/servicefabric.MoveCost'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.flags'
    name: flags
    fullName: flags
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Flags indicating whether other properties are set. Each of the associated
      properties

      corresponds to a flag, specified below, which, if set, indicate that the
      property is

      specified.

      This property can be a combination of those flags obtained using bitwise
      'OR' operator.

      For example, if the provided value is 6 then the flags for
      ReplicaRestartWaitDuration (2) and

      QuorumLossWaitDuration (4) are set.

      - None - Does not indicate any other properties are set. The value is
      zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the
      TargetReplicaSetSize property

      (for Stateful services) or the InstanceCount property (for Stateless
      services) is set. The

      value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration
      property is set. The

      value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property
      is set. The value is

      4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration
      property is set. The

      value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The
      value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is
      set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is
      set. The value is

      64.

      - Correlation - Indicates the CorrelationScheme property is set. The value
      is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is
      256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The
      value is 512.

      - ScalingPolicy - Indicates the ScalingPolicies property is set. The value
      is 1024.

      - ServicePlacementTimeLimit - Indicates the ServicePlacementTimeLimit
      property is set. The

      value is 2048.

      - MinInstanceCount - Indicates the MinInstanceCount property is set. The
      value is 4096.

      - MinInstancePercentage - Indicates the MinInstancePercentage property is
      set. The value is

      8192.

      - InstanceCloseDelayDuration - Indicates the InstanceCloseDelayDuration
      property is set. The

      value is 16384.
    optional: true
    syntax:
      content: 'flags?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceUpdateDescription.instanceCloseDelayDurationSeconds
    name: instanceCloseDelayDurationSeconds
    fullName: instanceCloseDelayDurationSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster upgrade and disabling node.

      The endpoint exposed on this instance is removed prior to starting the
      delay, which prevents

      new connections to this instance.

      In addition, clients that have subscribed to service endpoint change

      events(https://docs.microsoft.com/en-us/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync),

      can do

      the following upon receiving the endpoint removal notification:

      - Stop sending new requests to this instance.

      - Close existing connections after in-flight requests have completed.

      - Connect to a different instance of the service partition for future
      requests.
    optional: true
    syntax:
      content: 'instanceCloseDelayDurationSeconds?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.instanceCount'
    name: instanceCount
    fullName: instanceCount
    children: []
    langs:
      - typeScript
    type: property
    summary: The instance count.
    optional: true
    syntax:
      content: 'instanceCount?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.loadMetrics'
    name: loadMetrics
    fullName: loadMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: The service load metrics.
    optional: true
    syntax:
      content: 'loadMetrics?: ServiceLoadMetricDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceLoadMetricDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.minInstanceCount'
    name: minInstanceCount
    fullName: minInstanceCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      MinInstanceCount is the minimum number of instances that must be up to
      meet the

      EnsureAvailability safety check during operations like upgrade or
      deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(
      MinInstancePercentage/100.0 *

      InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstanceCount computation
      -1 is first converted

      into the number of nodes on which the instances are allowed to be placed
      according to the

      placement constraints on the service.
    optional: true
    syntax:
      content: 'minInstanceCount?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceUpdateDescription.minInstancePercentage
    name: minInstancePercentage
    fullName: minInstancePercentage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      MinInstancePercentage is the minimum percentage of InstanceCount that must
      be up to meet the

      EnsureAvailability safety check during operations like upgrade or
      deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(
      MinInstancePercentage/100.0 *

      InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstancePercentage
      computation, -1 is first

      converted into the number of nodes on which the instances are allowed to
      be placed according

      to the placement constraints on the service.
    optional: true
    syntax:
      content: 'minInstancePercentage?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceUpdateDescription.placementConstraints
    name: placementConstraints
    fullName: placementConstraints
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The placement constraints as a string. Placement constraints are boolean
      expressions on node

      properties and allow for restricting a service to particular nodes based
      on the service

      requirements. For example, to place a service on nodes where NodeType is
      blue specify the

      following: "NodeColor == blue)".
    optional: true
    syntax:
      content: 'placementConstraints?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.scalingPolicies'
    name: scalingPolicies
    fullName: scalingPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: Scaling policies for this service.
    optional: true
    syntax:
      content: 'scalingPolicies?: ScalingPolicyDescription[]'
      return:
        type:
          - '@azure/servicefabric.ScalingPolicyDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceUpdateDescription.serviceKind'
    name: serviceKind
    fullName: serviceKind
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'serviceKind: "Stateless"'
      return:
        type:
          - '"Stateless"'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceUpdateDescription.servicePlacementPolicies
    name: servicePlacementPolicies
    fullName: servicePlacementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: The service placement policies.
    optional: true
    syntax:
      content: 'servicePlacementPolicies?: ServicePlacementPolicyDescriptionUnion[]'
      return:
        type:
          - '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceCorrelationDescription[]'
    name: 'ServiceCorrelationDescription[]'
    spec.typeScript:
      - name: ServiceCorrelationDescription
        fullName: ServiceCorrelationDescription
        uid: '@azure/servicefabric.ServiceCorrelationDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.MoveCost'
    name: MoveCost
    spec.typeScript:
      - name: MoveCost
        fullName: MoveCost
        uid: '@azure/servicefabric.MoveCost'
  - uid: '@azure/servicefabric.ServiceLoadMetricDescription[]'
    name: 'ServiceLoadMetricDescription[]'
    spec.typeScript:
      - name: ServiceLoadMetricDescription
        fullName: ServiceLoadMetricDescription
        uid: '@azure/servicefabric.ServiceLoadMetricDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ScalingPolicyDescription[]'
    name: 'ScalingPolicyDescription[]'
    spec.typeScript:
      - name: ScalingPolicyDescription
        fullName: ScalingPolicyDescription
        uid: '@azure/servicefabric.ScalingPolicyDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    name: 'ServicePlacementPolicyDescriptionUnion[]'
    spec.typeScript:
      - name: ServicePlacementPolicyDescriptionUnion
        fullName: ServicePlacementPolicyDescriptionUnion
        uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion'
      - name: '[]'
        fullName: '[]'
