### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription'
    name: StartClusterUpgradeDescription
    fullName: StartClusterUpgradeDescription
    children:
      - >-
        @azure/servicefabric.StartClusterUpgradeDescription.applicationHealthPolicyMap
      - '@azure/servicefabric.StartClusterUpgradeDescription.clusterHealthPolicy'
      - >-
        @azure/servicefabric.StartClusterUpgradeDescription.clusterUpgradeHealthPolicy
      - '@azure/servicefabric.StartClusterUpgradeDescription.codeVersion'
      - '@azure/servicefabric.StartClusterUpgradeDescription.configVersion'
      - >-
        @azure/servicefabric.StartClusterUpgradeDescription.enableDeltaHealthEvaluation
      - '@azure/servicefabric.StartClusterUpgradeDescription.forceRestart'
      - >-
        @azure/servicefabric.StartClusterUpgradeDescription.instanceCloseDelayDurationInSeconds
      - '@azure/servicefabric.StartClusterUpgradeDescription.monitoringPolicy'
      - '@azure/servicefabric.StartClusterUpgradeDescription.rollingUpgradeMode'
      - '@azure/servicefabric.StartClusterUpgradeDescription.sortOrder'
      - '@azure/servicefabric.StartClusterUpgradeDescription.upgradeKind'
      - >-
        @azure/servicefabric.StartClusterUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
    langs:
      - typeScript
    type: interface
    summary: Describes the parameters for starting a cluster upgrade.
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StartClusterUpgradeDescription.applicationHealthPolicyMap
    name: applicationHealthPolicyMap
    fullName: applicationHealthPolicyMap
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the application health policy map used to evaluate the health of
      an application or one

      of its children entities.
    optional: true
    syntax:
      content: 'applicationHealthPolicyMap?: ApplicationHealthPolicies'
      return:
        type:
          - '@azure/servicefabric.ApplicationHealthPolicies'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.clusterHealthPolicy'
    name: clusterHealthPolicy
    fullName: clusterHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines a health policy used to evaluate the health of the cluster or of a
      cluster node.
    optional: true
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthPolicy'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StartClusterUpgradeDescription.clusterUpgradeHealthPolicy
    name: clusterUpgradeHealthPolicy
    fullName: clusterUpgradeHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines a health policy used to evaluate the health of the cluster during
      a cluster upgrade.
    optional: true
    syntax:
      content: 'clusterUpgradeHealthPolicy?: ClusterUpgradeHealthPolicyObject'
      return:
        type:
          - '@azure/servicefabric.ClusterUpgradeHealthPolicyObject'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.codeVersion'
    name: codeVersion
    fullName: codeVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: The cluster code version.
    optional: true
    syntax:
      content: 'codeVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.configVersion'
    name: configVersion
    fullName: configVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: The cluster configuration version.
    optional: true
    syntax:
      content: 'configVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StartClusterUpgradeDescription.enableDeltaHealthEvaluation
    name: enableDeltaHealthEvaluation
    fullName: enableDeltaHealthEvaluation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When true, enables delta health evaluation rather than absolute health
      evaluation after

      completion of each upgrade domain.
    optional: true
    syntax:
      content: 'enableDeltaHealthEvaluation?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.forceRestart'
    name: forceRestart
    fullName: forceRestart
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, then processes are forcefully restarted during upgrade even when
      the code version has

      not changed (the upgrade only changes configuration or data).
    optional: true
    syntax:
      content: 'forceRestart?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StartClusterUpgradeDescription.instanceCloseDelayDurationInSeconds
    name: instanceCloseDelayDurationInSeconds
    fullName: instanceCloseDelayDurationInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster

      upgrade, only for those instances which have a non-zero delay duration
      configured in the

      service description. See InstanceCloseDelayDurationSeconds property in
      $ref:

      "#/definitions/StatelessServiceDescription.yaml" for details.

      Note, the default value of InstanceCloseDelayDurationInSeconds is
      4294967295, which indicates

      that the behavior will entirely depend on the delay configured in the
      stateless service

      description.
    optional: true
    syntax:
      content: 'instanceCloseDelayDurationInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.monitoringPolicy'
    name: monitoringPolicy
    fullName: monitoringPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: Describes the parameters for monitoring an upgrade in Monitored mode.
    optional: true
    syntax:
      content: 'monitoringPolicy?: MonitoringPolicyDescription'
      return:
        type:
          - '@azure/servicefabric.MonitoringPolicyDescription'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.rollingUpgradeMode'
    name: rollingUpgradeMode
    fullName: rollingUpgradeMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The mode used to monitor health during a rolling upgrade. The values are
      UnmonitoredAuto,

      UnmonitoredManual, and Monitored. Possible values include: 'Invalid',
      'UnmonitoredAuto',

      'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto'.
    optional: true
    syntax:
      content: 'rollingUpgradeMode?: UpgradeMode'
      return:
        type:
          - '@azure/servicefabric.UpgradeMode'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.sortOrder'
    name: sortOrder
    fullName: sortOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the order in which an upgrade proceeds through the cluster.
      Possible values include:

      'Invalid', 'Default', 'Numeric', 'Lexicographical', 'ReverseNumeric',

      'ReverseLexicographical'. Default value: 'Default'.
    optional: true
    syntax:
      content: 'sortOrder?: UpgradeSortOrder'
      return:
        type:
          - '@azure/servicefabric.UpgradeSortOrder'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription.upgradeKind'
    name: upgradeKind
    fullName: upgradeKind
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The kind of upgrade out of the following possible values. Possible values
      include: 'Invalid',

      'Rolling'. Default value: 'Rolling'.
    optional: true
    syntax:
      content: 'upgradeKind?: UpgradeKind'
      return:
        type:
          - '@azure/servicefabric.UpgradeKind'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StartClusterUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
    name: upgradeReplicaSetCheckTimeoutInSeconds
    fullName: upgradeReplicaSetCheckTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum amount of time to block processing of an upgrade domain and
      prevent loss of

      availability when there are unexpected issues. When this timeout expires,
      processing of the

      upgrade domain will proceed regardless of availability loss issues. The
      timeout is reset at

      the start of each upgrade domain. Valid values are between 0 and
      42949672925 inclusive.

      (unsigned 32-bit integer).
    optional: true
    syntax:
      content: 'upgradeReplicaSetCheckTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ApplicationHealthPolicies'
    name: ApplicationHealthPolicies
    spec.typeScript:
      - name: ApplicationHealthPolicies
        fullName: ApplicationHealthPolicies
        uid: '@azure/servicefabric.ApplicationHealthPolicies'
  - uid: '@azure/servicefabric.ClusterHealthPolicy'
    name: ClusterHealthPolicy
    spec.typeScript:
      - name: ClusterHealthPolicy
        fullName: ClusterHealthPolicy
        uid: '@azure/servicefabric.ClusterHealthPolicy'
  - uid: '@azure/servicefabric.ClusterUpgradeHealthPolicyObject'
    name: ClusterUpgradeHealthPolicyObject
    spec.typeScript:
      - name: ClusterUpgradeHealthPolicyObject
        fullName: ClusterUpgradeHealthPolicyObject
        uid: '@azure/servicefabric.ClusterUpgradeHealthPolicyObject'
  - uid: '@azure/servicefabric.MonitoringPolicyDescription'
    name: MonitoringPolicyDescription
    spec.typeScript:
      - name: MonitoringPolicyDescription
        fullName: MonitoringPolicyDescription
        uid: '@azure/servicefabric.MonitoringPolicyDescription'
  - uid: '@azure/servicefabric.UpgradeMode'
    name: UpgradeMode
    spec.typeScript:
      - name: UpgradeMode
        fullName: UpgradeMode
        uid: '@azure/servicefabric.UpgradeMode'
  - uid: '@azure/servicefabric.UpgradeSortOrder'
    name: UpgradeSortOrder
    spec.typeScript:
      - name: UpgradeSortOrder
        fullName: UpgradeSortOrder
        uid: '@azure/servicefabric.UpgradeSortOrder'
  - uid: '@azure/servicefabric.UpgradeKind'
    name: UpgradeKind
    spec.typeScript:
      - name: UpgradeKind
        fullName: UpgradeKind
        uid: '@azure/servicefabric.UpgradeKind'
