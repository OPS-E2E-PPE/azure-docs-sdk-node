### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
    name: ServiceFabricClientResolveServiceOptionalParams
    fullName: ServiceFabricClientResolveServiceOptionalParams
    children:
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.abortSignal
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.customHeaders
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onDownloadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onUploadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyType
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyValue
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.previousRspVersion
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeout
      - >-
        @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyType
    name: partitionKeyType
    fullName: partitionKeyType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Key type for the partition. This parameter is required if the partition
      scheme for the service

      is Int64Range or Named. The possible values are following.

      - None (1) - Indicates that the PartitionKeyValue parameter is not
      specified. This is valid

      for the partitions with partitioning scheme as Singleton. This is the
      default value. The value

      is 1.

      - Int64Range (2) - Indicates that the PartitionKeyValue parameter is an
      int64 partition key.

      This is valid for the partitions with partitioning scheme as Int64Range.
      The value is 2.

      - Named (3) - Indicates that the PartitionKeyValue parameter is a name of
      the partition. This

      is valid for the partitions with partitioning scheme as Named. The value
      is 3.
    optional: true
    syntax:
      content: 'partitionKeyType?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyValue
    name: partitionKeyValue
    fullName: partitionKeyValue
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Partition key. This is required if the partition scheme for the service is
      Int64Range or

      Named.

      This is not the partition ID, but rather, either the integer key value, or
      the name of the

      partition ID.

      For example, if your service is using ranged partitions from 0 to 10, then
      they

      PartitionKeyValue would be an

      integer in that range. Query service description to see the range or name.
    optional: true
    syntax:
      content: 'partitionKeyValue?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.previousRspVersion
    name: previousRspVersion
    fullName: previousRspVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The value in the Version field of the response that was received
      previously. This is required

      if the user knows that the result that was gotten previously is stale.
    optional: true
    syntax:
      content: 'previousRspVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeoutParameter
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The server timeout for performing the operation in seconds. This timeout
      specifies the time

      duration that the client is willing to wait for the requested operation to
      complete. The

      default value for this parameter is 60 seconds. Default value: 60.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
