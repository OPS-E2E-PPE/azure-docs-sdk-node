### YamlMime:UniversalReference
items:
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    name: >-
      ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    fullName: >-
      ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    children:
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.abortSignal
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.clusterHealthChunkQueryDescription
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.customHeaders
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.onDownloadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.onUploadProgress
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.timeout
      - >-
        @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.clusterHealthChunkQueryDescription
    name: clusterHealthChunkQueryDescription
    fullName: clusterHealthChunkQueryDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Describes the cluster and application health policies used to evaluate the
      cluster health and

      the filters to select which cluster entities to be returned.

      If the cluster health policy is present, it is used to evaluate the
      cluster events and the

      cluster nodes. If not present, the health evaluation uses the cluster
      health policy defined in

      the cluster manifest or the default cluster health policy.

      By default, each application is evaluated using its specific application
      health policy,

      defined in the application manifest, or the default health policy, if no
      policy is defined in

      manifest.

      If the application health policy map is specified, and it has an entry for
      an application, the

      specified application health policy

      is used to evaluate the application health.

      Users can specify very flexible filters to select which cluster entities
      to include in

      response. The selection can be done based on the entities health state and
      based on the

      hierarchy.

      The query can return multi-level children of the entities based on the
      specified filters. For

      example, it can return one application with a specified name, and for this
      application, return

      only services that are in Error or Warning, and all partitions and
      replicas for one of these

      services.
    optional: true
    syntax:
      content: 'clusterHealthChunkQueryDescription?: ClusterHealthChunkQueryDescription'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthChunkQueryDescription'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams.timeoutParameter
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The server timeout for performing the operation in seconds. This timeout
      specifies the time

      duration that the client is willing to wait for the requested operation to
      complete. The

      default value for this parameter is 60 seconds. Default value: 60.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ClusterHealthChunkQueryDescription'
    name: ClusterHealthChunkQueryDescription
    spec.typeScript:
      - name: ClusterHealthChunkQueryDescription
        fullName: ClusterHealthChunkQueryDescription
        uid: '@azure/servicefabric.ClusterHealthChunkQueryDescription'
