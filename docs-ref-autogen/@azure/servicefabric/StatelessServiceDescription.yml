### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceDescription'
    name: StatelessServiceDescription
    fullName: StatelessServiceDescription
    children:
      - '@azure/servicefabric.StatelessServiceDescription.applicationName'
      - '@azure/servicefabric.StatelessServiceDescription.correlationScheme'
      - '@azure/servicefabric.StatelessServiceDescription.defaultMoveCost'
      - '@azure/servicefabric.StatelessServiceDescription.flags'
      - '@azure/servicefabric.StatelessServiceDescription.initializationData'
      - >-
        @azure/servicefabric.StatelessServiceDescription.instanceCloseDelayDurationSeconds
      - '@azure/servicefabric.StatelessServiceDescription.instanceCount'
      - >-
        @azure/servicefabric.StatelessServiceDescription.isDefaultMoveCostSpecified
      - '@azure/servicefabric.StatelessServiceDescription.minInstanceCount'
      - '@azure/servicefabric.StatelessServiceDescription.minInstancePercentage'
      - '@azure/servicefabric.StatelessServiceDescription.partitionDescription'
      - '@azure/servicefabric.StatelessServiceDescription.placementConstraints'
      - '@azure/servicefabric.StatelessServiceDescription.scalingPolicies'
      - '@azure/servicefabric.StatelessServiceDescription.serviceDnsName'
      - '@azure/servicefabric.StatelessServiceDescription.serviceKind'
      - '@azure/servicefabric.StatelessServiceDescription.serviceLoadMetrics'
      - '@azure/servicefabric.StatelessServiceDescription.serviceName'
      - >-
        @azure/servicefabric.StatelessServiceDescription.servicePackageActivationMode
      - >-
        @azure/servicefabric.StatelessServiceDescription.servicePlacementPolicies
      - '@azure/servicefabric.StatelessServiceDescription.serviceTypeName'
    langs:
      - typeScript
    type: interface
    summary: Describes a stateless service.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.applicationName'
    name: applicationName
    fullName: applicationName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The name of the application, including the ''fabric:'' URI scheme.'
    optional: true
    syntax:
      content: 'applicationName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.correlationScheme'
    name: correlationScheme
    fullName: correlationScheme
    children: []
    langs:
      - typeScript
    type: property
    summary: The correlation scheme.
    optional: true
    syntax:
      content: 'correlationScheme?: ServiceCorrelationDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceCorrelationDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.defaultMoveCost'
    name: defaultMoveCost
    fullName: defaultMoveCost
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The move cost for the service. Possible values include: 'Zero', 'Low',
      'Medium', 'High',

      'VeryHigh'
    optional: true
    syntax:
      content: 'defaultMoveCost?: MoveCost'
      return:
        type:
          - '@azure/servicefabric.MoveCost'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.flags'
    name: flags
    fullName: flags
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Flags indicating whether other properties are set. Each of the associated
      properties

      corresponds to a flag, specified below, which, if set, indicate that the
      property is

      specified.

      This property can be a combination of those flags obtained using bitwise
      'OR' operator.

      For example, if the provided value is 1 then the flags for
      InstanceCloseDelayDuration is set.

      - None - Does not indicate any other properties are set. The value is
      zero.

      - InstanceCloseDelayDuration - Indicates the InstanceCloseDelayDuration
      property is set. The

      value is 1.
    optional: true
    syntax:
      content: 'flags?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.initializationData'
    name: initializationData
    fullName: initializationData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The initialization data as an array of bytes. Initialization data is
      passed to service

      instances or replicas when they are created.
    optional: true
    syntax:
      content: 'initializationData?: number[]'
      return:
        type:
          - 'number[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceDescription.instanceCloseDelayDurationSeconds
    name: instanceCloseDelayDurationSeconds
    fullName: instanceCloseDelayDurationSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster upgrade and disabling node.

      The endpoint exposed on this instance is removed prior to starting the
      delay, which prevents

      new connections to this instance.

      In addition, clients that have subscribed to service endpoint change

      events(https://docs.microsoft.com/en-us/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync),

      can do

      the following upon receiving the endpoint removal notification:

      - Stop sending new requests to this instance.

      - Close existing connections after in-flight requests have completed.

      - Connect to a different instance of the service partition for future
      requests.

      Note, the default value of InstanceCloseDelayDuration is 0, which
      indicates that there won't

      be any delay or removal of the endpoint prior to closing the instance.
    optional: true
    syntax:
      content: 'instanceCloseDelayDurationSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.instanceCount'
    name: instanceCount
    fullName: instanceCount
    children: []
    langs:
      - typeScript
    type: property
    summary: The instance count.
    syntax:
      content: 'instanceCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceDescription.isDefaultMoveCostSpecified
    name: isDefaultMoveCostSpecified
    fullName: isDefaultMoveCostSpecified
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates if the DefaultMoveCost property is specified.
    optional: true
    syntax:
      content: 'isDefaultMoveCostSpecified?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.minInstanceCount'
    name: minInstanceCount
    fullName: minInstanceCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      MinInstanceCount is the minimum number of instances that must be up to
      meet the

      EnsureAvailability safety check during operations like upgrade or
      deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(
      MinInstancePercentage/100.0 *

      InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstanceCount computation
      -1 is first converted

      into the number of nodes on which the instances are allowed to be placed
      according to the

      placement constraints on the service.
    optional: true
    syntax:
      content: 'minInstanceCount?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.minInstancePercentage'
    name: minInstancePercentage
    fullName: minInstancePercentage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      MinInstancePercentage is the minimum percentage of InstanceCount that must
      be up to meet the

      EnsureAvailability safety check during operations like upgrade or
      deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(
      MinInstancePercentage/100.0 *

      InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstancePercentage
      computation, -1 is first

      converted into the number of nodes on which the instances are allowed to
      be placed according

      to the placement constraints on the service.
    optional: true
    syntax:
      content: 'minInstancePercentage?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.partitionDescription'
    name: partitionDescription
    fullName: partitionDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: The partition description as an object.
    syntax:
      content: 'partitionDescription: PartitionSchemeDescriptionUnion'
      return:
        type:
          - '@azure/servicefabric.PartitionSchemeDescriptionUnion'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.placementConstraints'
    name: placementConstraints
    fullName: placementConstraints
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The placement constraints as a string. Placement constraints are boolean
      expressions on node

      properties and allow for restricting a service to particular nodes based
      on the service

      requirements. For example, to place a service on nodes where NodeType is
      blue specify the

      following: "NodeColor == blue)".
    optional: true
    syntax:
      content: 'placementConstraints?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.scalingPolicies'
    name: scalingPolicies
    fullName: scalingPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: Scaling policies for this service.
    optional: true
    syntax:
      content: 'scalingPolicies?: ScalingPolicyDescription[]'
      return:
        type:
          - '@azure/servicefabric.ScalingPolicyDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.serviceDnsName'
    name: serviceDnsName
    fullName: serviceDnsName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The DNS name of the service. It requires the DNS system service to be
      enabled in Service

      Fabric cluster.
    optional: true
    syntax:
      content: 'serviceDnsName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.serviceKind'
    name: serviceKind
    fullName: serviceKind
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'serviceKind: "Stateless"'
      return:
        type:
          - '"Stateless"'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.serviceLoadMetrics'
    name: serviceLoadMetrics
    fullName: serviceLoadMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: The service load metrics.
    optional: true
    syntax:
      content: 'serviceLoadMetrics?: ServiceLoadMetricDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceLoadMetricDescription[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.serviceName'
    name: serviceName
    fullName: serviceName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The full name of the service with ''fabric:'' URI scheme.'
    syntax:
      content: 'serviceName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceDescription.servicePackageActivationMode
    name: servicePackageActivationMode
    fullName: servicePackageActivationMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The activation mode of service package to be used for a service. Possible
      values include:

      'SharedProcess', 'ExclusiveProcess'
    optional: true
    syntax:
      content: 'servicePackageActivationMode?: ServicePackageActivationMode'
      return:
        type:
          - '@azure/servicefabric.ServicePackageActivationMode'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.servicePlacementPolicies'
    name: servicePlacementPolicies
    fullName: servicePlacementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: The service placement policies.
    optional: true
    syntax:
      content: 'servicePlacementPolicies?: ServicePlacementPolicyDescriptionUnion[]'
      return:
        type:
          - '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
        description: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceDescription.serviceTypeName'
    name: serviceTypeName
    fullName: serviceTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of the service type as specified in the service manifest.
    syntax:
      content: 'serviceTypeName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceCorrelationDescription[]'
    name: 'ServiceCorrelationDescription[]'
    spec.typeScript:
      - name: ServiceCorrelationDescription
        fullName: ServiceCorrelationDescription
        uid: '@azure/servicefabric.ServiceCorrelationDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.MoveCost'
    name: MoveCost
    spec.typeScript:
      - name: MoveCost
        fullName: MoveCost
        uid: '@azure/servicefabric.MoveCost'
  - uid: '@azure/servicefabric.PartitionSchemeDescriptionUnion'
    name: PartitionSchemeDescriptionUnion
    spec.typeScript:
      - name: PartitionSchemeDescriptionUnion
        fullName: PartitionSchemeDescriptionUnion
        uid: '@azure/servicefabric.PartitionSchemeDescriptionUnion'
  - uid: '@azure/servicefabric.ScalingPolicyDescription[]'
    name: 'ScalingPolicyDescription[]'
    spec.typeScript:
      - name: ScalingPolicyDescription
        fullName: ScalingPolicyDescription
        uid: '@azure/servicefabric.ScalingPolicyDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServiceLoadMetricDescription[]'
    name: 'ServiceLoadMetricDescription[]'
    spec.typeScript:
      - name: ServiceLoadMetricDescription
        fullName: ServiceLoadMetricDescription
        uid: '@azure/servicefabric.ServiceLoadMetricDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServicePackageActivationMode'
    name: ServicePackageActivationMode
    spec.typeScript:
      - name: ServicePackageActivationMode
        fullName: ServicePackageActivationMode
        uid: '@azure/servicefabric.ServicePackageActivationMode'
  - uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    name: 'ServicePlacementPolicyDescriptionUnion[]'
    spec.typeScript:
      - name: ServicePlacementPolicyDescriptionUnion
        fullName: ServicePlacementPolicyDescriptionUnion
        uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion'
      - name: '[]'
        fullName: '[]'
