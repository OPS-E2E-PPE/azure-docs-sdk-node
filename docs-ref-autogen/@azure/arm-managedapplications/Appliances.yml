### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managedapplications.Appliances'
    name: Appliances
    fullName: Appliances
    children:
      - '@azure/arm-managedapplications.Appliances.constructor'
      - '@azure/arm-managedapplications.Appliances.beginCreateOrUpdate'
      - '@azure/arm-managedapplications.Appliances.beginCreateOrUpdateById'
      - '@azure/arm-managedapplications.Appliances.beginDeleteById'
      - '@azure/arm-managedapplications.Appliances.beginDeleteMethod'
      - '@azure/arm-managedapplications.Appliances.createOrUpdate'
      - '@azure/arm-managedapplications.Appliances.createOrUpdateById'
      - '@azure/arm-managedapplications.Appliances.deleteById'
      - '@azure/arm-managedapplications.Appliances.deleteMethod'
      - '@azure/arm-managedapplications.Appliances.get'
      - '@azure/arm-managedapplications.Appliances.get_2'
      - '@azure/arm-managedapplications.Appliances.get_1'
      - '@azure/arm-managedapplications.Appliances.getById'
      - '@azure/arm-managedapplications.Appliances.getById_2'
      - '@azure/arm-managedapplications.Appliances.getById_1'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroup'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroup_2'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroup_1'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroupNext'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_2'
      - '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_1'
      - '@azure/arm-managedapplications.Appliances.listBySubscription'
      - '@azure/arm-managedapplications.Appliances.listBySubscription_2'
      - '@azure/arm-managedapplications.Appliances.listBySubscription_1'
      - '@azure/arm-managedapplications.Appliances.listBySubscriptionNext'
      - '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_2'
      - '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_1'
      - '@azure/arm-managedapplications.Appliances.update_2'
      - '@azure/arm-managedapplications.Appliances.update'
      - '@azure/arm-managedapplications.Appliances.update_1'
      - '@azure/arm-managedapplications.Appliances.updateById_2'
      - '@azure/arm-managedapplications.Appliances.updateById'
      - '@azure/arm-managedapplications.Appliances.updateById_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Appliances.
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.constructor'
    name: Appliances(ManagedApplicationClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Appliances.
    syntax:
      content: 'new Appliances(client: ManagedApplicationClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-managedapplications.ManagedApplicationClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Appliance, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new appliance.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, applianceName:
        string, parameters: Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: parameters
          type:
            - '@azure/arm-managedapplications.Appliance'
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.beginCreateOrUpdateById'
    name: 'beginCreateOrUpdateById(string, Appliance, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new appliance.
    syntax:
      content: >-
        function beginCreateOrUpdateById(applianceId: string, parameters:
        Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: parameters
          type:
            - '@azure/arm-managedapplications.Appliance'
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.beginDeleteById'
    name: 'beginDeleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the appliance.
    syntax:
      content: >-
        function beginDeleteById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the appliance.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, applianceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.createOrUpdate'
    name: 'createOrUpdate(string, string, Appliance, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new appliance.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, applianceName:
        string, parameters: Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: parameters
          type:
            - '@azure/arm-managedapplications.Appliance'
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesCreateOrUpdateResponse>
        description: Promise<Models.AppliancesCreateOrUpdateResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.createOrUpdateById'
    name: 'createOrUpdateById(string, Appliance, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new appliance.
    syntax:
      content: >-
        function createOrUpdateById(applianceId: string, parameters: Appliance,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: parameters
          type:
            - '@azure/arm-managedapplications.Appliance'
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesCreateOrUpdateByIdResponse>
        description: Promise<Models.AppliancesCreateOrUpdateByIdResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.deleteById'
    name: 'deleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the appliance.
    syntax:
      content: >-
        function deleteById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the appliance.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, applianceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the appliance.
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesGetResponse>
        description: Promise<Models.AppliancesGetResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.get_1'
    name: 'get(string, string, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.getById'
    name: 'getById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the appliance.
    syntax:
      content: >-
        function getById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesGetByIdResponse>
        description: Promise<Models.AppliancesGetByIdResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.getById_2'
    name: 'getById(string, RequestOptionsBase, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(applianceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.getById_1'
    name: 'getById(string, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(applianceId: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the appliances within a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesListByResourceGroupResponse>
        description: Promise<Models.AppliancesListByResourceGroupResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ApplianceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the appliances within a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesListByResourceGroupNextResponse>
        description: Promise<Models.AppliancesListByResourceGroupNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ApplianceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscription'
    name: listBySubscription(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the appliances within a subscription.
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesListBySubscriptionResponse>
        description: Promise<Models.AppliancesListBySubscriptionResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscription_2'
    name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscription_1'
    name: listBySubscription(ServiceCallback<ApplianceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext'
    name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the appliances within a subscription.
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesListBySubscriptionNextResponse>
        description: Promise<Models.AppliancesListBySubscriptionNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_2'
    name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_1'
    name: 'listBySubscriptionNext(string, ServiceCallback<ApplianceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.update_2'
    name: >-
      update(string, string, AppliancesUpdateOptionalParams,
      ServiceCallback<Appliance>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        options: AppliancesUpdateOptionalParams, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - '@azure/arm-managedapplications.AppliancesUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.update'
    name: 'update(string, string, Models.AppliancesUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing appliance. The only value that can be updated via
      PATCH currently is the

      tags.
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        options?: Models.AppliancesUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: options
          type:
            - Models.AppliancesUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesUpdateResponse>
        description: Promise<Models.AppliancesUpdateResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.update_1'
    name: 'update(string, string, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        callback: ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type:
            - string
          description: The name of the appliance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.updateById_2'
    name: >-
      updateById(string, AppliancesUpdateByIdOptionalParams,
      ServiceCallback<Appliance>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateById(applianceId: string, options:
        AppliancesUpdateByIdOptionalParams, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - '@azure/arm-managedapplications.AppliancesUpdateByIdOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.updateById'
    name: 'updateById(string, Models.AppliancesUpdateByIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing appliance. The only value that can be updated via
      PATCH currently is the

      tags.
    syntax:
      content: >-
        function updateById(applianceId: string, options?:
        Models.AppliancesUpdateByIdOptionalParams)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type:
            - Models.AppliancesUpdateByIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppliancesUpdateByIdResponse>
        description: Promise<Models.AppliancesUpdateByIdResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.Appliances.updateById_1'
    name: 'updateById(string, ServiceCallback<Appliance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateById(applianceId: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type:
            - string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.Appliance>
          description: |
            The callback
    package: '@azure/arm-managedapplications'
references:
  - uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
    name: ManagedApplicationClientContext
    spec.typeScript:
      - name: ManagedApplicationClientContext
        fullName: ManagedApplicationClientContext
        uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
  - uid: '@azure/arm-managedapplications.Appliance'
    name: Appliance
    spec.typeScript:
      - name: Appliance
        fullName: Appliance
        uid: '@azure/arm-managedapplications.Appliance'
  - uid: ServiceCallback<@azure/arm-managedapplications.Appliance>
    name: Appliance>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Appliance
        fullName: Appliance
        uid: '@azure/arm-managedapplications.Appliance'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-managedapplications.ApplianceListResult>
    name: ApplianceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplianceListResult
        fullName: ApplianceListResult
        uid: '@azure/arm-managedapplications.ApplianceListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-managedapplications.AppliancesUpdateOptionalParams'
    name: AppliancesUpdateOptionalParams
    spec.typeScript:
      - name: AppliancesUpdateOptionalParams
        fullName: AppliancesUpdateOptionalParams
        uid: '@azure/arm-managedapplications.AppliancesUpdateOptionalParams'
  - uid: '@azure/arm-managedapplications.AppliancesUpdateByIdOptionalParams'
    name: AppliancesUpdateByIdOptionalParams
    spec.typeScript:
      - name: AppliancesUpdateByIdOptionalParams
        fullName: AppliancesUpdateByIdOptionalParams
        uid: '@azure/arm-managedapplications.AppliancesUpdateByIdOptionalParams'
