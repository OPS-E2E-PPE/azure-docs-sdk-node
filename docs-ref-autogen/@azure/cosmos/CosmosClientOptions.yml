### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.CosmosClientOptions'
    name: CosmosClientOptions
    fullName: CosmosClientOptions
    children:
      - '@azure/cosmos.CosmosClientOptions.agent'
      - '@azure/cosmos.CosmosClientOptions.connectionPolicy'
      - '@azure/cosmos.CosmosClientOptions.consistencyLevel'
      - '@azure/cosmos.CosmosClientOptions.defaultHeaders'
      - '@azure/cosmos.CosmosClientOptions.endpoint'
      - '@azure/cosmos.CosmosClientOptions.key'
      - '@azure/cosmos.CosmosClientOptions.permissionFeed'
      - '@azure/cosmos.CosmosClientOptions.plugins'
      - '@azure/cosmos.CosmosClientOptions.resourceTokens'
      - '@azure/cosmos.CosmosClientOptions.tokenProvider'
      - '@azure/cosmos.CosmosClientOptions.userAgentSuffix'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.agent'
    name: agent
    fullName: agent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional custom http(s) Agent to be used in NodeJS enironments

      Use an agent such as https://github.com/TooTallNate/node-proxy-agent if
      you need to connect to Cosmos via a proxy
    optional: true
    syntax:
      content: 'agent?: Agent'
      return:
        type:
          - '@azure/cosmos.Agent'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.connectionPolicy'
    name: connectionPolicy
    fullName: connectionPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An instance of <xref:ConnectionPolicy> class.

      This parameter is optional and the default connectionPolicy will be used
      if omitted.
    optional: true
    syntax:
      content: 'connectionPolicy?: ConnectionPolicy'
      return:
        type:
          - '@azure/cosmos.ConnectionPolicy'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.consistencyLevel'
    name: consistencyLevel
    fullName: consistencyLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      An optional parameter that represents the consistency level.
      It can take any value from <xref:ConsistencyLevel>.
    optional: true
    syntax:
      content: 'consistencyLevel?: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.defaultHeaders'
    name: defaultHeaders
    fullName: defaultHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'defaultHeaders?: CosmosHeaders'
      return:
        type:
          - '@azure/cosmos.CosmosHeaders'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: The service endpoint to use to create the client.
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: The account master or readonly key
    optional: true
    syntax:
      content: 'key?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.permissionFeed'
    name: permissionFeed
    fullName: permissionFeed
    children: []
    langs:
      - typeScript
    type: property
    summary: 'An array of <xref:Permission> objects.'
    optional: true
    syntax:
      content: 'permissionFeed?: PermissionDefinition[]'
      return:
        type:
          - '@azure/cosmos.PermissionDefinition[]'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.plugins'
    name: plugins
    fullName: plugins
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'plugins?: PluginConfig[]'
      return:
        type:
          - 'PluginConfig[]'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.resourceTokens'
    name: resourceTokens
    fullName: resourceTokens
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      An object that contains resources tokens.
      Keys for the object are resource Ids and values are the resource tokens.
    optional: true
    syntax:
      content: 'resourceTokens?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.tokenProvider'
    name: tokenProvider
    fullName: tokenProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A user supplied function for resolving header authorization tokens.

      Allows users to generating their own auth tokens, potentially using a
      separate service
    optional: true
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        type:
          - '@azure/cosmos.TokenProvider'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.CosmosClientOptions.userAgentSuffix'
    name: userAgentSuffix
    fullName: userAgentSuffix
    children: []
    langs:
      - typeScript
    type: property
    summary: A custom string to append to the default SDK user agent.
    optional: true
    syntax:
      content: 'userAgentSuffix?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Agent'
    name: Agent
    spec.typeScript:
      - name: Agent
        fullName: Agent
        uid: '@azure/cosmos.Agent'
  - uid: '@azure/cosmos.ConnectionPolicy'
    name: ConnectionPolicy
    spec.typeScript:
      - name: ConnectionPolicy
        fullName: ConnectionPolicy
        uid: '@azure/cosmos.ConnectionPolicy'
  - uid: '@azure/cosmos.CosmosHeaders'
    name: CosmosHeaders
    spec.typeScript:
      - name: CosmosHeaders
        fullName: CosmosHeaders
        uid: '@azure/cosmos.CosmosHeaders'
  - uid: '@azure/cosmos.PermissionDefinition[]'
    name: 'PermissionDefinition[]'
    spec.typeScript:
      - name: PermissionDefinition
        fullName: PermissionDefinition
        uid: '@azure/cosmos.PermissionDefinition'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cosmos.TokenProvider'
    name: TokenProvider
    spec.typeScript:
      - name: TokenProvider
        fullName: TokenProvider
        uid: '@azure/cosmos.TokenProvider'
