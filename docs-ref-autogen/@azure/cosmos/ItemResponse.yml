### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ItemResponse'
    name: ItemResponse
    fullName: ItemResponse<T>
    children:
      - '@azure/cosmos.ItemResponse.activityId'
      - '@azure/cosmos.ItemResponse.etag'
      - '@azure/cosmos.ItemResponse.headers'
      - '@azure/cosmos.ItemResponse.item'
      - '@azure/cosmos.ItemResponse.constructor'
      - '@azure/cosmos.ItemResponse.requestCharge'
      - '@azure/cosmos.ItemResponse.resource'
      - '@azure/cosmos.ItemResponse.statusCode'
      - '@azure/cosmos.ItemResponse.substatus'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cosmos.ResourceResponse<T & @azure/cosmos.Resource>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.activityId'
    name: activityId
    fullName: activityId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string activityId
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string etag
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.headers'
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public headers: CosmosHeaders'
      return:
        type:
          - '@azure/cosmos.CosmosHeaders'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.item'
    name: item
    fullName: item
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Reference to the <xref:Item> the response corresponds to.'
    syntax:
      content: 'public item: Item'
      return:
        type:
          - '@azure/cosmos.Item'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.constructor'
    name: 'ItemResponse(T & Resource, CosmosHeaders, number, number, Item)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ItemResponse(resource: T & Resource, headers: CosmosHeaders,
        statusCode: number, subsstatusCode: number, item: Item)
      parameters:
        - id: resource
          type:
            - T & @azure/cosmos.Resource
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.CosmosHeaders'
          description: ''
        - id: statusCode
          type:
            - number
          description: ''
        - id: subsstatusCode
          type:
            - number
          description: ''
        - id: item
          type:
            - '@azure/cosmos.Item'
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.requestCharge'
    name: requestCharge
    fullName: requestCharge
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number requestCharge
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.resource'
    name: resource
    fullName: resource
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public resource: T & Resource'
      return:
        type:
          - T & @azure/cosmos.Resource
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.statusCode'
    name: statusCode
    fullName: statusCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public statusCode: StatusCode'
      return:
        type:
          - StatusCode
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ItemResponse.substatus'
    name: substatus
    fullName: substatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'public substatus?: SubStatusCode'
      return:
        type:
          - '@azure/cosmos.SubStatusCode'
        description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.ResourceResponse<T & @azure/cosmos.Resource>'
    name: Resource>
    spec.typeScript:
      - name: ResourceResponse
        fullName: ResourceResponse
        uid: '@azure/cosmos.ResourceResponse'
      - name: '<T & '
        fullName: '<T & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: '>'
        fullName: '>'
  - uid: T & @azure/cosmos.Resource
    name: Resource
    spec.typeScript:
      - name: 'T & '
        fullName: 'T & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
  - uid: '@azure/cosmos.CosmosHeaders'
    name: CosmosHeaders
    spec.typeScript:
      - name: CosmosHeaders
        fullName: CosmosHeaders
        uid: '@azure/cosmos.CosmosHeaders'
  - uid: '@azure/cosmos.Item'
    name: Item
    spec.typeScript:
      - name: Item
        fullName: Item
        uid: '@azure/cosmos.Item'
  - uid: '@azure/cosmos.SubStatusCode'
    name: SubStatusCode
    spec.typeScript:
      - name: SubStatusCode
        fullName: SubStatusCode
        uid: '@azure/cosmos.SubStatusCode'
