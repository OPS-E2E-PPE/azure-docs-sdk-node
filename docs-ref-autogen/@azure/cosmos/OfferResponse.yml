### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.OfferResponse'
    name: OfferResponse
    fullName: OfferResponse
    children:
      - '@azure/cosmos.OfferResponse.activityId'
      - '@azure/cosmos.OfferResponse.etag'
      - '@azure/cosmos.OfferResponse.headers'
      - '@azure/cosmos.OfferResponse.offer'
      - '@azure/cosmos.OfferResponse.constructor'
      - '@azure/cosmos.OfferResponse.requestCharge'
      - '@azure/cosmos.OfferResponse.resource'
      - '@azure/cosmos.OfferResponse.statusCode'
      - '@azure/cosmos.OfferResponse.substatus'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @azure/cosmos.ResourceResponse<@azure/cosmos.OfferDefinition &
        @azure/cosmos.Resource>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.activityId'
    name: activityId
    fullName: activityId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string activityId
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string etag
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.headers'
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public headers: CosmosHeaders'
      return:
        type:
          - '@azure/cosmos.CosmosHeaders'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.offer'
    name: offer
    fullName: offer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A reference to the <xref:Offer> corresponding to the returned
      <xref:OfferDefinition>.
    syntax:
      content: 'public offer: Offer'
      return:
        type:
          - '@azure/cosmos.Offer'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.constructor'
    name: 'OfferResponse(OfferDefinition & Resource, CosmosHeaders, number, Offer)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new OfferResponse(resource: OfferDefinition & Resource, headers:
        CosmosHeaders, statusCode: number, offer: Offer)
      parameters:
        - id: resource
          type:
            - '@azure/cosmos.OfferDefinition & @azure/cosmos.Resource'
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.CosmosHeaders'
          description: ''
        - id: statusCode
          type:
            - number
          description: ''
        - id: offer
          type:
            - '@azure/cosmos.Offer'
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.requestCharge'
    name: requestCharge
    fullName: requestCharge
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number requestCharge
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.resource'
    name: resource
    fullName: resource
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public resource: OfferDefinition & Resource'
      return:
        type:
          - '@azure/cosmos.OfferDefinition & @azure/cosmos.Resource'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.statusCode'
    name: statusCode
    fullName: statusCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public statusCode: StatusCode'
      return:
        type:
          - StatusCode
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.OfferResponse.substatus'
    name: substatus
    fullName: substatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'public substatus?: SubStatusCode'
      return:
        type:
          - '@azure/cosmos.SubStatusCode'
        description: ''
    package: '@azure/cosmos'
references:
  - uid: >-
      @azure/cosmos.ResourceResponse<@azure/cosmos.OfferDefinition &
      @azure/cosmos.Resource>
    name: Resource>
    spec.typeScript:
      - name: ResourceResponse
        fullName: ResourceResponse
        uid: '@azure/cosmos.ResourceResponse'
      - name: <
        fullName: <
      - name: OfferDefinition
        fullName: OfferDefinition
        uid: '@azure/cosmos.OfferDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.OfferDefinition & @azure/cosmos.Resource'
    name: Resource
    spec.typeScript:
      - name: OfferDefinition
        fullName: OfferDefinition
        uid: '@azure/cosmos.OfferDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
  - uid: '@azure/cosmos.CosmosHeaders'
    name: CosmosHeaders
    spec.typeScript:
      - name: CosmosHeaders
        fullName: CosmosHeaders
        uid: '@azure/cosmos.CosmosHeaders'
  - uid: '@azure/cosmos.Offer'
    name: Offer
    spec.typeScript:
      - name: Offer
        fullName: Offer
        uid: '@azure/cosmos.Offer'
  - uid: '@azure/cosmos.SubStatusCode'
    name: SubStatusCode
    spec.typeScript:
      - name: SubStatusCode
        fullName: SubStatusCode
        uid: '@azure/cosmos.SubStatusCode'
