### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.QueryMetrics'
    name: QueryMetrics
    fullName: QueryMetrics
    children:
      - '@azure/cosmos.QueryMetrics.add'
      - '@azure/cosmos.QueryMetrics.clientSideMetrics'
      - '@azure/cosmos.QueryMetrics.createFromArray'
      - '@azure/cosmos.QueryMetrics.createFromDelimitedString'
      - '@azure/cosmos.QueryMetrics.documentLoadTime'
      - '@azure/cosmos.QueryMetrics.documentWriteTime'
      - '@azure/cosmos.QueryMetrics.indexHitDocumentCount'
      - '@azure/cosmos.QueryMetrics.indexLookupTime'
      - '@azure/cosmos.QueryMetrics.outputDocumentCount'
      - '@azure/cosmos.QueryMetrics.outputDocumentSize'
      - '@azure/cosmos.QueryMetrics.constructor'
      - '@azure/cosmos.QueryMetrics.queryPreparationTimes'
      - '@azure/cosmos.QueryMetrics.retrievedDocumentCount'
      - '@azure/cosmos.QueryMetrics.retrievedDocumentSize'
      - '@azure/cosmos.QueryMetrics.runtimeExecutionTimes'
      - '@azure/cosmos.QueryMetrics.totalQueryExecutionTime'
      - '@azure/cosmos.QueryMetrics.vmExecutionTime'
      - '@azure/cosmos.QueryMetrics.zero'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.add'
    name: 'add(QueryMetrics[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      returns a new QueryMetrics instance that is the addition of this and the
      arguments.
    syntax:
      content: 'function add(queryMetricsArray: QueryMetrics[])'
      parameters:
        - id: queryMetricsArray
          type:
            - '@azure/cosmos.QueryMetrics[]'
          description: ''
      return:
        type:
          - '@azure/cosmos.QueryMetrics'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.clientSideMetrics'
    name: clientSideMetrics
    fullName: clientSideMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public clientSideMetrics: ClientSideMetrics'
      return:
        type:
          - '@azure/cosmos.ClientSideMetrics'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.createFromArray'
    name: 'createFromArray(QueryMetrics[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new instance of the QueryMetrics class that is the aggregation
      of an array of query metrics.
    syntax:
      content: 'static function createFromArray(queryMetricsArray: QueryMetrics[])'
      parameters:
        - id: queryMetricsArray
          type:
            - '@azure/cosmos.QueryMetrics[]'
          description: ''
      return:
        type:
          - '@azure/cosmos.QueryMetrics'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.createFromDelimitedString'
    name: 'createFromDelimitedString(string, ClientSideMetrics)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new instance of the QueryMetrics class this is deserialized from
      a delimited string.
    syntax:
      content: >-
        static function createFromDelimitedString(delimitedString: string,
        clientSideMetrics?: ClientSideMetrics)
      parameters:
        - id: delimitedString
          type:
            - string
          description: ''
        - id: clientSideMetrics
          type:
            - '@azure/cosmos.ClientSideMetrics'
          description: ''
          optional: true
      return:
        type:
          - '@azure/cosmos.QueryMetrics'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.documentLoadTime'
    name: documentLoadTime
    fullName: documentLoadTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public documentLoadTime: TimeSpan'
      return:
        type:
          - TimeSpan
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.documentWriteTime'
    name: documentWriteTime
    fullName: documentWriteTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public documentWriteTime: TimeSpan'
      return:
        type:
          - TimeSpan
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.indexHitDocumentCount'
    name: indexHitDocumentCount
    fullName: indexHitDocumentCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public indexHitDocumentCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.indexLookupTime'
    name: indexLookupTime
    fullName: indexLookupTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public indexLookupTime: TimeSpan'
      return:
        type:
          - TimeSpan
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.outputDocumentCount'
    name: outputDocumentCount
    fullName: outputDocumentCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public outputDocumentCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.outputDocumentSize'
    name: outputDocumentSize
    fullName: outputDocumentSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public outputDocumentSize: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.constructor'
    name: >-
      QueryMetrics(number, number, number, number, number, TimeSpan,
      QueryPreparationTimes, TimeSpan, TimeSpan, TimeSpan,
      RuntimeExecutionTimes, TimeSpan, ClientSideMetrics)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new QueryMetrics(retrievedDocumentCount: number, retrievedDocumentSize:
        number, outputDocumentCount: number, outputDocumentSize: number,
        indexHitDocumentCount: number, totalQueryExecutionTime: TimeSpan,
        queryPreparationTimes: QueryPreparationTimes, indexLookupTime: TimeSpan,
        documentLoadTime: TimeSpan, vmExecutionTime: TimeSpan,
        runtimeExecutionTimes: RuntimeExecutionTimes, documentWriteTime:
        TimeSpan, clientSideMetrics: ClientSideMetrics)
      parameters:
        - id: retrievedDocumentCount
          type:
            - number
          description: ''
        - id: retrievedDocumentSize
          type:
            - number
          description: ''
        - id: outputDocumentCount
          type:
            - number
          description: ''
        - id: outputDocumentSize
          type:
            - number
          description: ''
        - id: indexHitDocumentCount
          type:
            - number
          description: ''
        - id: totalQueryExecutionTime
          type:
            - TimeSpan
          description: ''
        - id: queryPreparationTimes
          type:
            - '@azure/cosmos.QueryPreparationTimes'
          description: ''
        - id: indexLookupTime
          type:
            - TimeSpan
          description: ''
        - id: documentLoadTime
          type:
            - TimeSpan
          description: ''
        - id: vmExecutionTime
          type:
            - TimeSpan
          description: ''
        - id: runtimeExecutionTimes
          type:
            - '@azure/cosmos.RuntimeExecutionTimes'
          description: ''
        - id: documentWriteTime
          type:
            - TimeSpan
          description: ''
        - id: clientSideMetrics
          type:
            - '@azure/cosmos.ClientSideMetrics'
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.queryPreparationTimes'
    name: queryPreparationTimes
    fullName: queryPreparationTimes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public queryPreparationTimes: QueryPreparationTimes'
      return:
        type:
          - '@azure/cosmos.QueryPreparationTimes'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.retrievedDocumentCount'
    name: retrievedDocumentCount
    fullName: retrievedDocumentCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public retrievedDocumentCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.retrievedDocumentSize'
    name: retrievedDocumentSize
    fullName: retrievedDocumentSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public retrievedDocumentSize: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.runtimeExecutionTimes'
    name: runtimeExecutionTimes
    fullName: runtimeExecutionTimes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public runtimeExecutionTimes: RuntimeExecutionTimes'
      return:
        type:
          - '@azure/cosmos.RuntimeExecutionTimes'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.totalQueryExecutionTime'
    name: totalQueryExecutionTime
    fullName: totalQueryExecutionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public totalQueryExecutionTime: TimeSpan'
      return:
        type:
          - TimeSpan
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.vmExecutionTime'
    name: vmExecutionTime
    fullName: vmExecutionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public vmExecutionTime: TimeSpan'
      return:
        type:
          - TimeSpan
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.QueryMetrics.zero'
    name: zero
    fullName: zero
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: |-
        public static zero: QueryMetrics = new QueryMetrics(
            0,
            0,
            0,
            0,
            0,
            TimeSpan.zero,
            QueryPreparationTimes.zero,
            TimeSpan.zero,
            TimeSpan.zero,
            TimeSpan.zero,
            RuntimeExecutionTimes.zero,
            TimeSpan.zero,
            ClientSideMetrics.zero
          )
      return:
        type:
          - '@azure/cosmos.QueryMetrics'
        description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.QueryPreparationTimes'
    name: QueryPreparationTimes
    spec.typeScript:
      - name: QueryPreparationTimes
        fullName: QueryPreparationTimes
        uid: '@azure/cosmos.QueryPreparationTimes'
  - uid: '@azure/cosmos.RuntimeExecutionTimes'
    name: RuntimeExecutionTimes
    spec.typeScript:
      - name: RuntimeExecutionTimes
        fullName: RuntimeExecutionTimes
        uid: '@azure/cosmos.RuntimeExecutionTimes'
  - uid: '@azure/cosmos.ClientSideMetrics'
    name: ClientSideMetrics
    spec.typeScript:
      - name: ClientSideMetrics
        fullName: ClientSideMetrics
        uid: '@azure/cosmos.ClientSideMetrics'
  - uid: '@azure/cosmos.QueryMetrics'
    name: QueryMetrics
    spec.typeScript:
      - name: QueryMetrics
        fullName: QueryMetrics
        uid: '@azure/cosmos.QueryMetrics'
  - uid: '@azure/cosmos.QueryMetrics[]'
    name: 'QueryMetrics[]'
    spec.typeScript:
      - name: QueryMetrics
        fullName: QueryMetrics
        uid: '@azure/cosmos.QueryMetrics'
      - name: '[]'
        fullName: '[]'
