### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ContainerRequest'
    name: ContainerRequest
    fullName: ContainerRequest
    children:
      - '@azure/cosmos.ContainerRequest.conflictResolutionPolicy'
      - '@azure/cosmos.ContainerRequest.defaultTtl'
      - '@azure/cosmos.ContainerRequest.geospatialConfig'
      - '@azure/cosmos.ContainerRequest.id'
      - '@azure/cosmos.ContainerRequest.indexingPolicy'
      - '@azure/cosmos.ContainerRequest.partitionKey'
      - '@azure/cosmos.ContainerRequest.throughput'
      - '@azure/cosmos.ContainerRequest.uniqueKeyPolicy'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/cosmos.ContainerDefinition'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.conflictResolutionPolicy'
    name: conflictResolutionPolicy
    fullName: conflictResolutionPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: The conflict resolution policy used to resolve conflicts in a container.
    optional: true
    syntax:
      content: 'conflictResolutionPolicy?: ConflictResolutionPolicy'
      return:
        type:
          - '@azure/cosmos.ConflictResolutionPolicy'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.defaultTtl'
    name: defaultTtl
    fullName: defaultTtl
    children: []
    langs:
      - typeScript
    type: property
    summary: The default time to live in seconds for items in a container.
    optional: true
    syntax:
      content: 'defaultTtl?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.geospatialConfig'
    name: geospatialConfig
    fullName: geospatialConfig
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Geospatial configuration for a collection. Type is set to Geography by
      default
    optional: true
    syntax:
      content: 'geospatialConfig?: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The id of the container.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.indexingPolicy'
    name: indexingPolicy
    fullName: indexingPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: The indexing policy associated with the container.
    optional: true
    syntax:
      content: 'indexingPolicy?: IndexingPolicy'
      return:
        type:
          - '@azure/cosmos.IndexingPolicy'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.partitionKey'
    name: partitionKey
    fullName: partitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The partition key for the container.
    optional: true
    syntax:
      content: 'partitionKey?: PartitionKeyDefinition'
      return:
        type:
          - '@azure/cosmos.PartitionKeyDefinition'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.throughput'
    name: throughput
    fullName: throughput
    children: []
    langs:
      - typeScript
    type: property
    summary: Throughput for this container.
    optional: true
    syntax:
      content: 'throughput?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerRequest.uniqueKeyPolicy'
    name: uniqueKeyPolicy
    fullName: uniqueKeyPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: Policy for additional keys that must be unique per partition key
    optional: true
    syntax:
      content: 'uniqueKeyPolicy?: UniqueKeyPolicy'
      return:
        type:
          - '@azure/cosmos.UniqueKeyPolicy'
        description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.ContainerDefinition'
    name: ContainerDefinition
    spec.typeScript:
      - name: ContainerDefinition
        fullName: ContainerDefinition
        uid: '@azure/cosmos.ContainerDefinition'
  - uid: '@azure/cosmos.ConflictResolutionPolicy'
    name: ConflictResolutionPolicy
    spec.typeScript:
      - name: ConflictResolutionPolicy
        fullName: ConflictResolutionPolicy
        uid: '@azure/cosmos.ConflictResolutionPolicy'
  - uid: '@azure/cosmos.IndexingPolicy'
    name: IndexingPolicy
    spec.typeScript:
      - name: IndexingPolicy
        fullName: IndexingPolicy
        uid: '@azure/cosmos.IndexingPolicy'
  - uid: '@azure/cosmos.PartitionKeyDefinition'
    name: PartitionKeyDefinition
    spec.typeScript:
      - name: PartitionKeyDefinition
        fullName: PartitionKeyDefinition
        uid: '@azure/cosmos.PartitionKeyDefinition'
  - uid: '@azure/cosmos.UniqueKeyPolicy'
    name: UniqueKeyPolicy
    spec.typeScript:
      - name: UniqueKeyPolicy
        fullName: UniqueKeyPolicy
        uid: '@azure/cosmos.UniqueKeyPolicy'
