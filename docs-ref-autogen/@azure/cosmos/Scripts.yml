### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.Scripts'
    name: Scripts
    fullName: Scripts
    children:
      - '@azure/cosmos.Scripts.container'
      - '@azure/cosmos.Scripts.storedProcedure'
      - '@azure/cosmos.Scripts.storedProcedures'
      - '@azure/cosmos.Scripts.trigger'
      - '@azure/cosmos.Scripts.triggers'
      - '@azure/cosmos.Scripts.userDefinedFunction'
      - '@azure/cosmos.Scripts.userDefinedFunctions'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.container'
    name: container
    fullName: container
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The parent <xref:Container>.'
    syntax:
      content: 'public container: Container'
      return:
        type:
          - '@azure/cosmos.Container'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.storedProcedure'
    name: storedProcedure(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Used to read, replace, or delete a specific, existing
      <xref:StoredProcedure> by id.

      Use `.storedProcedures` for creating new stored procedures, or
      querying/reading all stored procedures.
    syntax:
      content: 'function storedProcedure(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |
            The id of the <xref:StoredProcedure>.
      return:
        type:
          - '@azure/cosmos.StoredProcedure'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.storedProcedures'
    name: storedProcedures
    fullName: storedProcedures
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Operations for creating new stored procedures, and reading/querying all
      stored procedures.

      For reading, replacing, or deleting an existing stored procedure, use
      `.storedProcedure(id)`.
    syntax:
      content: StoredProcedures storedProcedures
      return:
        type:
          - '@azure/cosmos.StoredProcedures'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.trigger'
    name: trigger(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Used to read, replace, or delete a specific, existing <xref:Trigger> by
      id.

      Use `.triggers` for creating new triggers, or querying/reading all
      triggers.
    syntax:
      content: 'function trigger(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |
            The id of the <xref:Trigger>.
      return:
        type:
          - '@azure/cosmos.Trigger'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.triggers'
    name: triggers
    fullName: triggers
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Operations for creating new triggers, and reading/querying all triggers.

      For reading, replacing, or deleting an existing trigger, use
      `.trigger(id)`.
    syntax:
      content: Triggers triggers
      return:
        type:
          - '@azure/cosmos.Triggers'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.userDefinedFunction'
    name: userDefinedFunction(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Used to read, replace, or delete a specific, existing
      <xref:UserDefinedFunction> by id.

      Use `.userDefinedFunctions` for creating new user defined functions, or
      querying/reading all user defined functions.
    syntax:
      content: 'function userDefinedFunction(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |
            The id of the <xref:UserDefinedFunction>.
      return:
        type:
          - '@azure/cosmos.UserDefinedFunction'
        description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Scripts.userDefinedFunctions'
    name: userDefinedFunctions
    fullName: userDefinedFunctions
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Operations for creating new user defined functions, and reading/querying
      all user defined functions.

      For reading, replacing, or deleting an existing user defined function, use
      `.userDefinedFunction(id)`.
    syntax:
      content: UserDefinedFunctions userDefinedFunctions
      return:
        type:
          - '@azure/cosmos.UserDefinedFunctions'
        description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Container'
    name: Container
    spec.typeScript:
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
  - uid: '@azure/cosmos.StoredProcedures'
    name: StoredProcedures
    spec.typeScript:
      - name: StoredProcedures
        fullName: StoredProcedures
        uid: '@azure/cosmos.StoredProcedures'
  - uid: '@azure/cosmos.Triggers'
    name: Triggers
    spec.typeScript:
      - name: Triggers
        fullName: Triggers
        uid: '@azure/cosmos.Triggers'
  - uid: '@azure/cosmos.UserDefinedFunctions'
    name: UserDefinedFunctions
    spec.typeScript:
      - name: UserDefinedFunctions
        fullName: UserDefinedFunctions
        uid: '@azure/cosmos.UserDefinedFunctions'
  - uid: '@azure/cosmos.StoredProcedure'
    name: StoredProcedure
    spec.typeScript:
      - name: StoredProcedure
        fullName: StoredProcedure
        uid: '@azure/cosmos.StoredProcedure'
  - uid: '@azure/cosmos.Trigger'
    name: Trigger
    spec.typeScript:
      - name: Trigger
        fullName: Trigger
        uid: '@azure/cosmos.Trigger'
  - uid: '@azure/cosmos.UserDefinedFunction'
    name: UserDefinedFunction
    spec.typeScript:
      - name: UserDefinedFunction
        fullName: UserDefinedFunction
        uid: '@azure/cosmos.UserDefinedFunction'
