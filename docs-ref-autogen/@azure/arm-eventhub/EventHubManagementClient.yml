### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.EventHubManagementClient'
    name: EventHubManagementClient
    fullName: EventHubManagementClient
    children:
      - '@azure/arm-eventhub.EventHubManagementClient.acceptLanguage'
      - '@azure/arm-eventhub.EventHubManagementClient.apiVersion'
      - '@azure/arm-eventhub.EventHubManagementClient.beginLongRunningRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.consumerGroups'
      - '@azure/arm-eventhub.EventHubManagementClient.credentials'
      - '@azure/arm-eventhub.EventHubManagementClient.disasterRecoveryConfigs'
      - '@azure/arm-eventhub.EventHubManagementClient.constructor'
      - '@azure/arm-eventhub.EventHubManagementClient.eventHubs'
      - >-
        @azure/arm-eventhub.EventHubManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-eventhub.EventHubManagementClient.namespaces'
      - '@azure/arm-eventhub.EventHubManagementClient.operations'
      - '@azure/arm-eventhub.EventHubManagementClient.regions'
      - '@azure/arm-eventhub.EventHubManagementClient.restoreLROPoller'
      - '@azure/arm-eventhub.EventHubManagementClient.sendLongRunningRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendLRORequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendOperationRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-eventhub.EventHubManagementClientContext'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.consumerGroups'
    name: consumerGroups
    fullName: consumerGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'consumerGroups: ConsumerGroups'
      return:
        type:
          - '@azure/arm-eventhub.ConsumerGroups'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.disasterRecoveryConfigs'
    name: disasterRecoveryConfigs
    fullName: disasterRecoveryConfigs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'disasterRecoveryConfigs: DisasterRecoveryConfigs'
      return:
        type:
          - '@azure/arm-eventhub.DisasterRecoveryConfigs'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.constructor'
    name: >-
      EventHubManagementClient(ServiceClientCredentials, string,
      Models.EventHubManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the EventHubManagementClient class.
    syntax:
      content: >-
        new EventHubManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.EventHubManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: >-
            Subscription credentials that uniquely identify a Microsoft Azure

            subscription. The subscription ID forms part of the URI for every
            service call.
        - id: options
          type:
            - Models.EventHubManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.eventHubs'
    name: eventHubs
    fullName: eventHubs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eventHubs: EventHubs'
      return:
        type:
          - '@azure/arm-eventhub.EventHubs'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: >-
      @azure/arm-eventhub.EventHubManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.namespaces'
    name: namespaces
    fullName: namespaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'namespaces: Namespaces'
      return:
        type:
          - '@azure/arm-eventhub.Namespaces'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-eventhub.Operations'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.regions'
    name: regions
    fullName: regions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'regions: Regions'
      return:
        type:
          - '@azure/arm-eventhub.Regions'
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.ConsumerGroups'
    name: ConsumerGroups
    spec.typeScript:
      - name: ConsumerGroups
        fullName: ConsumerGroups
        uid: '@azure/arm-eventhub.ConsumerGroups'
  - uid: '@azure/arm-eventhub.DisasterRecoveryConfigs'
    name: DisasterRecoveryConfigs
    spec.typeScript:
      - name: DisasterRecoveryConfigs
        fullName: DisasterRecoveryConfigs
        uid: '@azure/arm-eventhub.DisasterRecoveryConfigs'
  - uid: '@azure/arm-eventhub.EventHubs'
    name: EventHubs
    spec.typeScript:
      - name: EventHubs
        fullName: EventHubs
        uid: '@azure/arm-eventhub.EventHubs'
  - uid: '@azure/arm-eventhub.Namespaces'
    name: Namespaces
    spec.typeScript:
      - name: Namespaces
        fullName: Namespaces
        uid: '@azure/arm-eventhub.Namespaces'
  - uid: '@azure/arm-eventhub.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-eventhub.Operations'
  - uid: '@azure/arm-eventhub.Regions'
    name: Regions
    spec.typeScript:
      - name: Regions
        fullName: Regions
        uid: '@azure/arm-eventhub.Regions'
