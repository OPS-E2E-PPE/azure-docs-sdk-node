### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.ConsumerGroups'
    name: ConsumerGroups
    fullName: ConsumerGroups
    children:
      - '@azure/arm-eventhub.ConsumerGroups.constructor'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_2'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_1'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod_2'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod_1'
      - '@azure/arm-eventhub.ConsumerGroups.get'
      - '@azure/arm-eventhub.ConsumerGroups.get_2'
      - '@azure/arm-eventhub.ConsumerGroups.get_1'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub_2'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub_1'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_2'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ConsumerGroups.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.constructor'
    name: ConsumerGroups(EventHubManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ConsumerGroups.
    syntax:
      content: 'new ConsumerGroups(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventhub.EventHubManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, string, ConsumerGroup,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates an Event Hubs consumer group as a nested resource
      within a Namespace.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, consumerGroupName: string, parameters:
        ConsumerGroup, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: Parameters supplied to create or update a consumer group resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsCreateOrUpdateResponse>
        description: Promise<Models.ConsumerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, string, ConsumerGroup,
      RequestOptionsBase, ServiceCallback<ConsumerGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, consumerGroupName: string, parameters:
        ConsumerGroup, options: RequestOptionsBase, callback:
        ServiceCallback<ConsumerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: Parameters supplied to create or update a consumer group resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, string, ConsumerGroup,
      ServiceCallback<ConsumerGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, consumerGroupName: string, parameters:
        ConsumerGroup, callback: ServiceCallback<ConsumerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: Parameters supplied to create or update a consumer group resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a consumer group from the specified Event Hub and resource group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get'
    name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a description for the specified consumer group.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsGetResponse>
        description: Promise<Models.ConsumerGroupsGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get_2'
    name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ConsumerGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ConsumerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get_1'
    name: 'get(string, string, string, string, ServiceCallback<ConsumerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, consumerGroupName: string, callback:
        ServiceCallback<ConsumerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub_2'
    name: >-
      listByEventHub(string, string, string,
      ConsumerGroupsListByEventHubOptionalParams,
      ServiceCallback<ConsumerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByEventHub(resourceGroupName: string, namespaceName:
        string, eventHubName: string, options:
        ConsumerGroupsListByEventHubOptionalParams, callback:
        ServiceCallback<ConsumerGroupListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub'
    name: >-
      listByEventHub(string, string, string,
      Models.ConsumerGroupsListByEventHubOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all the consumer groups in a Namespace. An empty feed is returned if
      no consumer group

      exists in the Namespace.
    syntax:
      content: >-
        function listByEventHub(resourceGroupName: string, namespaceName:
        string, eventHubName: string, options?:
        Models.ConsumerGroupsListByEventHubOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - Models.ConsumerGroupsListByEventHubOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubResponse>
        description: Promise<Models.ConsumerGroupsListByEventHubResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub_1'
    name: >-
      listByEventHub(string, string, string,
      ServiceCallback<ConsumerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByEventHub(resourceGroupName: string, namespaceName:
        string, eventHubName: string, callback:
        ServiceCallback<ConsumerGroupListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext'
    name: 'listByEventHubNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all the consumer groups in a Namespace. An empty feed is returned if
      no consumer group

      exists in the Namespace.
    syntax:
      content: >-
        function listByEventHubNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubNextResponse>
        description: Promise<Models.ConsumerGroupsListByEventHubNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_2'
    name: >-
      listByEventHubNext(string, RequestOptionsBase,
      ServiceCallback<ConsumerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByEventHubNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ConsumerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_1'
    name: 'listByEventHubNext(string, ServiceCallback<ConsumerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByEventHubNext(nextPageLink: string, callback:
        ServiceCallback<ConsumerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.ConsumerGroup'
    name: ConsumerGroup
    spec.typeScript:
      - name: ConsumerGroup
        fullName: ConsumerGroup
        uid: '@azure/arm-eventhub.ConsumerGroup'
  - uid: ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
    name: ConsumerGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConsumerGroup
        fullName: ConsumerGroup
        uid: '@azure/arm-eventhub.ConsumerGroup'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
    name: ConsumerGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConsumerGroupListResult
        fullName: ConsumerGroupListResult
        uid: '@azure/arm-eventhub.ConsumerGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'
    name: ConsumerGroupsListByEventHubOptionalParams
    spec.typeScript:
      - name: ConsumerGroupsListByEventHubOptionalParams
        fullName: ConsumerGroupsListByEventHubOptionalParams
        uid: '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'
