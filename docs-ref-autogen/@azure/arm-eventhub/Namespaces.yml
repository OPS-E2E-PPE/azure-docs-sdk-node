### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.Namespaces'
    name: Namespaces
    fullName: Namespaces
    children:
      - '@azure/arm-eventhub.Namespaces.beginCreateOrUpdate'
      - '@azure/arm-eventhub.Namespaces.beginDeleteMethod'
      - '@azure/arm-eventhub.Namespaces.checkNameAvailability'
      - '@azure/arm-eventhub.Namespaces.checkNameAvailability_2'
      - '@azure/arm-eventhub.Namespaces.checkNameAvailability_1'
      - '@azure/arm-eventhub.Namespaces.createOrUpdate'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_2'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_1'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_2'
      - '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_1'
      - '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule'
      - '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_2'
      - '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_1'
      - '@azure/arm-eventhub.Namespaces.deleteMethod'
      - '@azure/arm-eventhub.Namespaces.get'
      - '@azure/arm-eventhub.Namespaces.get_2'
      - '@azure/arm-eventhub.Namespaces.get_1'
      - '@azure/arm-eventhub.Namespaces.getAuthorizationRule'
      - '@azure/arm-eventhub.Namespaces.getAuthorizationRule_2'
      - '@azure/arm-eventhub.Namespaces.getAuthorizationRule_1'
      - '@azure/arm-eventhub.Namespaces.getMessagingPlan'
      - '@azure/arm-eventhub.Namespaces.getMessagingPlan_2'
      - '@azure/arm-eventhub.Namespaces.getMessagingPlan_1'
      - '@azure/arm-eventhub.Namespaces.getNetworkRuleSet'
      - '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_2'
      - '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_1'
      - '@azure/arm-eventhub.Namespaces.list'
      - '@azure/arm-eventhub.Namespaces.list_2'
      - '@azure/arm-eventhub.Namespaces.list_1'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRules'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRules_2'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRules_1'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_2'
      - '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_1'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroup'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroup_2'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroup_1'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroupNext'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_2'
      - '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_1'
      - '@azure/arm-eventhub.Namespaces.listKeys'
      - '@azure/arm-eventhub.Namespaces.listKeys_2'
      - '@azure/arm-eventhub.Namespaces.listKeys_1'
      - '@azure/arm-eventhub.Namespaces.listNext'
      - '@azure/arm-eventhub.Namespaces.listNext_2'
      - '@azure/arm-eventhub.Namespaces.listNext_1'
      - '@azure/arm-eventhub.Namespaces.constructor'
      - '@azure/arm-eventhub.Namespaces.regenerateKeys'
      - '@azure/arm-eventhub.Namespaces.regenerateKeys_2'
      - '@azure/arm-eventhub.Namespaces.regenerateKeys_1'
      - '@azure/arm-eventhub.Namespaces.update'
      - '@azure/arm-eventhub.Namespaces.update_2'
      - '@azure/arm-eventhub.Namespaces.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Namespaces.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, EHNamespace,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: EHNamespace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.EHNamespace'
          description: Parameters for creating a namespace resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      resources under the

      namespace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability'
    name: >-
      checkNameAvailability(CheckNameAvailabilityParameter,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the give Namespace name availability.
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-eventhub.CheckNameAvailabilityParameter'
          description: Parameters to check availability of the given Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCheckNameAvailabilityResponse>
        description: Promise<Models.NamespacesCheckNameAvailabilityResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability_2'
    name: >-
      checkNameAvailability(CheckNameAvailabilityParameter, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-eventhub.CheckNameAvailabilityParameter'
          description: Parameters to check availability of the given Namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability_1'
    name: >-
      checkNameAvailability(CheckNameAvailabilityParameter,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-eventhub.CheckNameAvailabilityParameter'
          description: Parameters to check availability of the given Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdate'
    name: 'createOrUpdate(string, string, EHNamespace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: EHNamespace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.EHNamespace'
          description: Parameters for creating a namespace resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCreateOrUpdateResponse>
        description: Promise<Models.NamespacesCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an AuthorizationRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
        description: Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_2'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      RequestOptionsBase, ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_1'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet'
    name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update NetworkRuleSet for a Namespace.
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.NetworkRuleSet'
          description: The Namespace IpFilterRule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCreateOrUpdateNetworkRuleSetResponse>
        description: Promise<Models.NamespacesCreateOrUpdateNetworkRuleSetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_2'
    name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      RequestOptionsBase, ServiceCallback<NetworkRuleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, options:
        RequestOptionsBase, callback: ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.NetworkRuleSet'
          description: The Namespace IpFilterRule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.NetworkRuleSet>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_1'
    name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      ServiceCallback<NetworkRuleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, callback:
        ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.NetworkRuleSet'
          description: The Namespace IpFilterRule.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.NetworkRuleSet>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule'
    name: 'deleteAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an AuthorizationRule for a Namespace.
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_2'
    name: >-
      deleteAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_1'
    name: 'deleteAuthorizationRule(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      resources under the

      namespace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the description of the specified namespace.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetResponse>
        description: Promise<Models.NamespacesGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<EHNamespace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespace>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.get_1'
    name: 'get(string, string, ServiceCallback<EHNamespace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, callback:
        ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespace>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule'
    name: 'getAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an AuthorizationRule for a Namespace by rule name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetAuthorizationRuleResponse>
        description: Promise<Models.NamespacesGetAuthorizationRuleResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule_2'
    name: >-
      getAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options: RequestOptionsBase,
        callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule_1'
    name: >-
      getAuthorizationRule(string, string, string,
      ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getMessagingPlan'
    name: 'getMessagingPlan(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets messaging plan for specified namespace.
    syntax:
      content: >-
        function getMessagingPlan(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetMessagingPlanResponse>
        description: Promise<Models.NamespacesGetMessagingPlanResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getMessagingPlan_2'
    name: >-
      getMessagingPlan(string, string, RequestOptionsBase,
      ServiceCallback<MessagingPlan>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMessagingPlan(resourceGroupName: string, namespaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<MessagingPlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.MessagingPlan>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getMessagingPlan_1'
    name: 'getMessagingPlan(string, string, ServiceCallback<MessagingPlan>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMessagingPlan(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<MessagingPlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.MessagingPlan>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet'
    name: 'getNetworkRuleSet(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets NetworkRuleSet for a Namespace.
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetNetworkRuleSetResponse>
        description: Promise<Models.NamespacesGetNetworkRuleSetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_2'
    name: >-
      getNetworkRuleSet(string, string, RequestOptionsBase,
      ServiceCallback<NetworkRuleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.NetworkRuleSet>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_1'
    name: 'getNetworkRuleSet(string, string, ServiceCallback<NetworkRuleSet>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.NetworkRuleSet>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the available Namespaces within a subscription, irrespective of
      the resource groups.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListResponse>
        description: Promise<Models.NamespacesListResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<EHNamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.list_1'
    name: list(ServiceCallback<EHNamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<EHNamespaceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules'
    name: 'listAuthorizationRules(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of authorization rules for a Namespace.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAuthorizationRulesResponse>
        description: Promise<Models.NamespacesListAuthorizationRulesResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules_2'
    name: >-
      listAuthorizationRules(string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules_1'
    name: >-
      listAuthorizationRules(string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext'
    name: 'listAuthorizationRulesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of authorization rules for a Namespace.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAuthorizationRulesNextResponse>
        description: Promise<Models.NamespacesListAuthorizationRulesNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_2'
    name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_1'
    name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the available Namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListByResourceGroupResponse>
        description: Promise<Models.NamespacesListByResourceGroupResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<EHNamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the available Namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListByResourceGroupNextResponse>
        description: Promise<Models.NamespacesListByResourceGroupNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<EHNamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listKeys'
    name: 'listKeys(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the primary and secondary connection strings for the Namespace.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListKeysResponse>
        description: Promise<Models.NamespacesListKeysResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listKeys_2'
    name: >-
      listKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listKeys_1'
    name: 'listKeys(string, string, string, ServiceCallback<AccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the available Namespaces within a subscription, irrespective of
      the resource groups.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListNextResponse>
        description: Promise<Models.NamespacesListNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.listNext_1'
    name: 'listNext(string, ServiceCallback<EHNamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.constructor'
    name: Namespaces(EventHubManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Namespaces.
    syntax:
      content: 'new Namespaces(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventhub.EventHubManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.regenerateKeys'
    name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Regenerates the primary or secondary connection strings for the specified
      Namespace.
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: Parameters required to regenerate the connection string.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesRegenerateKeysResponse>
        description: Promise<Models.NamespacesRegenerateKeysResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.regenerateKeys_2'
    name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      RequestOptionsBase, ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: Parameters required to regenerate the connection string.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.regenerateKeys_1'
    name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: Parameters required to regenerate the connection string.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.update'
    name: 'update(string, string, EHNamespace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.EHNamespace'
          description: Parameters for updating a namespace resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesUpdateResponse>
        description: Promise<Models.NamespacesUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.update_2'
    name: >-
      update(string, string, EHNamespace, RequestOptionsBase,
      ServiceCallback<EHNamespace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, options: RequestOptionsBase, callback:
        ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.EHNamespace'
          description: Parameters for updating a namespace resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespace>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.Namespaces.update_1'
    name: 'update(string, string, EHNamespace, ServiceCallback<EHNamespace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, callback: ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: parameters
          type:
            - '@azure/arm-eventhub.EHNamespace'
          description: Parameters for updating a namespace resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EHNamespace>
          description: |
            The callback
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.EHNamespace'
    name: EHNamespace
    spec.typeScript:
      - name: EHNamespace
        fullName: EHNamespace
        uid: '@azure/arm-eventhub.EHNamespace'
  - uid: '@azure/arm-eventhub.CheckNameAvailabilityParameter'
    name: CheckNameAvailabilityParameter
    spec.typeScript:
      - name: CheckNameAvailabilityParameter
        fullName: CheckNameAvailabilityParameter
        uid: '@azure/arm-eventhub.CheckNameAvailabilityParameter'
  - uid: ServiceCallback<@azure/arm-eventhub.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-eventhub.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.AuthorizationRule'
    name: AuthorizationRule
    spec.typeScript:
      - name: AuthorizationRule
        fullName: AuthorizationRule
        uid: '@azure/arm-eventhub.AuthorizationRule'
  - uid: ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
    name: AuthorizationRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AuthorizationRule
        fullName: AuthorizationRule
        uid: '@azure/arm-eventhub.AuthorizationRule'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.NetworkRuleSet'
    name: NetworkRuleSet
    spec.typeScript:
      - name: NetworkRuleSet
        fullName: NetworkRuleSet
        uid: '@azure/arm-eventhub.NetworkRuleSet'
  - uid: ServiceCallback<@azure/arm-eventhub.NetworkRuleSet>
    name: NetworkRuleSet>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkRuleSet
        fullName: NetworkRuleSet
        uid: '@azure/arm-eventhub.NetworkRuleSet'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.EHNamespace>
    name: EHNamespace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EHNamespace
        fullName: EHNamespace
        uid: '@azure/arm-eventhub.EHNamespace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.MessagingPlan>
    name: MessagingPlan>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MessagingPlan
        fullName: MessagingPlan
        uid: '@azure/arm-eventhub.MessagingPlan'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.EHNamespaceListResult>
    name: EHNamespaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EHNamespaceListResult
        fullName: EHNamespaceListResult
        uid: '@azure/arm-eventhub.EHNamespaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
    name: AuthorizationRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AuthorizationRuleListResult
        fullName: AuthorizationRuleListResult
        uid: '@azure/arm-eventhub.AuthorizationRuleListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.AccessKeys>
    name: AccessKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AccessKeys
        fullName: AccessKeys
        uid: '@azure/arm-eventhub.AccessKeys'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.RegenerateAccessKeyParameters'
    name: RegenerateAccessKeyParameters
    spec.typeScript:
      - name: RegenerateAccessKeyParameters
        fullName: RegenerateAccessKeyParameters
        uid: '@azure/arm-eventhub.RegenerateAccessKeyParameters'
