### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.EventHubs'
    name: EventHubs
    fullName: EventHubs
    children:
      - '@azure/arm-eventhub.EventHubs.createOrUpdate'
      - '@azure/arm-eventhub.EventHubs.createOrUpdate_2'
      - '@azure/arm-eventhub.EventHubs.createOrUpdate_1'
      - '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule'
      - '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_2'
      - '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_1'
      - '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule'
      - '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_2'
      - '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_1'
      - '@azure/arm-eventhub.EventHubs.deleteMethod'
      - '@azure/arm-eventhub.EventHubs.deleteMethod_2'
      - '@azure/arm-eventhub.EventHubs.deleteMethod_1'
      - '@azure/arm-eventhub.EventHubs.constructor'
      - '@azure/arm-eventhub.EventHubs.get'
      - '@azure/arm-eventhub.EventHubs.get_2'
      - '@azure/arm-eventhub.EventHubs.get_1'
      - '@azure/arm-eventhub.EventHubs.getAuthorizationRule'
      - '@azure/arm-eventhub.EventHubs.getAuthorizationRule_2'
      - '@azure/arm-eventhub.EventHubs.getAuthorizationRule_1'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRules'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRules_2'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRules_1'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_2'
      - '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_1'
      - '@azure/arm-eventhub.EventHubs.listByNamespace_2'
      - '@azure/arm-eventhub.EventHubs.listByNamespace'
      - '@azure/arm-eventhub.EventHubs.listByNamespace_1'
      - '@azure/arm-eventhub.EventHubs.listByNamespaceNext'
      - '@azure/arm-eventhub.EventHubs.listByNamespaceNext_2'
      - '@azure/arm-eventhub.EventHubs.listByNamespaceNext_1'
      - '@azure/arm-eventhub.EventHubs.listKeys'
      - '@azure/arm-eventhub.EventHubs.listKeys_2'
      - '@azure/arm-eventhub.EventHubs.listKeys_1'
      - '@azure/arm-eventhub.EventHubs.regenerateKeys'
      - '@azure/arm-eventhub.EventHubs.regenerateKeys_2'
      - '@azure/arm-eventhub.EventHubs.regenerateKeys_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a EventHubs.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, Eventhub,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a new Event Hub as a nested resource within a
      Namespace.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: parameters
          type:
            - '@azure/arm-eventhub.Eventhub'
          description: Parameters supplied to create an Event Hub resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsCreateOrUpdateResponse>
        description: Promise<Models.EventHubsCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, Eventhub, RequestOptionsBase,
      ServiceCallback<Eventhub>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options:
        RequestOptionsBase, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: parameters
          type:
            - '@azure/arm-eventhub.Eventhub'
          description: Parameters supplied to create an Event Hub resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.Eventhub>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, Eventhub,
      ServiceCallback<Eventhub>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: parameters
          type:
            - '@azure/arm-eventhub.Eventhub'
          description: Parameters supplied to create an Event Hub resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.Eventhub>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an AuthorizationRule for the specified Event Hub.
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsCreateOrUpdateAuthorizationRuleResponse>
        description: Promise<Models.EventHubsCreateOrUpdateAuthorizationRuleResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_2'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, RequestOptionsBase, ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options: RequestOptionsBase,
        callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_1'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.AuthorizationRule'
          description: The shared access AuthorizationRule.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule'
    name: >-
      deleteAuthorizationRule(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Event Hub AuthorizationRule.
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_2'
    name: >-
      deleteAuthorizationRule(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_1'
    name: >-
      deleteAuthorizationRule(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Event Hub from the specified Namespace and resource group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.constructor'
    name: EventHubs(EventHubManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a EventHubs.
    syntax:
      content: 'new EventHubs(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventhub.EventHubManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an Event Hubs description for the specified Event Hub.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsGetResponse>
        description: Promise<Models.EventHubsGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Eventhub>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.Eventhub>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.get_1'
    name: 'get(string, string, string, ServiceCallback<Eventhub>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.Eventhub>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule'
    name: >-
      getAuthorizationRule(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an AuthorizationRule for an Event Hub by rule name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsGetAuthorizationRuleResponse>
        description: Promise<Models.EventHubsGetAuthorizationRuleResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule_2'
    name: >-
      getAuthorizationRule(string, string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule_1'
    name: >-
      getAuthorizationRule(string, string, string, string,
      ServiceCallback<AuthorizationRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules'
    name: 'listAuthorizationRules(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for an Event Hub.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsListAuthorizationRulesResponse>
        description: Promise<Models.EventHubsListAuthorizationRulesResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules_2'
    name: >-
      listAuthorizationRules(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules_1'
    name: >-
      listAuthorizationRules(string, string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext'
    name: 'listAuthorizationRulesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for an Event Hub.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsListAuthorizationRulesNextResponse>
        description: Promise<Models.EventHubsListAuthorizationRulesNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_2'
    name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_1'
    name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespace_2'
    name: >-
      listByNamespace(string, string, EventHubsListByNamespaceOptionalParams,
      ServiceCallback<EventHubListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options: EventHubsListByNamespaceOptionalParams, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - '@azure/arm-eventhub.EventHubsListByNamespaceOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EventHubListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespace'
    name: >-
      listByNamespace(string, string,
      Models.EventHubsListByNamespaceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the Event Hubs in a Namespace.
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: Models.EventHubsListByNamespaceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: options
          type:
            - Models.EventHubsListByNamespaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsListByNamespaceResponse>
        description: Promise<Models.EventHubsListByNamespaceResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespace_1'
    name: 'listByNamespace(string, string, ServiceCallback<EventHubListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EventHubListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext'
    name: 'listByNamespaceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the Event Hubs in a Namespace.
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsListByNamespaceNextResponse>
        description: Promise<Models.EventHubsListByNamespaceNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext_2'
    name: >-
      listByNamespaceNext(string, RequestOptionsBase,
      ServiceCallback<EventHubListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EventHubListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext_1'
    name: 'listByNamespaceNext(string, ServiceCallback<EventHubListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.EventHubListResult>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listKeys'
    name: 'listKeys(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the ACS and SAS connection strings for the Event Hub.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsListKeysResponse>
        description: Promise<Models.EventHubsListKeysResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listKeys_2'
    name: >-
      listKeys(string, string, string, string, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.listKeys_1'
    name: 'listKeys(string, string, string, string, ServiceCallback<AccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.regenerateKeys'
    name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the ACS and SAS connection strings for the Event Hub.
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EventHubsRegenerateKeysResponse>
        description: Promise<Models.EventHubsRegenerateKeysResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.regenerateKeys_2'
    name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubs.regenerateKeys_1'
    name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, ServiceCallback<AccessKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type:
            - string
          description: The Namespace name
        - id: eventHubName
          type:
            - string
          description: The Event Hub name
        - id: authorizationRuleName
          type:
            - string
          description: The authorization rule name.
        - id: parameters
          type:
            - '@azure/arm-eventhub.RegenerateAccessKeyParameters'
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.AccessKeys>
          description: |
            The callback
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.Eventhub'
    name: Eventhub
    spec.typeScript:
      - name: Eventhub
        fullName: Eventhub
        uid: '@azure/arm-eventhub.Eventhub'
  - uid: ServiceCallback<@azure/arm-eventhub.Eventhub>
    name: Eventhub>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Eventhub
        fullName: Eventhub
        uid: '@azure/arm-eventhub.Eventhub'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.AuthorizationRule'
    name: AuthorizationRule
    spec.typeScript:
      - name: AuthorizationRule
        fullName: AuthorizationRule
        uid: '@azure/arm-eventhub.AuthorizationRule'
  - uid: ServiceCallback<@azure/arm-eventhub.AuthorizationRule>
    name: AuthorizationRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AuthorizationRule
        fullName: AuthorizationRule
        uid: '@azure/arm-eventhub.AuthorizationRule'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.AuthorizationRuleListResult>
    name: AuthorizationRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AuthorizationRuleListResult
        fullName: AuthorizationRuleListResult
        uid: '@azure/arm-eventhub.AuthorizationRuleListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.EventHubListResult>
    name: EventHubListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventHubListResult
        fullName: EventHubListResult
        uid: '@azure/arm-eventhub.EventHubListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.EventHubsListByNamespaceOptionalParams'
    name: EventHubsListByNamespaceOptionalParams
    spec.typeScript:
      - name: EventHubsListByNamespaceOptionalParams
        fullName: EventHubsListByNamespaceOptionalParams
        uid: '@azure/arm-eventhub.EventHubsListByNamespaceOptionalParams'
  - uid: ServiceCallback<@azure/arm-eventhub.AccessKeys>
    name: AccessKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AccessKeys
        fullName: AccessKeys
        uid: '@azure/arm-eventhub.AccessKeys'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.RegenerateAccessKeyParameters'
    name: RegenerateAccessKeyParameters
    spec.typeScript:
      - name: RegenerateAccessKeyParameters
        fullName: RegenerateAccessKeyParameters
        uid: '@azure/arm-eventhub.RegenerateAccessKeyParameters'
