### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerinstance.ContainerGroups'
    name: ContainerGroups
    fullName: ContainerGroups
    children:
      - '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdate'
      - '@azure/arm-containerinstance.ContainerGroups.beginRestart'
      - '@azure/arm-containerinstance.ContainerGroups.beginStart'
      - '@azure/arm-containerinstance.ContainerGroups.constructor'
      - '@azure/arm-containerinstance.ContainerGroups.createOrUpdate'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod_2'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod_1'
      - '@azure/arm-containerinstance.ContainerGroups.get'
      - '@azure/arm-containerinstance.ContainerGroups.get_2'
      - '@azure/arm-containerinstance.ContainerGroups.get_1'
      - '@azure/arm-containerinstance.ContainerGroups.list'
      - '@azure/arm-containerinstance.ContainerGroups.list_2'
      - '@azure/arm-containerinstance.ContainerGroups.list_1'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_2'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_1'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_2'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_1'
      - '@azure/arm-containerinstance.ContainerGroups.listNext'
      - '@azure/arm-containerinstance.ContainerGroups.listNext_2'
      - '@azure/arm-containerinstance.ContainerGroups.listNext_1'
      - '@azure/arm-containerinstance.ContainerGroups.restart'
      - '@azure/arm-containerinstance.ContainerGroups.start'
      - '@azure/arm-containerinstance.ContainerGroups.stop'
      - '@azure/arm-containerinstance.ContainerGroups.stop_2'
      - '@azure/arm-containerinstance.ContainerGroups.stop_1'
      - '@azure/arm-containerinstance.ContainerGroups.update'
      - '@azure/arm-containerinstance.ContainerGroups.update_2'
      - '@azure/arm-containerinstance.ContainerGroups.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ContainerGroups.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, ContainerGroup,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update container groups with specified configurations.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        containerGroupName: string, containerGroup: ContainerGroup, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: containerGroup
          type:
            - '@azure/arm-containerinstance.ContainerGroup'
          description: The properties of the container group to be created or updated.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginRestart'
    name: 'beginRestart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restarts all containers in a container group in place. If container image
      has updates, new image

      will be downloaded.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, containerGroupName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginStart'
    name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts all containers in a container group.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, containerGroupName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.constructor'
    name: ContainerGroups(ContainerInstanceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ContainerGroups.
    syntax:
      content: 'new ContainerGroups(client: ContainerInstanceManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-containerinstance.ContainerInstanceManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.createOrUpdate'
    name: 'createOrUpdate(string, string, ContainerGroup, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update container groups with specified configurations.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, containerGroupName:
        string, containerGroup: ContainerGroup, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: containerGroup
          type:
            - '@azure/arm-containerinstance.ContainerGroup'
          description: The properties of the container group to be created or updated.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsCreateOrUpdateResponse>
        description: Promise<Models.ContainerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete the specified container group in the specified subscription and
      resource group. The

      operation does not delete other resources provided by the user, such as
      volumes.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerGroupName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsDeleteMethodResponse>
        description: Promise<Models.ContainerGroupsDeleteMethodResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod_2'
    name: >-
      deleteMethod(string, string, RequestOptionsBase,
      ServiceCallback<ContainerGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerGroupName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerGroupName:
        string, callback: ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of the specified container group in the specified
      subscription and resource

      group. The operation returns the properties of each container group
      including containers, image

      registry credentials, restart policy, IP address type, OS type, state, and
      volumes.
    syntax:
      content: >-
        function get(resourceGroupName: string, containerGroupName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsGetResponse>
        description: Promise<Models.ContainerGroupsGetResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, containerGroupName: string,
        options: RequestOptionsBase, callback: ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get_1'
    name: 'get(string, string, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, containerGroupName: string,
        callback: ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of container groups in the specified subscription. This
      operation returns properties

      of each container group including containers, image registry credentials,
      restart policy, IP

      address type, OS type, state, and volumes.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListResponse>
        description: Promise<Models.ContainerGroupsListResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list_1'
    name: list(ServiceCallback<ContainerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of container groups in a specified subscription and resource
      group. This operation

      returns properties of each container group including containers, image
      registry credentials,

      restart policy, IP address type, OS type, state, and volumes.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupResponse>
        description: Promise<Models.ContainerGroupsListByResourceGroupResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ContainerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of container groups in a specified subscription and resource
      group. This operation

      returns properties of each container group including containers, image
      registry credentials,

      restart policy, IP address type, OS type, state, and volumes.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupNextResponse>
        description: Promise<Models.ContainerGroupsListByResourceGroupNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ContainerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of container groups in the specified subscription. This
      operation returns properties

      of each container group including containers, image registry credentials,
      restart policy, IP

      address type, OS type, state, and volumes.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListNextResponse>
        description: Promise<Models.ContainerGroupsListNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ContainerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext_1'
    name: 'listNext(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ContainerGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.restart'
    name: 'restart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restarts all containers in a container group in place. If container image
      has updates, new image

      will be downloaded.
    syntax:
      content: >-
        function restart(resourceGroupName: string, containerGroupName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.start'
    name: 'start(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts all containers in a container group.
    syntax:
      content: >-
        function start(resourceGroupName: string, containerGroupName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop'
    name: 'stop(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Stops all containers in a container group. Compute resources will be
      deallocated and billing

      will stop.
    syntax:
      content: >-
        function stop(resourceGroupName: string, containerGroupName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop_2'
    name: 'stop(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, containerGroupName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop_1'
    name: 'stop(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, containerGroupName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update'
    name: 'update(string, string, Resource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates container group tags with specified values.
    syntax:
      content: >-
        function update(resourceGroupName: string, containerGroupName: string,
        resource: Resource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: The container group resource with just the tags to be updated.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsUpdateResponse>
        description: Promise<Models.ContainerGroupsUpdateResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update_2'
    name: >-
      update(string, string, Resource, RequestOptionsBase,
      ServiceCallback<ContainerGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, containerGroupName: string,
        resource: Resource, options: RequestOptionsBase, callback:
        ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: The container group resource with just the tags to be updated.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update_1'
    name: 'update(string, string, Resource, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, containerGroupName: string,
        resource: Resource, callback: ServiceCallback<ContainerGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerGroupName
          type:
            - string
          description: The name of the container group.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: The container group resource with just the tags to be updated.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            The callback
    package: '@azure/arm-containerinstance'
references:
  - uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
    name: ContainerInstanceManagementClientContext
    spec.typeScript:
      - name: ContainerInstanceManagementClientContext
        fullName: ContainerInstanceManagementClientContext
        uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
  - uid: '@azure/arm-containerinstance.ContainerGroup'
    name: ContainerGroup
    spec.typeScript:
      - name: ContainerGroup
        fullName: ContainerGroup
        uid: '@azure/arm-containerinstance.ContainerGroup'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
    name: ContainerGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerGroup
        fullName: ContainerGroup
        uid: '@azure/arm-containerinstance.ContainerGroup'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
    name: ContainerGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerGroupListResult
        fullName: ContainerGroupListResult
        uid: '@azure/arm-containerinstance.ContainerGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-containerinstance.Resource'
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: '@azure/arm-containerinstance.Resource'
