### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-appservice.AppServicePlans'
    name: AppServicePlans
    fullName: AppServicePlans
    children:
      - '@azure/arm-appservice.AppServicePlans.constructor'
      - '@azure/arm-appservice.AppServicePlans.beginCreateOrUpdate'
      - '@azure/arm-appservice.AppServicePlans.createOrUpdate'
      - '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute'
      - '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute_2'
      - '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute_1'
      - '@azure/arm-appservice.AppServicePlans.deleteHybridConnection'
      - '@azure/arm-appservice.AppServicePlans.deleteHybridConnection_2'
      - '@azure/arm-appservice.AppServicePlans.deleteHybridConnection_1'
      - '@azure/arm-appservice.AppServicePlans.deleteMethod'
      - '@azure/arm-appservice.AppServicePlans.deleteMethod_2'
      - '@azure/arm-appservice.AppServicePlans.deleteMethod_1'
      - '@azure/arm-appservice.AppServicePlans.deleteVnetRoute'
      - '@azure/arm-appservice.AppServicePlans.deleteVnetRoute_2'
      - '@azure/arm-appservice.AppServicePlans.deleteVnetRoute_1'
      - '@azure/arm-appservice.AppServicePlans.get'
      - '@azure/arm-appservice.AppServicePlans.get_2'
      - '@azure/arm-appservice.AppServicePlans.get_1'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnection'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnection_2'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnection_1'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit_2'
      - '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit_1'
      - '@azure/arm-appservice.AppServicePlans.getRouteForVnet'
      - '@azure/arm-appservice.AppServicePlans.getRouteForVnet_2'
      - '@azure/arm-appservice.AppServicePlans.getRouteForVnet_1'
      - '@azure/arm-appservice.AppServicePlans.getServerFarmSkus'
      - '@azure/arm-appservice.AppServicePlans.getServerFarmSkus_2'
      - '@azure/arm-appservice.AppServicePlans.getServerFarmSkus_1'
      - '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm'
      - '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm_2'
      - '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm_1'
      - '@azure/arm-appservice.AppServicePlans.getVnetGateway'
      - '@azure/arm-appservice.AppServicePlans.getVnetGateway_2'
      - '@azure/arm-appservice.AppServicePlans.getVnetGateway_1'
      - '@azure/arm-appservice.AppServicePlans.list_2'
      - '@azure/arm-appservice.AppServicePlans.list'
      - '@azure/arm-appservice.AppServicePlans.list_1'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroup'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroup_2'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroup_1'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext_2'
      - '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext_1'
      - '@azure/arm-appservice.AppServicePlans.listCapabilities'
      - '@azure/arm-appservice.AppServicePlans.listCapabilities_2'
      - '@azure/arm-appservice.AppServicePlans.listCapabilities_1'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys_2'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys_1'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnections'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnections_2'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnections_1'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext_2'
      - '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext_1'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintions'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintions_2'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintions_1'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext_2'
      - '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext_1'
      - '@azure/arm-appservice.AppServicePlans.listMetrics_2'
      - '@azure/arm-appservice.AppServicePlans.listMetrics'
      - '@azure/arm-appservice.AppServicePlans.listMetrics_1'
      - '@azure/arm-appservice.AppServicePlans.listMetricsNext'
      - '@azure/arm-appservice.AppServicePlans.listMetricsNext_2'
      - '@azure/arm-appservice.AppServicePlans.listMetricsNext_1'
      - '@azure/arm-appservice.AppServicePlans.listNext'
      - '@azure/arm-appservice.AppServicePlans.listNext_2'
      - '@azure/arm-appservice.AppServicePlans.listNext_1'
      - '@azure/arm-appservice.AppServicePlans.listRoutesForVnet'
      - '@azure/arm-appservice.AppServicePlans.listRoutesForVnet_2'
      - '@azure/arm-appservice.AppServicePlans.listRoutesForVnet_1'
      - '@azure/arm-appservice.AppServicePlans.listUsages_2'
      - '@azure/arm-appservice.AppServicePlans.listUsages'
      - '@azure/arm-appservice.AppServicePlans.listUsages_1'
      - '@azure/arm-appservice.AppServicePlans.listUsagesNext'
      - '@azure/arm-appservice.AppServicePlans.listUsagesNext_2'
      - '@azure/arm-appservice.AppServicePlans.listUsagesNext_1'
      - '@azure/arm-appservice.AppServicePlans.listVnets'
      - '@azure/arm-appservice.AppServicePlans.listVnets_2'
      - '@azure/arm-appservice.AppServicePlans.listVnets_1'
      - '@azure/arm-appservice.AppServicePlans.listWebApps_2'
      - '@azure/arm-appservice.AppServicePlans.listWebApps'
      - '@azure/arm-appservice.AppServicePlans.listWebApps_1'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection_2'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection_1'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext'
      - >-
        @azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext_2
      - >-
        @azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext_1
      - '@azure/arm-appservice.AppServicePlans.listWebAppsNext'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsNext_2'
      - '@azure/arm-appservice.AppServicePlans.listWebAppsNext_1'
      - '@azure/arm-appservice.AppServicePlans.rebootWorker'
      - '@azure/arm-appservice.AppServicePlans.rebootWorker_2'
      - '@azure/arm-appservice.AppServicePlans.rebootWorker_1'
      - '@azure/arm-appservice.AppServicePlans.restartWebApps_2'
      - '@azure/arm-appservice.AppServicePlans.restartWebApps'
      - '@azure/arm-appservice.AppServicePlans.restartWebApps_1'
      - '@azure/arm-appservice.AppServicePlans.update'
      - '@azure/arm-appservice.AppServicePlans.update_2'
      - '@azure/arm-appservice.AppServicePlans.update_1'
      - '@azure/arm-appservice.AppServicePlans.updateVnetGateway'
      - '@azure/arm-appservice.AppServicePlans.updateVnetGateway_2'
      - '@azure/arm-appservice.AppServicePlans.updateVnetGateway_1'
      - '@azure/arm-appservice.AppServicePlans.updateVnetRoute'
      - '@azure/arm-appservice.AppServicePlans.updateVnetRoute_2'
      - '@azure/arm-appservice.AppServicePlans.updateVnetRoute_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a AppServicePlans.
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.constructor'
    name: AppServicePlans(WebSiteManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a AppServicePlans.
    syntax:
      content: 'new AppServicePlans(client: WebSiteManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-appservice.WebSiteManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, AppServicePlan,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an App Service Plan.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, name: string,
        appServicePlan: AppServicePlan, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: appServicePlan
          type:
            - '@azure/arm-appservice.AppServicePlan'
          description: Details of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.createOrUpdate'
    name: 'createOrUpdate(string, string, AppServicePlan, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an App Service Plan.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, name: string,
        appServicePlan: AppServicePlan, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: appServicePlan
          type:
            - '@azure/arm-appservice.AppServicePlan'
          description: Details of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansCreateOrUpdateResponse>
        description: Promise<Models.AppServicePlansCreateOrUpdateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute'
    name: >-
      createOrUpdateVnetRoute(string, string, string, string, VnetRoute,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a Virtual Network route in an App Service plan.
    syntax:
      content: >-
        function createOrUpdateVnetRoute(resourceGroupName: string, name:
        string, vnetName: string, routeName: string, route: VnetRoute, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansCreateOrUpdateVnetRouteResponse>
        description: Promise<Models.AppServicePlansCreateOrUpdateVnetRouteResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute_2'
    name: >-
      createOrUpdateVnetRoute(string, string, string, string, VnetRoute,
      RequestOptionsBase, ServiceCallback<VnetRoute>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetRoute(resourceGroupName: string, name:
        string, vnetName: string, routeName: string, route: VnetRoute, options:
        RequestOptionsBase, callback: ServiceCallback<VnetRoute>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetRoute>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.createOrUpdateVnetRoute_1'
    name: >-
      createOrUpdateVnetRoute(string, string, string, string, VnetRoute,
      ServiceCallback<VnetRoute>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetRoute(resourceGroupName: string, name:
        string, vnetName: string, routeName: string, route: VnetRoute, callback:
        ServiceCallback<VnetRoute>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetRoute>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteHybridConnection'
    name: >-
      deleteHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a Hybrid Connection in use in an App Service plan.
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteHybridConnection_2'
    name: >-
      deleteHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteHybridConnection_1'
    name: >-
      deleteHybridConnection(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete an App Service plan.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteVnetRoute'
    name: 'deleteVnetRoute(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a Virtual Network route in an App Service plan.
    syntax:
      content: >-
        function deleteVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteVnetRoute_2'
    name: >-
      deleteVnetRoute(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.deleteVnetRoute_1'
    name: 'deleteVnetRoute(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an App Service plan.
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetResponse>
        description: Promise<Models.AppServicePlansGetResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<AppServicePlan>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<AppServicePlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlan>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.get_1'
    name: 'get(string, string, ServiceCallback<AppServicePlan>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, callback:
        ServiceCallback<AppServicePlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlan>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnection'
    name: >-
      getHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a Hybrid Connection in use in an App Service plan.
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetHybridConnectionResponse>
        description: Promise<Models.AppServicePlansGetHybridConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnection_2'
    name: >-
      getHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnection_1'
    name: >-
      getHybridConnection(string, string, string, string,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: Name of the Service Bus relay.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit'
    name: 'getHybridConnectionPlanLimit(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the maximum number of Hybrid Connections allowed in an App Service
      plan.
    syntax:
      content: >-
        function getHybridConnectionPlanLimit(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetHybridConnectionPlanLimitResponse>
        description: Promise<Models.AppServicePlansGetHybridConnectionPlanLimitResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit_2'
    name: >-
      getHybridConnectionPlanLimit(string, string, RequestOptionsBase,
      ServiceCallback<HybridConnectionLimits>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnectionPlanLimit(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnectionLimits>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionLimits>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getHybridConnectionPlanLimit_1'
    name: >-
      getHybridConnectionPlanLimit(string, string,
      ServiceCallback<HybridConnectionLimits>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnectionPlanLimit(resourceGroupName: string, name:
        string, callback: ServiceCallback<HybridConnectionLimits>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionLimits>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getRouteForVnet'
    name: 'getRouteForVnet(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Virtual Network route in an App Service plan.
    syntax:
      content: >-
        function getRouteForVnet(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetRouteForVnetResponse>
        description: Promise<Models.AppServicePlansGetRouteForVnetResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getRouteForVnet_2'
    name: >-
      getRouteForVnet(string, string, string, string, RequestOptionsBase,
      ServiceCallback<VnetRoute[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRouteForVnet(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, options: RequestOptionsBase,
        callback: ServiceCallback<VnetRoute[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetRoute[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getRouteForVnet_1'
    name: >-
      getRouteForVnet(string, string, string, string,
      ServiceCallback<VnetRoute[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRouteForVnet(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, callback:
        ServiceCallback<VnetRoute[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetRoute[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getServerFarmSkus'
    name: 'getServerFarmSkus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all selectable SKUs for a given App Service Plan
    syntax:
      content: >-
        function getServerFarmSkus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetServerFarmSkusResponse>
        description: Promise<Models.AppServicePlansGetServerFarmSkusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getServerFarmSkus_2'
    name: >-
      getServerFarmSkus(string, string, RequestOptionsBase,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getServerFarmSkus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getServerFarmSkus_1'
    name: 'getServerFarmSkus(string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getServerFarmSkus(resourceGroupName: string, name: string,
        callback: ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm'
    name: 'getVnetFromServerFarm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Virtual Network associated with an App Service plan.
    syntax:
      content: >-
        function getVnetFromServerFarm(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetVnetFromServerFarmResponse>
        description: Promise<Models.AppServicePlansGetVnetFromServerFarmResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm_2'
    name: >-
      getVnetFromServerFarm(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetFromServerFarm(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetFromServerFarm_1'
    name: 'getVnetFromServerFarm(string, string, string, ServiceCallback<VnetInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetFromServerFarm(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetGateway'
    name: 'getVnetGateway(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Virtual Network gateway.
    syntax:
      content: >-
        function getVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansGetVnetGatewayResponse>
        description: Promise<Models.AppServicePlansGetVnetGatewayResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetGateway_2'
    name: >-
      getVnetGateway(string, string, string, string, RequestOptionsBase,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.getVnetGateway_1'
    name: >-
      getVnetGateway(string, string, string, string,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.list_2'
    name: >-
      list(AppServicePlansListOptionalParams,
      ServiceCallback<AppServicePlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: AppServicePlansListOptionalParams, callback:
        ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: options
          type:
            - '@azure/arm-appservice.AppServicePlansListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.list'
    name: list(Models.AppServicePlansListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all App Service plans for a subscription.
    syntax:
      content: 'function list(options?: Models.AppServicePlansListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.AppServicePlansListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListResponse>
        description: Promise<Models.AppServicePlansListResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.list_1'
    name: list(ServiceCallback<AppServicePlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<AppServicePlanCollection>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all App Service plans in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListByResourceGroupResponse>
        description: Promise<Models.AppServicePlansListByResourceGroupResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<AppServicePlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<AppServicePlanCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all App Service plans in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListByResourceGroupNextResponse>
        description: Promise<Models.AppServicePlansListByResourceGroupNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<AppServicePlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<AppServicePlanCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listCapabilities'
    name: 'listCapabilities(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all capabilities of an App Service plan.
    syntax:
      content: >-
        function listCapabilities(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListCapabilitiesResponse>
        description: Promise<Models.AppServicePlansListCapabilitiesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listCapabilities_2'
    name: >-
      listCapabilities(string, string, RequestOptionsBase,
      ServiceCallback<Capability[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCapabilities(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<Capability[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.Capability[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listCapabilities_1'
    name: 'listCapabilities(string, string, ServiceCallback<Capability[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCapabilities(resourceGroupName: string, name: string,
        callback: ServiceCallback<Capability[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.Capability[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the send key name and value of a Hybrid Connection.
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: The name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: The name of the Service Bus relay.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListHybridConnectionKeysResponse>
        description: Promise<Models.AppServicePlansListHybridConnectionKeysResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys_2'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      RequestOptionsBase, ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: The name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: The name of the Service Bus relay.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionKeys_1'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, callback:
        ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: The name of the Service Bus namespace.
        - id: relayName
          type:
            - string
          description: The name of the Service Bus relay.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnections'
    name: 'listHybridConnections(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve all Hybrid Connections in use in an App Service plan.
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListHybridConnectionsResponse>
        description: Promise<Models.AppServicePlansListHybridConnectionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnections_2'
    name: >-
      listHybridConnections(string, string, RequestOptionsBase,
      ServiceCallback<HybridConnectionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnectionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnections_1'
    name: >-
      listHybridConnections(string, string,
      ServiceCallback<HybridConnectionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        callback: ServiceCallback<HybridConnectionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext'
    name: 'listHybridConnectionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve all Hybrid Connections in use in an App Service plan.
    syntax:
      content: >-
        function listHybridConnectionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListHybridConnectionsNextResponse>
        description: Promise<Models.AppServicePlansListHybridConnectionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext_2'
    name: >-
      listHybridConnectionsNext(string, RequestOptionsBase,
      ServiceCallback<HybridConnectionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HybridConnectionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listHybridConnectionsNext_1'
    name: >-
      listHybridConnectionsNext(string,
      ServiceCallback<HybridConnectionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionsNext(nextPageLink: string, callback:
        ServiceCallback<HybridConnectionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintions'
    name: 'listMetricDefintions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get metrics that can be queried for an App Service plan, and their
      definitions.
    syntax:
      content: >-
        function listMetricDefintions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListMetricDefintionsResponse>
        description: Promise<Models.AppServicePlansListMetricDefintionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintions_2'
    name: >-
      listMetricDefintions(string, string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefintions(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintions_1'
    name: >-
      listMetricDefintions(string, string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefintions(resourceGroupName: string, name: string,
        callback: ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext'
    name: 'listMetricDefintionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get metrics that can be queried for an App Service plan, and their
      definitions.
    syntax:
      content: >-
        function listMetricDefintionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListMetricDefintionsNextResponse>
        description: Promise<Models.AppServicePlansListMetricDefintionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext_2'
    name: >-
      listMetricDefintionsNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefintionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricDefintionsNext_1'
    name: >-
      listMetricDefintionsNext(string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefintionsNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetrics_2'
    name: >-
      listMetrics(string, string, AppServicePlansListMetricsOptionalParams,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, options:
        AppServicePlansListMetricsOptionalParams, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - '@azure/arm-appservice.AppServicePlansListMetricsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetrics'
    name: >-
      listMetrics(string, string,
      Models.AppServicePlansListMetricsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metrics for an App Service plan.
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, options?:
        Models.AppServicePlansListMetricsOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - Models.AppServicePlansListMetricsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListMetricsResponse>
        description: Promise<Models.AppServicePlansListMetricsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetrics_1'
    name: 'listMetrics(string, string, ServiceCallback<ResourceMetricCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricsNext'
    name: 'listMetricsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metrics for an App Service plan.
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListMetricsNextResponse>
        description: Promise<Models.AppServicePlansListMetricsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricsNext_2'
    name: >-
      listMetricsNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listMetricsNext_1'
    name: 'listMetricsNext(string, ServiceCallback<ResourceMetricCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all App Service plans for a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListNextResponse>
        description: Promise<Models.AppServicePlansListNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<AppServicePlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listNext_1'
    name: 'listNext(string, ServiceCallback<AppServicePlanCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<AppServicePlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listRoutesForVnet'
    name: 'listRoutesForVnet(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get all routes that are associated with a Virtual Network in an App
      Service plan.
    syntax:
      content: >-
        function listRoutesForVnet(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListRoutesForVnetResponse>
        description: Promise<Models.AppServicePlansListRoutesForVnetResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listRoutesForVnet_2'
    name: >-
      listRoutesForVnet(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetRoute[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRoutesForVnet(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetRoute[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetRoute[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listRoutesForVnet_1'
    name: 'listRoutesForVnet(string, string, string, ServiceCallback<VnetRoute[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRoutesForVnet(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<VnetRoute[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetRoute[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsages_2'
    name: >-
      listUsages(string, string, AppServicePlansListUsagesOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options:
        AppServicePlansListUsagesOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - '@azure/arm-appservice.AppServicePlansListUsagesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsages'
    name: 'listUsages(string, string, Models.AppServicePlansListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets server farm usage information
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options?:
        Models.AppServicePlansListUsagesOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - Models.AppServicePlansListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListUsagesResponse>
        description: Promise<Models.AppServicePlansListUsagesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<CsmUsageQuotaCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsagesNext'
    name: 'listUsagesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets server farm usage information
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListUsagesNextResponse>
        description: Promise<Models.AppServicePlansListUsagesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsagesNext_2'
    name: >-
      listUsagesNext(string, RequestOptionsBase,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listUsagesNext_1'
    name: 'listUsagesNext(string, ServiceCallback<CsmUsageQuotaCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listVnets'
    name: 'listVnets(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all Virtual Networks associated with an App Service plan.
    syntax:
      content: >-
        function listVnets(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListVnetsResponse>
        description: Promise<Models.AppServicePlansListVnetsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listVnets_2'
    name: 'listVnets(string, string, RequestOptionsBase, ServiceCallback<VnetInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnets(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listVnets_1'
    name: 'listVnets(string, string, ServiceCallback<VnetInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnets(resourceGroupName: string, name: string, callback:
        ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebApps_2'
    name: >-
      listWebApps(string, string, AppServicePlansListWebAppsOptionalParams,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebApps(resourceGroupName: string, name: string, options:
        AppServicePlansListWebAppsOptionalParams, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - '@azure/arm-appservice.AppServicePlansListWebAppsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebApps'
    name: >-
      listWebApps(string, string,
      Models.AppServicePlansListWebAppsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps associated with an App Service plan.
    syntax:
      content: >-
        function listWebApps(resourceGroupName: string, name: string, options?:
        Models.AppServicePlansListWebAppsOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - Models.AppServicePlansListWebAppsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListWebAppsResponse>
        description: Promise<Models.AppServicePlansListWebAppsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebApps_1'
    name: 'listWebApps(string, string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebApps(resourceGroupName: string, name: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection'
    name: >-
      listWebAppsByHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps that use a Hybrid Connection in an App Service Plan.
    syntax:
      content: >-
        function listWebAppsByHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Hybrid Connection namespace.
        - id: relayName
          type:
            - string
          description: Name of the Hybrid Connection relay.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListWebAppsByHybridConnectionResponse>
        description: Promise<Models.AppServicePlansListWebAppsByHybridConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection_2'
    name: >-
      listWebAppsByHybridConnection(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsByHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Hybrid Connection namespace.
        - id: relayName
          type:
            - string
          description: Name of the Hybrid Connection relay.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnection_1'
    name: >-
      listWebAppsByHybridConnection(string, string, string, string,
      ServiceCallback<ResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsByHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, callback:
        ServiceCallback<ResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: namespaceName
          type:
            - string
          description: Name of the Hybrid Connection namespace.
        - id: relayName
          type:
            - string
          description: Name of the Hybrid Connection relay.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext'
    name: 'listWebAppsByHybridConnectionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps that use a Hybrid Connection in an App Service Plan.
    syntax:
      content: >-
        function listWebAppsByHybridConnectionNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.AppServicePlansListWebAppsByHybridConnectionNextResponse>
        description: >-
          Promise<Models.AppServicePlansListWebAppsByHybridConnectionNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext_2'
    name: >-
      listWebAppsByHybridConnectionNext(string, RequestOptionsBase,
      ServiceCallback<ResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsByHybridConnectionNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsByHybridConnectionNext_1'
    name: >-
      listWebAppsByHybridConnectionNext(string,
      ServiceCallback<ResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsByHybridConnectionNext(nextPageLink: string,
        callback: ServiceCallback<ResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsNext'
    name: 'listWebAppsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps associated with an App Service plan.
    syntax:
      content: >-
        function listWebAppsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansListWebAppsNextResponse>
        description: Promise<Models.AppServicePlansListWebAppsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsNext_2'
    name: >-
      listWebAppsNext(string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.listWebAppsNext_1'
    name: 'listWebAppsNext(string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebAppsNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.rebootWorker'
    name: 'rebootWorker(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Reboot a worker machine in an App Service plan.
    syntax:
      content: >-
        function rebootWorker(resourceGroupName: string, name: string,
        workerName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: workerName
          type:
            - string
          description: 'Name of worker machine, which typically starts with RD.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.rebootWorker_2'
    name: >-
      rebootWorker(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rebootWorker(resourceGroupName: string, name: string,
        workerName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: workerName
          type:
            - string
          description: 'Name of worker machine, which typically starts with RD.'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.rebootWorker_1'
    name: 'rebootWorker(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rebootWorker(resourceGroupName: string, name: string,
        workerName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: workerName
          type:
            - string
          description: 'Name of worker machine, which typically starts with RD.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.restartWebApps_2'
    name: >-
      restartWebApps(string, string,
      AppServicePlansRestartWebAppsOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restartWebApps(resourceGroupName: string, name: string,
        options: AppServicePlansRestartWebAppsOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - '@azure/arm-appservice.AppServicePlansRestartWebAppsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.restartWebApps'
    name: >-
      restartWebApps(string, string,
      Models.AppServicePlansRestartWebAppsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restart all apps in an App Service plan.
    syntax:
      content: >-
        function restartWebApps(resourceGroupName: string, name: string,
        options?: Models.AppServicePlansRestartWebAppsOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: options
          type:
            - Models.AppServicePlansRestartWebAppsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.restartWebApps_1'
    name: 'restartWebApps(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restartWebApps(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.update'
    name: >-
      update(string, string, AppServicePlanPatchResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an App Service Plan.
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, appServicePlan:
        AppServicePlanPatchResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: appServicePlan
          type:
            - '@azure/arm-appservice.AppServicePlanPatchResource'
          description: Details of the App Service plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansUpdateResponse>
        description: Promise<Models.AppServicePlansUpdateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.update_2'
    name: >-
      update(string, string, AppServicePlanPatchResource, RequestOptionsBase,
      ServiceCallback<AppServicePlan>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, appServicePlan:
        AppServicePlanPatchResource, options: RequestOptionsBase, callback:
        ServiceCallback<AppServicePlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: appServicePlan
          type:
            - '@azure/arm-appservice.AppServicePlanPatchResource'
          description: Details of the App Service plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlan>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.update_1'
    name: >-
      update(string, string, AppServicePlanPatchResource,
      ServiceCallback<AppServicePlan>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, appServicePlan:
        AppServicePlanPatchResource, callback: ServiceCallback<AppServicePlan>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: appServicePlan
          type:
            - '@azure/arm-appservice.AppServicePlanPatchResource'
          description: Details of the App Service plan.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.AppServicePlan>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetGateway'
    name: >-
      updateVnetGateway(string, string, string, string, VnetGateway,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a Virtual Network gateway.
    syntax:
      content: >-
        function updateVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, connectionEnvelope: VnetGateway,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: Definition of the gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansUpdateVnetGatewayResponse>
        description: Promise<Models.AppServicePlansUpdateVnetGatewayResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetGateway_2'
    name: >-
      updateVnetGateway(string, string, string, string, VnetGateway,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, connectionEnvelope: VnetGateway,
        options: RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: Definition of the gateway.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetGateway_1'
    name: >-
      updateVnetGateway(string, string, string, string, VnetGateway,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetGateway(resourceGroupName: string, name: string,
        vnetName: string, gatewayName: string, connectionEnvelope: VnetGateway,
        callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: Name of the gateway. Only the 'primary' gateway is supported.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: Definition of the gateway.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetRoute'
    name: >-
      updateVnetRoute(string, string, string, string, VnetRoute,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a Virtual Network route in an App Service plan.
    syntax:
      content: >-
        function updateVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, route: VnetRoute, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppServicePlansUpdateVnetRouteResponse>
        description: Promise<Models.AppServicePlansUpdateVnetRouteResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetRoute_2'
    name: >-
      updateVnetRoute(string, string, string, string, VnetRoute,
      RequestOptionsBase, ServiceCallback<VnetRoute>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, route: VnetRoute, options:
        RequestOptionsBase, callback: ServiceCallback<VnetRoute>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetRoute>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.AppServicePlans.updateVnetRoute_1'
    name: >-
      updateVnetRoute(string, string, string, string, VnetRoute,
      ServiceCallback<VnetRoute>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetRoute(resourceGroupName: string, name: string,
        vnetName: string, routeName: string, route: VnetRoute, callback:
        ServiceCallback<VnetRoute>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the App Service plan.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: routeName
          type:
            - string
          description: Name of the Virtual Network route.
        - id: route
          type:
            - '@azure/arm-appservice.VnetRoute'
          description: Definition of the Virtual Network route.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetRoute>
          description: |
            The callback
    package: '@azure/arm-appservice'
references:
  - uid: '@azure/arm-appservice.WebSiteManagementClientContext'
    name: WebSiteManagementClientContext
    spec.typeScript:
      - name: WebSiteManagementClientContext
        fullName: WebSiteManagementClientContext
        uid: '@azure/arm-appservice.WebSiteManagementClientContext'
  - uid: '@azure/arm-appservice.AppServicePlan'
    name: AppServicePlan
    spec.typeScript:
      - name: AppServicePlan
        fullName: AppServicePlan
        uid: '@azure/arm-appservice.AppServicePlan'
  - uid: '@azure/arm-appservice.VnetRoute'
    name: VnetRoute
    spec.typeScript:
      - name: VnetRoute
        fullName: VnetRoute
        uid: '@azure/arm-appservice.VnetRoute'
  - uid: ServiceCallback<@azure/arm-appservice.VnetRoute>
    name: VnetRoute>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetRoute
        fullName: VnetRoute
        uid: '@azure/arm-appservice.VnetRoute'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.AppServicePlan>
    name: AppServicePlan>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AppServicePlan
        fullName: AppServicePlan
        uid: '@azure/arm-appservice.AppServicePlan'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnection>
    name: HybridConnection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnection
        fullName: HybridConnection
        uid: '@azure/arm-appservice.HybridConnection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnectionLimits>
    name: HybridConnectionLimits>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnectionLimits
        fullName: HybridConnectionLimits
        uid: '@azure/arm-appservice.HybridConnectionLimits'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/arm-appservice.VnetRoute[]>'
    name: 'VnetRoute[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetRoute
        fullName: VnetRoute
        uid: '@azure/arm-appservice.VnetRoute'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/arm-appservice.VnetInfo>
    name: VnetInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetInfo
        fullName: VnetInfo
        uid: '@azure/arm-appservice.VnetInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.VnetGateway>
    name: VnetGateway>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetGateway
        fullName: VnetGateway
        uid: '@azure/arm-appservice.VnetGateway'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.AppServicePlanCollection>
    name: AppServicePlanCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AppServicePlanCollection
        fullName: AppServicePlanCollection
        uid: '@azure/arm-appservice.AppServicePlanCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.AppServicePlansListOptionalParams'
    name: AppServicePlansListOptionalParams
    spec.typeScript:
      - name: AppServicePlansListOptionalParams
        fullName: AppServicePlansListOptionalParams
        uid: '@azure/arm-appservice.AppServicePlansListOptionalParams'
  - uid: 'ServiceCallback<@azure/arm-appservice.Capability[]>'
    name: 'Capability[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Capability
        fullName: Capability
        uid: '@azure/arm-appservice.Capability'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
    name: HybridConnectionKey>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnectionKey
        fullName: HybridConnectionKey
        uid: '@azure/arm-appservice.HybridConnectionKey'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnectionCollection>
    name: HybridConnectionCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnectionCollection
        fullName: HybridConnectionCollection
        uid: '@azure/arm-appservice.HybridConnectionCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
    name: ResourceMetricDefinitionCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceMetricDefinitionCollection
        fullName: ResourceMetricDefinitionCollection
        uid: '@azure/arm-appservice.ResourceMetricDefinitionCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
    name: ResourceMetricCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceMetricCollection
        fullName: ResourceMetricCollection
        uid: '@azure/arm-appservice.ResourceMetricCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.AppServicePlansListMetricsOptionalParams'
    name: AppServicePlansListMetricsOptionalParams
    spec.typeScript:
      - name: AppServicePlansListMetricsOptionalParams
        fullName: AppServicePlansListMetricsOptionalParams
        uid: '@azure/arm-appservice.AppServicePlansListMetricsOptionalParams'
  - uid: ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
    name: CsmUsageQuotaCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CsmUsageQuotaCollection
        fullName: CsmUsageQuotaCollection
        uid: '@azure/arm-appservice.CsmUsageQuotaCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.AppServicePlansListUsagesOptionalParams'
    name: AppServicePlansListUsagesOptionalParams
    spec.typeScript:
      - name: AppServicePlansListUsagesOptionalParams
        fullName: AppServicePlansListUsagesOptionalParams
        uid: '@azure/arm-appservice.AppServicePlansListUsagesOptionalParams'
  - uid: 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
    name: 'VnetInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetInfo
        fullName: VnetInfo
        uid: '@azure/arm-appservice.VnetInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/arm-appservice.WebAppCollection>
    name: WebAppCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebAppCollection
        fullName: WebAppCollection
        uid: '@azure/arm-appservice.WebAppCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.AppServicePlansListWebAppsOptionalParams'
    name: AppServicePlansListWebAppsOptionalParams
    spec.typeScript:
      - name: AppServicePlansListWebAppsOptionalParams
        fullName: AppServicePlansListWebAppsOptionalParams
        uid: '@azure/arm-appservice.AppServicePlansListWebAppsOptionalParams'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceCollection>
    name: ResourceCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceCollection
        fullName: ResourceCollection
        uid: '@azure/arm-appservice.ResourceCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.AppServicePlansRestartWebAppsOptionalParams'
    name: AppServicePlansRestartWebAppsOptionalParams
    spec.typeScript:
      - name: AppServicePlansRestartWebAppsOptionalParams
        fullName: AppServicePlansRestartWebAppsOptionalParams
        uid: '@azure/arm-appservice.AppServicePlansRestartWebAppsOptionalParams'
  - uid: '@azure/arm-appservice.AppServicePlanPatchResource'
    name: AppServicePlanPatchResource
    spec.typeScript:
      - name: AppServicePlanPatchResource
        fullName: AppServicePlanPatchResource
        uid: '@azure/arm-appservice.AppServicePlanPatchResource'
  - uid: '@azure/arm-appservice.VnetGateway'
    name: VnetGateway
    spec.typeScript:
      - name: VnetGateway
        fullName: VnetGateway
        uid: '@azure/arm-appservice.VnetGateway'
