### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-appservice.WebSiteManagementClient'
    name: WebSiteManagementClient
    fullName: WebSiteManagementClient
    children:
      - '@azure/arm-appservice.WebSiteManagementClient.acceptLanguage'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.appServiceCertificateOrders
      - '@azure/arm-appservice.WebSiteManagementClient.appServiceEnvironments'
      - '@azure/arm-appservice.WebSiteManagementClient.appServicePlans'
      - '@azure/arm-appservice.WebSiteManagementClient.beginLongRunningRequest'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.certificateRegistrationProvider
      - '@azure/arm-appservice.WebSiteManagementClient.certificates'
      - '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability'
      - '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability_1'
      - '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability_2'
      - '@azure/arm-appservice.WebSiteManagementClient.credentials'
      - '@azure/arm-appservice.WebSiteManagementClient.deletedWebApps'
      - '@azure/arm-appservice.WebSiteManagementClient.diagnostics'
      - '@azure/arm-appservice.WebSiteManagementClient.domainRegistrationProvider'
      - '@azure/arm-appservice.WebSiteManagementClient.domains'
      - '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser'
      - '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser_2'
      - '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser_1'
      - '@azure/arm-appservice.WebSiteManagementClient.getSourceControl'
      - '@azure/arm-appservice.WebSiteManagementClient.getSourceControl_2'
      - '@azure/arm-appservice.WebSiteManagementClient.getSourceControl_1'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations
      - >-
        @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations_1
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters'
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext'
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers'
      - '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext_1
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName_1
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext_1
      - '@azure/arm-appservice.WebSiteManagementClient.listSkus'
      - '@azure/arm-appservice.WebSiteManagementClient.listSkus_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listSkus_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControls'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControls_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControls_1'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext_2'
      - '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext_1'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-appservice.WebSiteManagementClient.move'
      - '@azure/arm-appservice.WebSiteManagementClient.move_2'
      - '@azure/arm-appservice.WebSiteManagementClient.move_1'
      - '@azure/arm-appservice.WebSiteManagementClient.provider'
      - '@azure/arm-appservice.WebSiteManagementClient.recommendations'
      - '@azure/arm-appservice.WebSiteManagementClient.resourceHealthMetadata'
      - '@azure/arm-appservice.WebSiteManagementClient.restoreLROPoller'
      - '@azure/arm-appservice.WebSiteManagementClient.sendLongRunningRequest'
      - '@azure/arm-appservice.WebSiteManagementClient.sendLRORequest'
      - '@azure/arm-appservice.WebSiteManagementClient.sendOperationRequest'
      - '@azure/arm-appservice.WebSiteManagementClient.sendRequest'
      - '@azure/arm-appservice.WebSiteManagementClient.subscriptionId'
      - '@azure/arm-appservice.WebSiteManagementClient.topLevelDomains'
      - '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser'
      - '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser_2'
      - '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser_1'
      - '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl'
      - '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl_2'
      - '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl_1'
      - '@azure/arm-appservice.WebSiteManagementClient.validate'
      - '@azure/arm-appservice.WebSiteManagementClient.validate_2'
      - '@azure/arm-appservice.WebSiteManagementClient.validate_1'
      - '@azure/arm-appservice.WebSiteManagementClient.validateContainerSettings'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.validateContainerSettings_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.validateContainerSettings_1
      - '@azure/arm-appservice.WebSiteManagementClient.validateMove'
      - '@azure/arm-appservice.WebSiteManagementClient.validateMove_2'
      - '@azure/arm-appservice.WebSiteManagementClient.validateMove_1'
      - >-
        @azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet
      - >-
        @azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet_2
      - >-
        @azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet_1
      - '@azure/arm-appservice.WebSiteManagementClient.webApps'
      - '@azure/arm-appservice.WebSiteManagementClient.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-appservice.WebSiteManagementClientContext'
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.appServiceCertificateOrders'
    name: appServiceCertificateOrders
    fullName: appServiceCertificateOrders
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appServiceCertificateOrders: AppServiceCertificateOrders'
      return:
        type:
          - '@azure/arm-appservice.AppServiceCertificateOrders'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.appServiceEnvironments'
    name: appServiceEnvironments
    fullName: appServiceEnvironments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appServiceEnvironments: AppServiceEnvironments'
      return:
        type:
          - '@azure/arm-appservice.AppServiceEnvironments'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.appServicePlans'
    name: appServicePlans
    fullName: appServicePlans
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appServicePlans: AppServicePlans'
      return:
        type:
          - '@azure/arm-appservice.AppServicePlans'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.certificateRegistrationProvider
    name: certificateRegistrationProvider
    fullName: certificateRegistrationProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'certificateRegistrationProvider: CertificateRegistrationProvider'
      return:
        type:
          - '@azure/arm-appservice.CertificateRegistrationProvider'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.certificates'
    name: certificates
    fullName: certificates
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'certificates: Certificates'
      return:
        type:
          - '@azure/arm-appservice.Certificates'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability'
    name: >-
      checkNameAvailability(string, Models.CheckNameResourceTypes,
      Models.WebSiteManagementClientCheckNameAvailabilityOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check if a resource name is available.
    syntax:
      content: >-
        function checkNameAvailability(name: string, type:
        Models.CheckNameResourceTypes, options?:
        Models.WebSiteManagementClientCheckNameAvailabilityOptionalParams)
      parameters:
        - id: name
          type:
            - string
          description: Resource name to verify.
        - id: type
          type:
            - Models.CheckNameResourceTypes
          description: >-
            Resource type used for verification. Possible values include:
            'Site', 'Slot',

            'HostingEnvironment', 'PublishingUser', 'Microsoft.Web/sites',
            'Microsoft.Web/sites/slots',

            'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
        - id: options
          type:
            - Models.WebSiteManagementClientCheckNameAvailabilityOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
        description: Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string, Models.CheckNameResourceTypes,
      ServiceCallback<ResourceNameAvailability>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, type:
        Models.CheckNameResourceTypes, callback:
        ServiceCallback<ResourceNameAvailability>)
      parameters:
        - id: name
          type:
            - string
          description: Resource name to verify.
        - id: type
          type:
            - Models.CheckNameResourceTypes
          description: >-
            Resource type used for verification. Possible values include:
            'Site', 'Slot',

            'HostingEnvironment', 'PublishingUser', 'Microsoft.Web/sites',
            'Microsoft.Web/sites/slots',

            'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceNameAvailability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, Models.CheckNameResourceTypes,
      WebSiteManagementClientCheckNameAvailabilityOptionalParams,
      ServiceCallback<ResourceNameAvailability>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, type:
        Models.CheckNameResourceTypes, options:
        WebSiteManagementClientCheckNameAvailabilityOptionalParams, callback:
        ServiceCallback<ResourceNameAvailability>)
      parameters:
        - id: name
          type:
            - string
          description: Resource name to verify.
        - id: type
          type:
            - Models.CheckNameResourceTypes
          description: >-
            Resource type used for verification. Possible values include:
            'Site', 'Slot',

            'HostingEnvironment', 'PublishingUser', 'Microsoft.Web/sites',
            'Microsoft.Web/sites/slots',

            'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebSiteManagementClientCheckNameAvailabilityOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceNameAvailability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.deletedWebApps'
    name: deletedWebApps
    fullName: deletedWebApps
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'deletedWebApps: DeletedWebApps'
      return:
        type:
          - '@azure/arm-appservice.DeletedWebApps'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.diagnostics'
    name: diagnostics
    fullName: diagnostics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'diagnostics: Diagnostics'
      return:
        type:
          - '@azure/arm-appservice.Diagnostics'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.domainRegistrationProvider'
    name: domainRegistrationProvider
    fullName: domainRegistrationProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domainRegistrationProvider: DomainRegistrationProvider'
      return:
        type:
          - '@azure/arm-appservice.DomainRegistrationProvider'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.domains'
    name: domains
    fullName: domains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domains: Domains'
      return:
        type:
          - '@azure/arm-appservice.Domains'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser'
    name: getPublishingUser(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets publishing user
    syntax:
      content: 'function getPublishingUser(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPublishingUserResponse>
        description: Promise<Models.GetPublishingUserResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser_2'
    name: 'getPublishingUser(RequestOptionsBase, ServiceCallback<User>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPublishingUser(options: RequestOptionsBase, callback:
        ServiceCallback<User>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.User>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getPublishingUser_1'
    name: getPublishingUser(ServiceCallback<User>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPublishingUser(callback: ServiceCallback<User>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.User>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getSourceControl'
    name: 'getSourceControl(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets source control token
    syntax:
      content: >-
        function getSourceControl(sourceControlType: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetSourceControlResponse>
        description: Promise<Models.GetSourceControlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getSourceControl_2'
    name: >-
      getSourceControl(string, RequestOptionsBase,
      ServiceCallback<SourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControl(sourceControlType: string, options:
        RequestOptionsBase, callback: ServiceCallback<SourceControl>)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.getSourceControl_1'
    name: 'getSourceControl(string, ServiceCallback<SourceControl>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControl(sourceControlType: string, callback:
        ServiceCallback<SourceControl>)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations
    name: getSubscriptionDeploymentLocations(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of available geo regions plus ministamps
    syntax:
      content: >-
        function getSubscriptionDeploymentLocations(options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetSubscriptionDeploymentLocationsResponse>
        description: Promise<Models.GetSubscriptionDeploymentLocationsResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations_2
    name: >-
      getSubscriptionDeploymentLocations(RequestOptionsBase,
      ServiceCallback<DeploymentLocations>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSubscriptionDeploymentLocations(options: RequestOptionsBase,
        callback: ServiceCallback<DeploymentLocations>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentLocations>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.getSubscriptionDeploymentLocations_1
    name: getSubscriptionDeploymentLocations(ServiceCallback<DeploymentLocations>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSubscriptionDeploymentLocations(callback:
        ServiceCallback<DeploymentLocations>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentLocations>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters'
    name: >-
      listBillingMeters(Models.WebSiteManagementClientListBillingMetersOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of meters for a given location.
    syntax:
      content: >-
        function listBillingMeters(options?:
        Models.WebSiteManagementClientListBillingMetersOptionalParams)
      parameters:
        - id: options
          type:
            - Models.WebSiteManagementClientListBillingMetersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListBillingMetersResponse>
        description: Promise<Models.ListBillingMetersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters_1'
    name: listBillingMeters(ServiceCallback<BillingMeterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBillingMeters(callback:
        ServiceCallback<BillingMeterCollection>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BillingMeterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMeters_2'
    name: >-
      listBillingMeters(WebSiteManagementClientListBillingMetersOptionalParams,
      ServiceCallback<BillingMeterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBillingMeters(options:
        WebSiteManagementClientListBillingMetersOptionalParams, callback:
        ServiceCallback<BillingMeterCollection>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebSiteManagementClientListBillingMetersOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BillingMeterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext'
    name: 'listBillingMetersNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of meters for a given location.
    syntax:
      content: >-
        function listBillingMetersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListBillingMetersNextResponse>
        description: Promise<Models.ListBillingMetersNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext_2'
    name: >-
      listBillingMetersNext(string, RequestOptionsBase,
      ServiceCallback<BillingMeterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBillingMetersNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BillingMeterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BillingMeterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listBillingMetersNext_1'
    name: 'listBillingMetersNext(string, ServiceCallback<BillingMeterCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBillingMetersNext(nextPageLink: string, callback:
        ServiceCallback<BillingMeterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BillingMeterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions'
    name: listGeoRegions(Models.WebSiteManagementClientListGeoRegionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of available geographical regions.
    syntax:
      content: >-
        function listGeoRegions(options?:
        Models.WebSiteManagementClientListGeoRegionsOptionalParams)
      parameters:
        - id: options
          type:
            - Models.WebSiteManagementClientListGeoRegionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListGeoRegionsResponse>
        description: Promise<Models.ListGeoRegionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions_1'
    name: listGeoRegions(ServiceCallback<GeoRegionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGeoRegions(callback: ServiceCallback<GeoRegionCollection>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.GeoRegionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegions_2'
    name: >-
      listGeoRegions(WebSiteManagementClientListGeoRegionsOptionalParams,
      ServiceCallback<GeoRegionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGeoRegions(options:
        WebSiteManagementClientListGeoRegionsOptionalParams, callback:
        ServiceCallback<GeoRegionCollection>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebSiteManagementClientListGeoRegionsOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.GeoRegionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext'
    name: 'listGeoRegionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of available geographical regions.
    syntax:
      content: >-
        function listGeoRegionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListGeoRegionsNextResponse>
        description: Promise<Models.ListGeoRegionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext_2'
    name: >-
      listGeoRegionsNext(string, RequestOptionsBase,
      ServiceCallback<GeoRegionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGeoRegionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<GeoRegionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.GeoRegionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listGeoRegionsNext_1'
    name: 'listGeoRegionsNext(string, ServiceCallback<GeoRegionCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGeoRegionsNext(nextPageLink: string, callback:
        ServiceCallback<GeoRegionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.GeoRegionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers'
    name: listPremierAddOnOffers(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all premier add-on offers.
    syntax:
      content: 'function listPremierAddOnOffers(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListPremierAddOnOffersResponse>
        description: Promise<Models.ListPremierAddOnOffersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers_2'
    name: >-
      listPremierAddOnOffers(RequestOptionsBase,
      ServiceCallback<PremierAddOnOfferCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnOffers(options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOnOfferCollection>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOnOfferCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffers_1'
    name: listPremierAddOnOffers(ServiceCallback<PremierAddOnOfferCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnOffers(callback:
        ServiceCallback<PremierAddOnOfferCollection>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOnOfferCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext'
    name: 'listPremierAddOnOffersNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all premier add-on offers.
    syntax:
      content: >-
        function listPremierAddOnOffersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListPremierAddOnOffersNextResponse>
        description: Promise<Models.ListPremierAddOnOffersNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext_2'
    name: >-
      listPremierAddOnOffersNext(string, RequestOptionsBase,
      ServiceCallback<PremierAddOnOfferCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnOffersNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PremierAddOnOfferCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOnOfferCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listPremierAddOnOffersNext_1'
    name: >-
      listPremierAddOnOffersNext(string,
      ServiceCallback<PremierAddOnOfferCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnOffersNext(nextPageLink: string, callback:
        ServiceCallback<PremierAddOnOfferCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOnOfferCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName
    name: >-
      listSiteIdentifiersAssignedToHostName(Models.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all apps that are assigned to a hostname.
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostName(options?:
        Models.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams)
      parameters:
        - id: options
          type:
            - >-
              Models.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListSiteIdentifiersAssignedToHostNameResponse>
        description: Promise<Models.ListSiteIdentifiersAssignedToHostNameResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName_1
    name: >-
      listSiteIdentifiersAssignedToHostName(ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostName(callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostName_2
    name: >-
      listSiteIdentifiersAssignedToHostName(WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostName(options:
        WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext
    name: >-
      listSiteIdentifiersAssignedToHostNameNext(string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all apps that are assigned to a hostname.
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostNameNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListSiteIdentifiersAssignedToHostNameNextResponse>
        description: Promise<Models.ListSiteIdentifiersAssignedToHostNameNextResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext_2
    name: >-
      listSiteIdentifiersAssignedToHostNameNext(string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostNameNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.listSiteIdentifiersAssignedToHostNameNext_1
    name: >-
      listSiteIdentifiersAssignedToHostNameNext(string,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteIdentifiersAssignedToHostNameNext(nextPageLink: string,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSkus'
    name: listSkus(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List all SKUs.
    syntax:
      content: 'function listSkus(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListSkusResponse>
        description: Promise<Models.ListSkusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSkus_2'
    name: 'listSkus(RequestOptionsBase, ServiceCallback<SkuInfos>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSkus(options: RequestOptionsBase, callback:
        ServiceCallback<SkuInfos>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SkuInfos>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSkus_1'
    name: listSkus(ServiceCallback<SkuInfos>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSkus(callback: ServiceCallback<SkuInfos>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SkuInfos>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControls'
    name: listSourceControls(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the source controls available for Azure websites.
    syntax:
      content: 'function listSourceControls(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListSourceControlsResponse>
        description: Promise<Models.ListSourceControlsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControls_2'
    name: >-
      listSourceControls(RequestOptionsBase,
      ServiceCallback<SourceControlCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSourceControls(options: RequestOptionsBase, callback:
        ServiceCallback<SourceControlCollection>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControlCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControls_1'
    name: listSourceControls(ServiceCallback<SourceControlCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSourceControls(callback:
        ServiceCallback<SourceControlCollection>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControlCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext'
    name: 'listSourceControlsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the source controls available for Azure websites.
    syntax:
      content: >-
        function listSourceControlsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListSourceControlsNextResponse>
        description: Promise<Models.ListSourceControlsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext_2'
    name: >-
      listSourceControlsNext(string, RequestOptionsBase,
      ServiceCallback<SourceControlCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSourceControlsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SourceControlCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControlCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.listSourceControlsNext_1'
    name: 'listSourceControlsNext(string, ServiceCallback<SourceControlCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSourceControlsNext(nextPageLink: string, callback:
        ServiceCallback<SourceControlCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControlCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.move'
    name: 'move(string, CsmMoveResourceEnvelope, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Move resources between resource groups.
    syntax:
      content: >-
        function move(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.move_2'
    name: >-
      move(string, CsmMoveResourceEnvelope, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function move(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.move_1'
    name: 'move(string, CsmMoveResourceEnvelope, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function move(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.provider'
    name: provider
    fullName: provider
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'provider: Provider'
      return:
        type:
          - '@azure/arm-appservice.Provider'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.recommendations'
    name: recommendations
    fullName: recommendations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'recommendations: Recommendations'
      return:
        type:
          - '@azure/arm-appservice.Recommendations'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.resourceHealthMetadata'
    name: resourceHealthMetadata
    fullName: resourceHealthMetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceHealthMetadata: ResourceHealthMetadataOperations'
      return:
        type:
          - '@azure/arm-appservice.ResourceHealthMetadataOperations'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.topLevelDomains'
    name: topLevelDomains
    fullName: topLevelDomains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'topLevelDomains: TopLevelDomains'
      return:
        type:
          - '@azure/arm-appservice.TopLevelDomains'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser'
    name: 'updatePublishingUser(User, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates publishing user
    syntax:
      content: >-
        function updatePublishingUser(userDetails: User, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userDetails
          type:
            - '@azure/arm-appservice.User'
          description: Details of publishing user
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdatePublishingUserResponse>
        description: Promise<Models.UpdatePublishingUserResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser_2'
    name: 'updatePublishingUser(User, RequestOptionsBase, ServiceCallback<User>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePublishingUser(userDetails: User, options:
        RequestOptionsBase, callback: ServiceCallback<User>)
      parameters:
        - id: userDetails
          type:
            - '@azure/arm-appservice.User'
          description: Details of publishing user
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.User>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updatePublishingUser_1'
    name: 'updatePublishingUser(User, ServiceCallback<User>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePublishingUser(userDetails: User, callback:
        ServiceCallback<User>)
      parameters:
        - id: userDetails
          type:
            - '@azure/arm-appservice.User'
          description: Details of publishing user
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.User>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl'
    name: 'updateSourceControl(string, SourceControl, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates source control token
    syntax:
      content: >-
        function updateSourceControl(sourceControlType: string, requestMessage:
        SourceControl, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: requestMessage
          type:
            - '@azure/arm-appservice.SourceControl'
          description: Source control token information
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateSourceControlResponse>
        description: Promise<Models.UpdateSourceControlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl_2'
    name: >-
      updateSourceControl(string, SourceControl, RequestOptionsBase,
      ServiceCallback<SourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControl(sourceControlType: string, requestMessage:
        SourceControl, options: RequestOptionsBase, callback:
        ServiceCallback<SourceControl>)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: requestMessage
          type:
            - '@azure/arm-appservice.SourceControl'
          description: Source control token information
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.updateSourceControl_1'
    name: 'updateSourceControl(string, SourceControl, ServiceCallback<SourceControl>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControl(sourceControlType: string, requestMessage:
        SourceControl, callback: ServiceCallback<SourceControl>)
      parameters:
        - id: sourceControlType
          type:
            - string
          description: Type of source control
        - id: requestMessage
          type:
            - '@azure/arm-appservice.SourceControl'
          description: Source control token information
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validate'
    name: 'validate(string, ValidateRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate if a resource can be created.
    syntax:
      content: >-
        function validate(resourceGroupName: string, validateRequest:
        ValidateRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: validateRequest
          type:
            - '@azure/arm-appservice.ValidateRequest'
          description: Request with the resources to validate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ValidateResponse2>
        description: Promise<Models.ValidateResponse2>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validate_2'
    name: >-
      validate(string, ValidateRequest, RequestOptionsBase,
      ServiceCallback<ValidateResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validate(resourceGroupName: string, validateRequest:
        ValidateRequest, options: RequestOptionsBase, callback:
        ServiceCallback<ValidateResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: validateRequest
          type:
            - '@azure/arm-appservice.ValidateRequest'
          description: Request with the resources to validate.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ValidateResponse>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validate_1'
    name: 'validate(string, ValidateRequest, ServiceCallback<ValidateResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validate(resourceGroupName: string, validateRequest:
        ValidateRequest, callback: ServiceCallback<ValidateResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: validateRequest
          type:
            - '@azure/arm-appservice.ValidateRequest'
          description: Request with the resources to validate.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ValidateResponse>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateContainerSettings'
    name: >-
      validateContainerSettings(ValidateContainerSettingsRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate if the container settings are correct.
    syntax:
      content: >-
        function validateContainerSettings(validateContainerSettingsRequest:
        ValidateContainerSettingsRequest, resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: validateContainerSettingsRequest
          type:
            - '@azure/arm-appservice.ValidateContainerSettingsRequest'
          description: ''
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ValidateContainerSettingsResponse>
        description: Promise<Models.ValidateContainerSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateContainerSettings_2'
    name: >-
      validateContainerSettings(ValidateContainerSettingsRequest, string,
      RequestOptionsBase, ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateContainerSettings(validateContainerSettingsRequest:
        ValidateContainerSettingsRequest, resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<any>)
      parameters:
        - id: validateContainerSettingsRequest
          type:
            - '@azure/arm-appservice.ValidateContainerSettingsRequest'
          description: ''
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateContainerSettings_1'
    name: >-
      validateContainerSettings(ValidateContainerSettingsRequest, string,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateContainerSettings(validateContainerSettingsRequest:
        ValidateContainerSettingsRequest, resourceGroupName: string, callback:
        ServiceCallback<any>)
      parameters:
        - id: validateContainerSettingsRequest
          type:
            - '@azure/arm-appservice.ValidateContainerSettingsRequest'
          description: ''
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateMove'
    name: 'validateMove(string, CsmMoveResourceEnvelope, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate whether a resource can be moved.
    syntax:
      content: >-
        function validateMove(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateMove_2'
    name: >-
      validateMove(string, CsmMoveResourceEnvelope, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateMove(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.validateMove_1'
    name: 'validateMove(string, CsmMoveResourceEnvelope, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateMove(resourceGroupName: string, moveResourceEnvelope:
        CsmMoveResourceEnvelope, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: moveResourceEnvelope
          type:
            - '@azure/arm-appservice.CsmMoveResourceEnvelope'
          description: Object that represents the resource to move.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet'
    name: 'verifyHostingEnvironmentVnet(VnetParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Verifies if this VNET is compatible with an App Service Environment by
      analyzing the Network

      Security Group rules.
    syntax:
      content: >-
        function verifyHostingEnvironmentVnet(parameters: VnetParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-appservice.VnetParameters'
          description: VNET information
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VerifyHostingEnvironmentVnetResponse>
        description: Promise<Models.VerifyHostingEnvironmentVnetResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet_2
    name: >-
      verifyHostingEnvironmentVnet(VnetParameters, RequestOptionsBase,
      ServiceCallback<VnetValidationFailureDetails>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verifyHostingEnvironmentVnet(parameters: VnetParameters,
        options: RequestOptionsBase, callback:
        ServiceCallback<VnetValidationFailureDetails>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-appservice.VnetParameters'
          description: VNET information
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.VnetValidationFailureDetails>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClient.verifyHostingEnvironmentVnet_1
    name: >-
      verifyHostingEnvironmentVnet(VnetParameters,
      ServiceCallback<VnetValidationFailureDetails>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verifyHostingEnvironmentVnet(parameters: VnetParameters,
        callback: ServiceCallback<VnetValidationFailureDetails>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-appservice.VnetParameters'
          description: VNET information
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.VnetValidationFailureDetails>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.webApps'
    name: webApps
    fullName: webApps
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'webApps: WebApps'
      return:
        type:
          - '@azure/arm-appservice.WebApps'
        description: ''
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebSiteManagementClient.constructor'
    name: >-
      WebSiteManagementClient(ServiceClientCredentials, string,
      Models.WebSiteManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the WebSiteManagementClient class.
    syntax:
      content: >-
        new WebSiteManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?: Models.WebSiteManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: |-
            Your Azure subscription ID. This is a GUID-formatted string (e.g.
            00000000-0000-0000-0000-000000000000).
        - id: options
          type:
            - Models.WebSiteManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-appservice'
references:
  - uid: '@azure/arm-appservice.WebSiteManagementClientContext'
    name: WebSiteManagementClientContext
    spec.typeScript:
      - name: WebSiteManagementClientContext
        fullName: WebSiteManagementClientContext
        uid: '@azure/arm-appservice.WebSiteManagementClientContext'
  - uid: '@azure/arm-appservice.AppServiceCertificateOrders'
    name: AppServiceCertificateOrders
    spec.typeScript:
      - name: AppServiceCertificateOrders
        fullName: AppServiceCertificateOrders
        uid: '@azure/arm-appservice.AppServiceCertificateOrders'
  - uid: '@azure/arm-appservice.AppServiceEnvironments'
    name: AppServiceEnvironments
    spec.typeScript:
      - name: AppServiceEnvironments
        fullName: AppServiceEnvironments
        uid: '@azure/arm-appservice.AppServiceEnvironments'
  - uid: '@azure/arm-appservice.AppServicePlans'
    name: AppServicePlans
    spec.typeScript:
      - name: AppServicePlans
        fullName: AppServicePlans
        uid: '@azure/arm-appservice.AppServicePlans'
  - uid: '@azure/arm-appservice.CertificateRegistrationProvider'
    name: CertificateRegistrationProvider
    spec.typeScript:
      - name: CertificateRegistrationProvider
        fullName: CertificateRegistrationProvider
        uid: '@azure/arm-appservice.CertificateRegistrationProvider'
  - uid: '@azure/arm-appservice.Certificates'
    name: Certificates
    spec.typeScript:
      - name: Certificates
        fullName: Certificates
        uid: '@azure/arm-appservice.Certificates'
  - uid: '@azure/arm-appservice.DeletedWebApps'
    name: DeletedWebApps
    spec.typeScript:
      - name: DeletedWebApps
        fullName: DeletedWebApps
        uid: '@azure/arm-appservice.DeletedWebApps'
  - uid: '@azure/arm-appservice.Diagnostics'
    name: Diagnostics
    spec.typeScript:
      - name: Diagnostics
        fullName: Diagnostics
        uid: '@azure/arm-appservice.Diagnostics'
  - uid: '@azure/arm-appservice.DomainRegistrationProvider'
    name: DomainRegistrationProvider
    spec.typeScript:
      - name: DomainRegistrationProvider
        fullName: DomainRegistrationProvider
        uid: '@azure/arm-appservice.DomainRegistrationProvider'
  - uid: '@azure/arm-appservice.Domains'
    name: Domains
    spec.typeScript:
      - name: Domains
        fullName: Domains
        uid: '@azure/arm-appservice.Domains'
  - uid: '@azure/arm-appservice.Provider'
    name: Provider
    spec.typeScript:
      - name: Provider
        fullName: Provider
        uid: '@azure/arm-appservice.Provider'
  - uid: '@azure/arm-appservice.Recommendations'
    name: Recommendations
    spec.typeScript:
      - name: Recommendations
        fullName: Recommendations
        uid: '@azure/arm-appservice.Recommendations'
  - uid: '@azure/arm-appservice.ResourceHealthMetadataOperations'
    name: ResourceHealthMetadataOperations
    spec.typeScript:
      - name: ResourceHealthMetadataOperations
        fullName: ResourceHealthMetadataOperations
        uid: '@azure/arm-appservice.ResourceHealthMetadataOperations'
  - uid: '@azure/arm-appservice.TopLevelDomains'
    name: TopLevelDomains
    spec.typeScript:
      - name: TopLevelDomains
        fullName: TopLevelDomains
        uid: '@azure/arm-appservice.TopLevelDomains'
  - uid: '@azure/arm-appservice.WebApps'
    name: WebApps
    spec.typeScript:
      - name: WebApps
        fullName: WebApps
        uid: '@azure/arm-appservice.WebApps'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceNameAvailability>
    name: ResourceNameAvailability>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceNameAvailability
        fullName: ResourceNameAvailability
        uid: '@azure/arm-appservice.ResourceNameAvailability'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClientCheckNameAvailabilityOptionalParams
    name: WebSiteManagementClientCheckNameAvailabilityOptionalParams
    spec.typeScript:
      - name: WebSiteManagementClientCheckNameAvailabilityOptionalParams
        fullName: WebSiteManagementClientCheckNameAvailabilityOptionalParams
        uid: >-
          @azure/arm-appservice.WebSiteManagementClientCheckNameAvailabilityOptionalParams
  - uid: ServiceCallback<@azure/arm-appservice.User>
    name: User>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: User
        fullName: User
        uid: '@azure/arm-appservice.User'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SourceControl>
    name: SourceControl>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SourceControl
        fullName: SourceControl
        uid: '@azure/arm-appservice.SourceControl'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.DeploymentLocations>
    name: DeploymentLocations>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeploymentLocations
        fullName: DeploymentLocations
        uid: '@azure/arm-appservice.DeploymentLocations'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.BillingMeterCollection>
    name: BillingMeterCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BillingMeterCollection
        fullName: BillingMeterCollection
        uid: '@azure/arm-appservice.BillingMeterCollection'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClientListBillingMetersOptionalParams
    name: WebSiteManagementClientListBillingMetersOptionalParams
    spec.typeScript:
      - name: WebSiteManagementClientListBillingMetersOptionalParams
        fullName: WebSiteManagementClientListBillingMetersOptionalParams
        uid: >-
          @azure/arm-appservice.WebSiteManagementClientListBillingMetersOptionalParams
  - uid: ServiceCallback<@azure/arm-appservice.GeoRegionCollection>
    name: GeoRegionCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GeoRegionCollection
        fullName: GeoRegionCollection
        uid: '@azure/arm-appservice.GeoRegionCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebSiteManagementClientListGeoRegionsOptionalParams'
    name: WebSiteManagementClientListGeoRegionsOptionalParams
    spec.typeScript:
      - name: WebSiteManagementClientListGeoRegionsOptionalParams
        fullName: WebSiteManagementClientListGeoRegionsOptionalParams
        uid: >-
          @azure/arm-appservice.WebSiteManagementClientListGeoRegionsOptionalParams
  - uid: ServiceCallback<@azure/arm-appservice.PremierAddOnOfferCollection>
    name: PremierAddOnOfferCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PremierAddOnOfferCollection
        fullName: PremierAddOnOfferCollection
        uid: '@azure/arm-appservice.PremierAddOnOfferCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.IdentifierCollection>
    name: IdentifierCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifierCollection
        fullName: IdentifierCollection
        uid: '@azure/arm-appservice.IdentifierCollection'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-appservice.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
    name: WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
    spec.typeScript:
      - name: >-
          WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
        fullName: >-
          WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
        uid: >-
          @azure/arm-appservice.WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams
  - uid: ServiceCallback<@azure/arm-appservice.SkuInfos>
    name: SkuInfos>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SkuInfos
        fullName: SkuInfos
        uid: '@azure/arm-appservice.SkuInfos'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SourceControlCollection>
    name: SourceControlCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SourceControlCollection
        fullName: SourceControlCollection
        uid: '@azure/arm-appservice.SourceControlCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.CsmMoveResourceEnvelope'
    name: CsmMoveResourceEnvelope
    spec.typeScript:
      - name: CsmMoveResourceEnvelope
        fullName: CsmMoveResourceEnvelope
        uid: '@azure/arm-appservice.CsmMoveResourceEnvelope'
  - uid: '@azure/arm-appservice.User'
    name: User
    spec.typeScript:
      - name: User
        fullName: User
        uid: '@azure/arm-appservice.User'
  - uid: '@azure/arm-appservice.SourceControl'
    name: SourceControl
    spec.typeScript:
      - name: SourceControl
        fullName: SourceControl
        uid: '@azure/arm-appservice.SourceControl'
  - uid: '@azure/arm-appservice.ValidateRequest'
    name: ValidateRequest
    spec.typeScript:
      - name: ValidateRequest
        fullName: ValidateRequest
        uid: '@azure/arm-appservice.ValidateRequest'
  - uid: ServiceCallback<@azure/arm-appservice.ValidateResponse>
    name: ValidateResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateResponse
        fullName: ValidateResponse
        uid: '@azure/arm-appservice.ValidateResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.ValidateContainerSettingsRequest'
    name: ValidateContainerSettingsRequest
    spec.typeScript:
      - name: ValidateContainerSettingsRequest
        fullName: ValidateContainerSettingsRequest
        uid: '@azure/arm-appservice.ValidateContainerSettingsRequest'
  - uid: '@azure/arm-appservice.VnetParameters'
    name: VnetParameters
    spec.typeScript:
      - name: VnetParameters
        fullName: VnetParameters
        uid: '@azure/arm-appservice.VnetParameters'
  - uid: ServiceCallback<@azure/arm-appservice.VnetValidationFailureDetails>
    name: VnetValidationFailureDetails>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetValidationFailureDetails
        fullName: VnetValidationFailureDetails
        uid: '@azure/arm-appservice.VnetValidationFailureDetails'
      - name: '>'
        fullName: '>'
