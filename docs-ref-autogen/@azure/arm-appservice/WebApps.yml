### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-appservice.WebApps'
    name: WebApps
    fullName: WebApps
    children:
      - '@azure/arm-appservice.WebApps.addPremierAddOn'
      - '@azure/arm-appservice.WebApps.addPremierAddOn_2'
      - '@azure/arm-appservice.WebApps.addPremierAddOn_1'
      - '@azure/arm-appservice.WebApps.addPremierAddOnSlot'
      - '@azure/arm-appservice.WebApps.addPremierAddOnSlot_2'
      - '@azure/arm-appservice.WebApps.addPremierAddOnSlot_1'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostname'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostname_1'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostname_2'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_1'
      - '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_2'
      - '@azure/arm-appservice.WebApps.applySlotConfigToProduction'
      - '@azure/arm-appservice.WebApps.applySlotConfigToProduction_2'
      - '@azure/arm-appservice.WebApps.applySlotConfigToProduction_1'
      - '@azure/arm-appservice.WebApps.applySlotConfigurationSlot'
      - '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.backup'
      - '@azure/arm-appservice.WebApps.backup_2'
      - '@azure/arm-appservice.WebApps.backup_1'
      - '@azure/arm-appservice.WebApps.backupSlot'
      - '@azure/arm-appservice.WebApps.backupSlot_2'
      - '@azure/arm-appservice.WebApps.backupSlot_1'
      - '@azure/arm-appservice.WebApps.beginCreateFunction'
      - '@azure/arm-appservice.WebApps.beginCreateInstanceFunctionSlot'
      - '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperation'
      - '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperationSlot'
      - '@azure/arm-appservice.WebApps.beginCreateMSDeployOperation'
      - '@azure/arm-appservice.WebApps.beginCreateMSDeployOperationSlot'
      - '@azure/arm-appservice.WebApps.beginCreateOrUpdate'
      - '@azure/arm-appservice.WebApps.beginCreateOrUpdateSlot'
      - '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControl'
      - '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControlSlot'
      - '@azure/arm-appservice.WebApps.beginInstallSiteExtension'
      - '@azure/arm-appservice.WebApps.beginInstallSiteExtensionSlot'
      - '@azure/arm-appservice.WebApps.beginListPublishingCredentials'
      - '@azure/arm-appservice.WebApps.beginListPublishingCredentialsSlot'
      - '@azure/arm-appservice.WebApps.beginMigrateMySql'
      - '@azure/arm-appservice.WebApps.beginMigrateStorage'
      - '@azure/arm-appservice.WebApps.beginRestore'
      - '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlob'
      - '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlobSlot'
      - '@azure/arm-appservice.WebApps.beginRestoreFromDeletedApp'
      - '@azure/arm-appservice.WebApps.beginRestoreFromDeletedAppSlot'
      - '@azure/arm-appservice.WebApps.beginRestoreSlot'
      - '@azure/arm-appservice.WebApps.beginRestoreSnapshot'
      - '@azure/arm-appservice.WebApps.beginRestoreSnapshotSlot'
      - '@azure/arm-appservice.WebApps.beginStartNetworkTrace'
      - '@azure/arm-appservice.WebApps.beginStartNetworkTraceSlot'
      - '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperation'
      - '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperationSlot'
      - '@azure/arm-appservice.WebApps.beginSwapSlotSlot'
      - '@azure/arm-appservice.WebApps.beginSwapSlotWithProduction'
      - '@azure/arm-appservice.WebApps.createDeployment'
      - '@azure/arm-appservice.WebApps.createDeployment_2'
      - '@azure/arm-appservice.WebApps.createDeployment_1'
      - '@azure/arm-appservice.WebApps.createDeploymentSlot'
      - '@azure/arm-appservice.WebApps.createDeploymentSlot_2'
      - '@azure/arm-appservice.WebApps.createDeploymentSlot_1'
      - '@azure/arm-appservice.WebApps.createFunction'
      - '@azure/arm-appservice.WebApps.createInstanceFunctionSlot'
      - '@azure/arm-appservice.WebApps.createInstanceMSDeployOperation'
      - '@azure/arm-appservice.WebApps.createInstanceMSDeployOperationSlot'
      - '@azure/arm-appservice.WebApps.createMSDeployOperation'
      - '@azure/arm-appservice.WebApps.createMSDeployOperationSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdate'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfiguration'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier'
      - '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_1'
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_2
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_1
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding'
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_2'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_1'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateSourceControl'
      - '@azure/arm-appservice.WebApps.createOrUpdateSourceControlSlot'
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_2
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_1
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_2
      - >-
        @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_1
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_1'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.deleteBackup'
      - '@azure/arm-appservice.WebApps.deleteBackup_2'
      - '@azure/arm-appservice.WebApps.deleteBackup_1'
      - '@azure/arm-appservice.WebApps.deleteBackupConfiguration'
      - '@azure/arm-appservice.WebApps.deleteBackupConfiguration_2'
      - '@azure/arm-appservice.WebApps.deleteBackupConfiguration_1'
      - '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot'
      - '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.deleteBackupSlot'
      - '@azure/arm-appservice.WebApps.deleteBackupSlot_2'
      - '@azure/arm-appservice.WebApps.deleteBackupSlot_1'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJob'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJob_2'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJob_1'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.deleteDeployment'
      - '@azure/arm-appservice.WebApps.deleteDeployment_2'
      - '@azure/arm-appservice.WebApps.deleteDeployment_1'
      - '@azure/arm-appservice.WebApps.deleteDeploymentSlot'
      - '@azure/arm-appservice.WebApps.deleteDeploymentSlot_2'
      - '@azure/arm-appservice.WebApps.deleteDeploymentSlot_1'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_2'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_1'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_2'
      - '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_1'
      - '@azure/arm-appservice.WebApps.deleteFunction'
      - '@azure/arm-appservice.WebApps.deleteFunction_2'
      - '@azure/arm-appservice.WebApps.deleteFunction_1'
      - '@azure/arm-appservice.WebApps.deleteHostNameBinding'
      - '@azure/arm-appservice.WebApps.deleteHostNameBinding_2'
      - '@azure/arm-appservice.WebApps.deleteHostNameBinding_1'
      - '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot'
      - '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_2'
      - '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_1'
      - '@azure/arm-appservice.WebApps.deleteHybridConnection'
      - '@azure/arm-appservice.WebApps.deleteHybridConnection_2'
      - '@azure/arm-appservice.WebApps.deleteHybridConnection_1'
      - '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot'
      - '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot'
      - '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_2'
      - '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_1'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcess'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcess_2'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcess_1'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_2'
      - '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_1'
      - '@azure/arm-appservice.WebApps.deleteMethod'
      - '@azure/arm-appservice.WebApps.deleteMethod_1'
      - '@azure/arm-appservice.WebApps.deleteMethod_2'
      - '@azure/arm-appservice.WebApps.deletePremierAddOn'
      - '@azure/arm-appservice.WebApps.deletePremierAddOn_2'
      - '@azure/arm-appservice.WebApps.deletePremierAddOn_1'
      - '@azure/arm-appservice.WebApps.deletePremierAddOnSlot'
      - '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_2'
      - '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_1'
      - '@azure/arm-appservice.WebApps.deleteProcess'
      - '@azure/arm-appservice.WebApps.deleteProcess_2'
      - '@azure/arm-appservice.WebApps.deleteProcess_1'
      - '@azure/arm-appservice.WebApps.deleteProcessSlot'
      - '@azure/arm-appservice.WebApps.deleteProcessSlot_2'
      - '@azure/arm-appservice.WebApps.deleteProcessSlot_1'
      - '@azure/arm-appservice.WebApps.deletePublicCertificate'
      - '@azure/arm-appservice.WebApps.deletePublicCertificate_2'
      - '@azure/arm-appservice.WebApps.deletePublicCertificate_1'
      - '@azure/arm-appservice.WebApps.deletePublicCertificateSlot'
      - '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_2'
      - '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_1'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnection'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_2'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_1'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.deleteSiteExtension'
      - '@azure/arm-appservice.WebApps.deleteSiteExtension_2'
      - '@azure/arm-appservice.WebApps.deleteSiteExtension_1'
      - '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot'
      - '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_2'
      - '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_1'
      - '@azure/arm-appservice.WebApps.deleteSlot'
      - '@azure/arm-appservice.WebApps.deleteSlot_1'
      - '@azure/arm-appservice.WebApps.deleteSlot_2'
      - '@azure/arm-appservice.WebApps.deleteSourceControl'
      - '@azure/arm-appservice.WebApps.deleteSourceControl_2'
      - '@azure/arm-appservice.WebApps.deleteSourceControl_1'
      - '@azure/arm-appservice.WebApps.deleteSourceControlSlot'
      - '@azure/arm-appservice.WebApps.deleteSourceControlSlot_2'
      - '@azure/arm-appservice.WebApps.deleteSourceControlSlot_1'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_2'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_1'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_2'
      - '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_1'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJob'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_2'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_1'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.deleteVnetConnection'
      - '@azure/arm-appservice.WebApps.deleteVnetConnection_2'
      - '@azure/arm-appservice.WebApps.deleteVnetConnection_1'
      - '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot'
      - '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.discoverBackup'
      - '@azure/arm-appservice.WebApps.discoverBackup_2'
      - '@azure/arm-appservice.WebApps.discoverBackup_1'
      - '@azure/arm-appservice.WebApps.discoverBackupSlot'
      - '@azure/arm-appservice.WebApps.discoverBackupSlot_2'
      - '@azure/arm-appservice.WebApps.discoverBackupSlot_1'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_2'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_1'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_2'
      - '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_1'
      - '@azure/arm-appservice.WebApps.get'
      - '@azure/arm-appservice.WebApps.get_2'
      - '@azure/arm-appservice.WebApps.get_1'
      - '@azure/arm-appservice.WebApps.getAuthSettings'
      - '@azure/arm-appservice.WebApps.getAuthSettings_2'
      - '@azure/arm-appservice.WebApps.getAuthSettings_1'
      - '@azure/arm-appservice.WebApps.getAuthSettingsSlot'
      - '@azure/arm-appservice.WebApps.getAuthSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.getAuthSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.getBackupConfiguration'
      - '@azure/arm-appservice.WebApps.getBackupConfiguration_2'
      - '@azure/arm-appservice.WebApps.getBackupConfiguration_1'
      - '@azure/arm-appservice.WebApps.getBackupConfigurationSlot'
      - '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.getBackupStatus'
      - '@azure/arm-appservice.WebApps.getBackupStatus_2'
      - '@azure/arm-appservice.WebApps.getBackupStatus_1'
      - '@azure/arm-appservice.WebApps.getBackupStatusSlot'
      - '@azure/arm-appservice.WebApps.getBackupStatusSlot_2'
      - '@azure/arm-appservice.WebApps.getBackupStatusSlot_1'
      - '@azure/arm-appservice.WebApps.getConfiguration'
      - '@azure/arm-appservice.WebApps.getConfiguration_2'
      - '@azure/arm-appservice.WebApps.getConfiguration_1'
      - '@azure/arm-appservice.WebApps.getConfigurationSlot'
      - '@azure/arm-appservice.WebApps.getConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.getConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshot'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshot_2'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshot_1'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_2'
      - '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_1'
      - '@azure/arm-appservice.WebApps.getContainerLogsZip'
      - '@azure/arm-appservice.WebApps.getContainerLogsZip_2'
      - '@azure/arm-appservice.WebApps.getContainerLogsZip_1'
      - '@azure/arm-appservice.WebApps.getContainerLogsZipSlot'
      - '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_2'
      - '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_1'
      - '@azure/arm-appservice.WebApps.getContinuousWebJob'
      - '@azure/arm-appservice.WebApps.getContinuousWebJob_2'
      - '@azure/arm-appservice.WebApps.getContinuousWebJob_1'
      - '@azure/arm-appservice.WebApps.getContinuousWebJobSlot'
      - '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.getDeployment'
      - '@azure/arm-appservice.WebApps.getDeployment_2'
      - '@azure/arm-appservice.WebApps.getDeployment_1'
      - '@azure/arm-appservice.WebApps.getDeploymentSlot'
      - '@azure/arm-appservice.WebApps.getDeploymentSlot_2'
      - '@azure/arm-appservice.WebApps.getDeploymentSlot_1'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_2'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_1'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_2'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_1'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_2'
      - '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_1'
      - '@azure/arm-appservice.WebApps.getFunction'
      - '@azure/arm-appservice.WebApps.getFunction_2'
      - '@azure/arm-appservice.WebApps.getFunction_1'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminToken'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminToken_2'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminToken_1'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_2'
      - '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_1'
      - '@azure/arm-appservice.WebApps.getHostNameBinding'
      - '@azure/arm-appservice.WebApps.getHostNameBinding_2'
      - '@azure/arm-appservice.WebApps.getHostNameBinding_1'
      - '@azure/arm-appservice.WebApps.getHostNameBindingSlot'
      - '@azure/arm-appservice.WebApps.getHostNameBindingSlot_2'
      - '@azure/arm-appservice.WebApps.getHostNameBindingSlot_1'
      - '@azure/arm-appservice.WebApps.getHybridConnection'
      - '@azure/arm-appservice.WebApps.getHybridConnection_2'
      - '@azure/arm-appservice.WebApps.getHybridConnection_1'
      - '@azure/arm-appservice.WebApps.getHybridConnectionSlot'
      - '@azure/arm-appservice.WebApps.getHybridConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.getHybridConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceFunctionSlot'
      - '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLog'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_2'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_1'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_2'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_1'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcess'
      - '@azure/arm-appservice.WebApps.getInstanceProcess_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcess_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDump'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDump_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDump_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModule'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModule_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModule_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessSlot'
      - '@azure/arm-appservice.WebApps.getInstanceProcessSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessSlot_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThread'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThread_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThread_1'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot_2'
      - '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot_1'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatus'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_2'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_1'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_2'
      - '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_1'
      - '@azure/arm-appservice.WebApps.getMSDeployLog'
      - '@azure/arm-appservice.WebApps.getMSDeployLog_2'
      - '@azure/arm-appservice.WebApps.getMSDeployLog_1'
      - '@azure/arm-appservice.WebApps.getMSDeployLogSlot'
      - '@azure/arm-appservice.WebApps.getMSDeployLogSlot_2'
      - '@azure/arm-appservice.WebApps.getMSDeployLogSlot_1'
      - '@azure/arm-appservice.WebApps.getMSDeployStatus'
      - '@azure/arm-appservice.WebApps.getMSDeployStatus_2'
      - '@azure/arm-appservice.WebApps.getMSDeployStatus_1'
      - '@azure/arm-appservice.WebApps.getMSDeployStatusSlot'
      - '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_2'
      - '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_1'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperation'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperation_2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperation_1'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_1'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_1'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_2'
      - '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_1'
      - '@azure/arm-appservice.WebApps.getNetworkTraces'
      - '@azure/arm-appservice.WebApps.getNetworkTraces_2'
      - '@azure/arm-appservice.WebApps.getNetworkTraces_1'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlot'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlot_2'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlot_1'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_2'
      - '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_1'
      - '@azure/arm-appservice.WebApps.getNetworkTracesV2'
      - '@azure/arm-appservice.WebApps.getNetworkTracesV2_2'
      - '@azure/arm-appservice.WebApps.getNetworkTracesV2_1'
      - '@azure/arm-appservice.WebApps.getPremierAddOn'
      - '@azure/arm-appservice.WebApps.getPremierAddOn_2'
      - '@azure/arm-appservice.WebApps.getPremierAddOn_1'
      - '@azure/arm-appservice.WebApps.getPremierAddOnSlot'
      - '@azure/arm-appservice.WebApps.getPremierAddOnSlot_2'
      - '@azure/arm-appservice.WebApps.getPremierAddOnSlot_1'
      - '@azure/arm-appservice.WebApps.getPrivateAccess'
      - '@azure/arm-appservice.WebApps.getPrivateAccess_2'
      - '@azure/arm-appservice.WebApps.getPrivateAccess_1'
      - '@azure/arm-appservice.WebApps.getPrivateAccessSlot'
      - '@azure/arm-appservice.WebApps.getPrivateAccessSlot_2'
      - '@azure/arm-appservice.WebApps.getPrivateAccessSlot_1'
      - '@azure/arm-appservice.WebApps.getProcess'
      - '@azure/arm-appservice.WebApps.getProcess_2'
      - '@azure/arm-appservice.WebApps.getProcess_1'
      - '@azure/arm-appservice.WebApps.getProcessDump'
      - '@azure/arm-appservice.WebApps.getProcessDump_2'
      - '@azure/arm-appservice.WebApps.getProcessDump_1'
      - '@azure/arm-appservice.WebApps.getProcessDumpSlot'
      - '@azure/arm-appservice.WebApps.getProcessDumpSlot_2'
      - '@azure/arm-appservice.WebApps.getProcessDumpSlot_1'
      - '@azure/arm-appservice.WebApps.getProcessModule'
      - '@azure/arm-appservice.WebApps.getProcessModule_2'
      - '@azure/arm-appservice.WebApps.getProcessModule_1'
      - '@azure/arm-appservice.WebApps.getProcessModuleSlot'
      - '@azure/arm-appservice.WebApps.getProcessModuleSlot_2'
      - '@azure/arm-appservice.WebApps.getProcessModuleSlot_1'
      - '@azure/arm-appservice.WebApps.getProcessSlot'
      - '@azure/arm-appservice.WebApps.getProcessSlot_2'
      - '@azure/arm-appservice.WebApps.getProcessSlot_1'
      - '@azure/arm-appservice.WebApps.getProcessThread'
      - '@azure/arm-appservice.WebApps.getProcessThread_2'
      - '@azure/arm-appservice.WebApps.getProcessThread_1'
      - '@azure/arm-appservice.WebApps.getProcessThreadSlot'
      - '@azure/arm-appservice.WebApps.getProcessThreadSlot_2'
      - '@azure/arm-appservice.WebApps.getProcessThreadSlot_1'
      - '@azure/arm-appservice.WebApps.getPublicCertificate'
      - '@azure/arm-appservice.WebApps.getPublicCertificate_2'
      - '@azure/arm-appservice.WebApps.getPublicCertificate_1'
      - '@azure/arm-appservice.WebApps.getPublicCertificateSlot'
      - '@azure/arm-appservice.WebApps.getPublicCertificateSlot_2'
      - '@azure/arm-appservice.WebApps.getPublicCertificateSlot_1'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnection'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnection_2'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnection_1'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.getSiteExtension'
      - '@azure/arm-appservice.WebApps.getSiteExtension_2'
      - '@azure/arm-appservice.WebApps.getSiteExtension_1'
      - '@azure/arm-appservice.WebApps.getSiteExtensionSlot'
      - '@azure/arm-appservice.WebApps.getSiteExtensionSlot_2'
      - '@azure/arm-appservice.WebApps.getSiteExtensionSlot_1'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_2'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_1'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_2'
      - '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_1'
      - '@azure/arm-appservice.WebApps.getSlot'
      - '@azure/arm-appservice.WebApps.getSlot_2'
      - '@azure/arm-appservice.WebApps.getSlot_1'
      - '@azure/arm-appservice.WebApps.getSourceControl'
      - '@azure/arm-appservice.WebApps.getSourceControl_2'
      - '@azure/arm-appservice.WebApps.getSourceControl_1'
      - '@azure/arm-appservice.WebApps.getSourceControlSlot'
      - '@azure/arm-appservice.WebApps.getSourceControlSlot_2'
      - '@azure/arm-appservice.WebApps.getSourceControlSlot_1'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_2'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_1'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJob'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJob_2'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJob_1'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_2'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_1'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_2'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_1'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.getVnetConnection'
      - '@azure/arm-appservice.WebApps.getVnetConnection_2'
      - '@azure/arm-appservice.WebApps.getVnetConnection_1'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGateway'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGateway_2'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGateway_1'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_2'
      - '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_1'
      - '@azure/arm-appservice.WebApps.getVnetConnectionSlot'
      - '@azure/arm-appservice.WebApps.getVnetConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.getVnetConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.getWebJob'
      - '@azure/arm-appservice.WebApps.getWebJob_2'
      - '@azure/arm-appservice.WebApps.getWebJob_1'
      - '@azure/arm-appservice.WebApps.getWebJobSlot'
      - '@azure/arm-appservice.WebApps.getWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.getWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogs'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_2'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_1'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_2'
      - '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_1'
      - '@azure/arm-appservice.WebApps.installSiteExtension'
      - '@azure/arm-appservice.WebApps.installSiteExtensionSlot'
      - '@azure/arm-appservice.WebApps.isCloneable'
      - '@azure/arm-appservice.WebApps.isCloneable_2'
      - '@azure/arm-appservice.WebApps.isCloneable_1'
      - '@azure/arm-appservice.WebApps.isCloneableSlot'
      - '@azure/arm-appservice.WebApps.isCloneableSlot_2'
      - '@azure/arm-appservice.WebApps.isCloneableSlot_1'
      - '@azure/arm-appservice.WebApps.list'
      - '@azure/arm-appservice.WebApps.list_2'
      - '@azure/arm-appservice.WebApps.list_1'
      - '@azure/arm-appservice.WebApps.listApplicationSettings'
      - '@azure/arm-appservice.WebApps.listApplicationSettings_2'
      - '@azure/arm-appservice.WebApps.listApplicationSettings_1'
      - '@azure/arm-appservice.WebApps.listApplicationSettingsSlot'
      - '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccounts'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccounts_2'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccounts_1'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_2'
      - '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_1'
      - '@azure/arm-appservice.WebApps.listBackups'
      - '@azure/arm-appservice.WebApps.listBackups_2'
      - '@azure/arm-appservice.WebApps.listBackups_1'
      - '@azure/arm-appservice.WebApps.listBackupsNext'
      - '@azure/arm-appservice.WebApps.listBackupsNext_2'
      - '@azure/arm-appservice.WebApps.listBackupsNext_1'
      - '@azure/arm-appservice.WebApps.listBackupsSlot'
      - '@azure/arm-appservice.WebApps.listBackupsSlot_2'
      - '@azure/arm-appservice.WebApps.listBackupsSlot_1'
      - '@azure/arm-appservice.WebApps.listBackupsSlotNext'
      - '@azure/arm-appservice.WebApps.listBackupsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listBackupsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecrets'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecrets_2'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecrets_1'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_2'
      - '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_1'
      - '@azure/arm-appservice.WebApps.listByResourceGroup'
      - '@azure/arm-appservice.WebApps.listByResourceGroup_1'
      - '@azure/arm-appservice.WebApps.listByResourceGroup_2'
      - '@azure/arm-appservice.WebApps.listByResourceGroupNext'
      - '@azure/arm-appservice.WebApps.listByResourceGroupNext_2'
      - '@azure/arm-appservice.WebApps.listByResourceGroupNext_1'
      - '@azure/arm-appservice.WebApps.listConfigurations'
      - '@azure/arm-appservice.WebApps.listConfigurations_2'
      - '@azure/arm-appservice.WebApps.listConfigurations_1'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_2'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_1'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_2'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_1'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_2'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_1'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_2'
      - '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_1'
      - '@azure/arm-appservice.WebApps.listConfigurationsNext'
      - '@azure/arm-appservice.WebApps.listConfigurationsNext_2'
      - '@azure/arm-appservice.WebApps.listConfigurationsNext_1'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlot'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlot_2'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlot_1'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlotNext'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listConnectionStrings'
      - '@azure/arm-appservice.WebApps.listConnectionStrings_2'
      - '@azure/arm-appservice.WebApps.listConnectionStrings_1'
      - '@azure/arm-appservice.WebApps.listConnectionStringsSlot'
      - '@azure/arm-appservice.WebApps.listConnectionStringsSlot_2'
      - '@azure/arm-appservice.WebApps.listConnectionStringsSlot_1'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobs'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobs_2'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobs_1'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsNext'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_2'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_1'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_2'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_1'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listDeploymentLog'
      - '@azure/arm-appservice.WebApps.listDeploymentLog_2'
      - '@azure/arm-appservice.WebApps.listDeploymentLog_1'
      - '@azure/arm-appservice.WebApps.listDeploymentLogSlot'
      - '@azure/arm-appservice.WebApps.listDeploymentLogSlot_2'
      - '@azure/arm-appservice.WebApps.listDeploymentLogSlot_1'
      - '@azure/arm-appservice.WebApps.listDeployments'
      - '@azure/arm-appservice.WebApps.listDeployments_2'
      - '@azure/arm-appservice.WebApps.listDeployments_1'
      - '@azure/arm-appservice.WebApps.listDeploymentsNext'
      - '@azure/arm-appservice.WebApps.listDeploymentsNext_2'
      - '@azure/arm-appservice.WebApps.listDeploymentsNext_1'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlot'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlot_2'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlot_1'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlotNext'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_2'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_1'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_2'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_1'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_2'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_1'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_2'
      - '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_1'
      - '@azure/arm-appservice.WebApps.listFunctions'
      - '@azure/arm-appservice.WebApps.listFunctions_2'
      - '@azure/arm-appservice.WebApps.listFunctions_1'
      - '@azure/arm-appservice.WebApps.listFunctionSecrets'
      - '@azure/arm-appservice.WebApps.listFunctionSecrets_2'
      - '@azure/arm-appservice.WebApps.listFunctionSecrets_1'
      - '@azure/arm-appservice.WebApps.listFunctionSecretsSlot'
      - '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_2'
      - '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_1'
      - '@azure/arm-appservice.WebApps.listFunctionsNext'
      - '@azure/arm-appservice.WebApps.listFunctionsNext_2'
      - '@azure/arm-appservice.WebApps.listFunctionsNext_1'
      - '@azure/arm-appservice.WebApps.listHostNameBindings'
      - '@azure/arm-appservice.WebApps.listHostNameBindings_2'
      - '@azure/arm-appservice.WebApps.listHostNameBindings_1'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsNext'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsNext_2'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsNext_1'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlot'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_2'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_1'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeys'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeys_2'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeys_1'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot_2'
      - '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot_1'
      - '@azure/arm-appservice.WebApps.listHybridConnections'
      - '@azure/arm-appservice.WebApps.listHybridConnections_2'
      - '@azure/arm-appservice.WebApps.listHybridConnections_1'
      - '@azure/arm-appservice.WebApps.listHybridConnectionsSlot'
      - '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_2'
      - '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_2'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiers'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiers_2'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiers_1'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_2'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcesses'
      - '@azure/arm-appservice.WebApps.listInstanceProcesses_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcesses_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlot'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModules'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModules_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModules_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreads'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreads_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreads_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_1'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listMetadata'
      - '@azure/arm-appservice.WebApps.listMetadata_2'
      - '@azure/arm-appservice.WebApps.listMetadata_1'
      - '@azure/arm-appservice.WebApps.listMetadataSlot'
      - '@azure/arm-appservice.WebApps.listMetadataSlot_2'
      - '@azure/arm-appservice.WebApps.listMetadataSlot_1'
      - '@azure/arm-appservice.WebApps.listMetricDefinitions'
      - '@azure/arm-appservice.WebApps.listMetricDefinitions_2'
      - '@azure/arm-appservice.WebApps.listMetricDefinitions_1'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsNext'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsNext_2'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsNext_1'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot_2'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot_1'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listMetrics'
      - '@azure/arm-appservice.WebApps.listMetrics_1'
      - '@azure/arm-appservice.WebApps.listMetrics_2'
      - '@azure/arm-appservice.WebApps.listMetricsNext'
      - '@azure/arm-appservice.WebApps.listMetricsNext_2'
      - '@azure/arm-appservice.WebApps.listMetricsNext_1'
      - '@azure/arm-appservice.WebApps.listMetricsSlot'
      - '@azure/arm-appservice.WebApps.listMetricsSlot_1'
      - '@azure/arm-appservice.WebApps.listMetricsSlot_2'
      - '@azure/arm-appservice.WebApps.listMetricsSlotNext'
      - '@azure/arm-appservice.WebApps.listMetricsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listMetricsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listNetworkFeatures'
      - '@azure/arm-appservice.WebApps.listNetworkFeatures_2'
      - '@azure/arm-appservice.WebApps.listNetworkFeatures_1'
      - '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot'
      - '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_2'
      - '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_1'
      - '@azure/arm-appservice.WebApps.listNext'
      - '@azure/arm-appservice.WebApps.listNext_2'
      - '@azure/arm-appservice.WebApps.listNext_1'
      - '@azure/arm-appservice.WebApps.listPerfMonCounters'
      - '@azure/arm-appservice.WebApps.listPerfMonCounters_1'
      - '@azure/arm-appservice.WebApps.listPerfMonCounters_2'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersNext'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersNext_2'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersNext_1'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlot'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_1'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_2'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_2'
      - '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_1'
      - '@azure/arm-appservice.WebApps.listPremierAddOns'
      - '@azure/arm-appservice.WebApps.listPremierAddOns_2'
      - '@azure/arm-appservice.WebApps.listPremierAddOns_1'
      - '@azure/arm-appservice.WebApps.listPremierAddOnsSlot'
      - '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_2'
      - '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_1'
      - '@azure/arm-appservice.WebApps.listProcesses'
      - '@azure/arm-appservice.WebApps.listProcesses_2'
      - '@azure/arm-appservice.WebApps.listProcesses_1'
      - '@azure/arm-appservice.WebApps.listProcessesNext'
      - '@azure/arm-appservice.WebApps.listProcessesNext_2'
      - '@azure/arm-appservice.WebApps.listProcessesNext_1'
      - '@azure/arm-appservice.WebApps.listProcessesSlot'
      - '@azure/arm-appservice.WebApps.listProcessesSlot_2'
      - '@azure/arm-appservice.WebApps.listProcessesSlot_1'
      - '@azure/arm-appservice.WebApps.listProcessesSlotNext'
      - '@azure/arm-appservice.WebApps.listProcessesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listProcessesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listProcessModules'
      - '@azure/arm-appservice.WebApps.listProcessModules_2'
      - '@azure/arm-appservice.WebApps.listProcessModules_1'
      - '@azure/arm-appservice.WebApps.listProcessModulesNext'
      - '@azure/arm-appservice.WebApps.listProcessModulesNext_2'
      - '@azure/arm-appservice.WebApps.listProcessModulesNext_1'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlot'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlot_2'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlot_1'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlotNext'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listProcessThreads'
      - '@azure/arm-appservice.WebApps.listProcessThreads_2'
      - '@azure/arm-appservice.WebApps.listProcessThreads_1'
      - '@azure/arm-appservice.WebApps.listProcessThreadsNext'
      - '@azure/arm-appservice.WebApps.listProcessThreadsNext_2'
      - '@azure/arm-appservice.WebApps.listProcessThreadsNext_1'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlot'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlot_2'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlot_1'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listPublicCertificates'
      - '@azure/arm-appservice.WebApps.listPublicCertificates_2'
      - '@azure/arm-appservice.WebApps.listPublicCertificates_1'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesNext'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesNext_2'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesNext_1'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlot'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_2'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_1'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listPublishingCredentials'
      - '@azure/arm-appservice.WebApps.listPublishingCredentialsSlot'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_2'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_1'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_2'
      - '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_1'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnections'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnections_2'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnections_1'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_2'
      - '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_1'
      - '@azure/arm-appservice.WebApps.listSiteExtensions'
      - '@azure/arm-appservice.WebApps.listSiteExtensions_2'
      - '@azure/arm-appservice.WebApps.listSiteExtensions_1'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsNext'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsNext_2'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsNext_1'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlot'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_2'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_1'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listSitePushSettings'
      - '@azure/arm-appservice.WebApps.listSitePushSettings_2'
      - '@azure/arm-appservice.WebApps.listSitePushSettings_1'
      - '@azure/arm-appservice.WebApps.listSitePushSettingsSlot'
      - '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.listSlotConfigurationNames'
      - '@azure/arm-appservice.WebApps.listSlotConfigurationNames_2'
      - '@azure/arm-appservice.WebApps.listSlotConfigurationNames_1'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_2'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_1'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_2'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_1'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlot'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_2'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_1'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listSlots'
      - '@azure/arm-appservice.WebApps.listSlots_2'
      - '@azure/arm-appservice.WebApps.listSlots_1'
      - '@azure/arm-appservice.WebApps.listSlotsNext'
      - '@azure/arm-appservice.WebApps.listSlotsNext_2'
      - '@azure/arm-appservice.WebApps.listSlotsNext_1'
      - '@azure/arm-appservice.WebApps.listSnapshots'
      - '@azure/arm-appservice.WebApps.listSnapshots_2'
      - '@azure/arm-appservice.WebApps.listSnapshots_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsNext'
      - '@azure/arm-appservice.WebApps.listSnapshotsNext_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsNext_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlot'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlot_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlot_1'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlotNext'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggers'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_2'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_1'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_2'
      - '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobs'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobs_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobs_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_1'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_1'
      - '@azure/arm-appservice.WebApps.listUsages'
      - '@azure/arm-appservice.WebApps.listUsages_1'
      - '@azure/arm-appservice.WebApps.listUsages_2'
      - '@azure/arm-appservice.WebApps.listUsagesNext'
      - '@azure/arm-appservice.WebApps.listUsagesNext_2'
      - '@azure/arm-appservice.WebApps.listUsagesNext_1'
      - '@azure/arm-appservice.WebApps.listUsagesSlot'
      - '@azure/arm-appservice.WebApps.listUsagesSlot_1'
      - '@azure/arm-appservice.WebApps.listUsagesSlot_2'
      - '@azure/arm-appservice.WebApps.listUsagesSlotNext'
      - '@azure/arm-appservice.WebApps.listUsagesSlotNext_2'
      - '@azure/arm-appservice.WebApps.listUsagesSlotNext_1'
      - '@azure/arm-appservice.WebApps.listVnetConnections'
      - '@azure/arm-appservice.WebApps.listVnetConnections_2'
      - '@azure/arm-appservice.WebApps.listVnetConnections_1'
      - '@azure/arm-appservice.WebApps.listVnetConnectionsSlot'
      - '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_2'
      - '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_1'
      - '@azure/arm-appservice.WebApps.listWebJobs'
      - '@azure/arm-appservice.WebApps.listWebJobs_2'
      - '@azure/arm-appservice.WebApps.listWebJobs_1'
      - '@azure/arm-appservice.WebApps.listWebJobsNext'
      - '@azure/arm-appservice.WebApps.listWebJobsNext_2'
      - '@azure/arm-appservice.WebApps.listWebJobsNext_1'
      - '@azure/arm-appservice.WebApps.listWebJobsSlot'
      - '@azure/arm-appservice.WebApps.listWebJobsSlot_2'
      - '@azure/arm-appservice.WebApps.listWebJobsSlot_1'
      - '@azure/arm-appservice.WebApps.listWebJobsSlotNext'
      - '@azure/arm-appservice.WebApps.listWebJobsSlotNext_2'
      - '@azure/arm-appservice.WebApps.listWebJobsSlotNext_1'
      - '@azure/arm-appservice.WebApps.migrateMySql'
      - '@azure/arm-appservice.WebApps.migrateStorage'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnet'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnet_2'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnet_1'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_2'
      - '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_1'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_2'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_1'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_2'
      - '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_1'
      - '@azure/arm-appservice.WebApps.resetProductionSlotConfig'
      - '@azure/arm-appservice.WebApps.resetProductionSlotConfig_2'
      - '@azure/arm-appservice.WebApps.resetProductionSlotConfig_1'
      - '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot'
      - '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.restart'
      - '@azure/arm-appservice.WebApps.restart_1'
      - '@azure/arm-appservice.WebApps.restart_2'
      - '@azure/arm-appservice.WebApps.restartSlot'
      - '@azure/arm-appservice.WebApps.restartSlot_1'
      - '@azure/arm-appservice.WebApps.restartSlot_2'
      - '@azure/arm-appservice.WebApps.restore'
      - '@azure/arm-appservice.WebApps.restoreFromBackupBlob'
      - '@azure/arm-appservice.WebApps.restoreFromBackupBlobSlot'
      - '@azure/arm-appservice.WebApps.restoreFromDeletedApp'
      - '@azure/arm-appservice.WebApps.restoreFromDeletedAppSlot'
      - '@azure/arm-appservice.WebApps.restoreSlot'
      - '@azure/arm-appservice.WebApps.restoreSnapshot'
      - '@azure/arm-appservice.WebApps.restoreSnapshotSlot'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJob'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJob_2'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJob_1'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.start'
      - '@azure/arm-appservice.WebApps.start_2'
      - '@azure/arm-appservice.WebApps.start_1'
      - '@azure/arm-appservice.WebApps.startContinuousWebJob'
      - '@azure/arm-appservice.WebApps.startContinuousWebJob_2'
      - '@azure/arm-appservice.WebApps.startContinuousWebJob_1'
      - '@azure/arm-appservice.WebApps.startContinuousWebJobSlot'
      - '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.startNetworkTrace'
      - '@azure/arm-appservice.WebApps.startNetworkTraceSlot'
      - '@azure/arm-appservice.WebApps.startSlot'
      - '@azure/arm-appservice.WebApps.startSlot_2'
      - '@azure/arm-appservice.WebApps.startSlot_1'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_1'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_2'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperation'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperationSlot'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_1'
      - '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_2'
      - '@azure/arm-appservice.WebApps.stop'
      - '@azure/arm-appservice.WebApps.stop_2'
      - '@azure/arm-appservice.WebApps.stop_1'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJob'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJob_2'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJob_1'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_2'
      - '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_1'
      - '@azure/arm-appservice.WebApps.stopNetworkTrace'
      - '@azure/arm-appservice.WebApps.stopNetworkTrace_2'
      - '@azure/arm-appservice.WebApps.stopNetworkTrace_1'
      - '@azure/arm-appservice.WebApps.stopNetworkTraceSlot'
      - '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_2'
      - '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_1'
      - '@azure/arm-appservice.WebApps.stopSlot'
      - '@azure/arm-appservice.WebApps.stopSlot_2'
      - '@azure/arm-appservice.WebApps.stopSlot_1'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_2'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_1'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_2'
      - '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_1'
      - '@azure/arm-appservice.WebApps.swapSlotSlot'
      - '@azure/arm-appservice.WebApps.swapSlotWithProduction'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggers'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggers_2'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggers_1'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_2'
      - '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_1'
      - '@azure/arm-appservice.WebApps.syncRepository'
      - '@azure/arm-appservice.WebApps.syncRepository_2'
      - '@azure/arm-appservice.WebApps.syncRepository_1'
      - '@azure/arm-appservice.WebApps.syncRepositorySlot'
      - '@azure/arm-appservice.WebApps.syncRepositorySlot_2'
      - '@azure/arm-appservice.WebApps.syncRepositorySlot_1'
      - '@azure/arm-appservice.WebApps.update'
      - '@azure/arm-appservice.WebApps.update_2'
      - '@azure/arm-appservice.WebApps.update_1'
      - '@azure/arm-appservice.WebApps.updateApplicationSettings'
      - '@azure/arm-appservice.WebApps.updateApplicationSettings_2'
      - '@azure/arm-appservice.WebApps.updateApplicationSettings_1'
      - '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot'
      - '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.updateAuthSettings'
      - '@azure/arm-appservice.WebApps.updateAuthSettings_2'
      - '@azure/arm-appservice.WebApps.updateAuthSettings_1'
      - '@azure/arm-appservice.WebApps.updateAuthSettingsSlot'
      - '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccounts'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_2'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_1'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_2'
      - '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_1'
      - '@azure/arm-appservice.WebApps.updateBackupConfiguration'
      - '@azure/arm-appservice.WebApps.updateBackupConfiguration_2'
      - '@azure/arm-appservice.WebApps.updateBackupConfiguration_1'
      - '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot'
      - '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.updateConfiguration'
      - '@azure/arm-appservice.WebApps.updateConfiguration_2'
      - '@azure/arm-appservice.WebApps.updateConfiguration_1'
      - '@azure/arm-appservice.WebApps.updateConfigurationSlot'
      - '@azure/arm-appservice.WebApps.updateConfigurationSlot_2'
      - '@azure/arm-appservice.WebApps.updateConfigurationSlot_1'
      - '@azure/arm-appservice.WebApps.updateConnectionStrings'
      - '@azure/arm-appservice.WebApps.updateConnectionStrings_2'
      - '@azure/arm-appservice.WebApps.updateConnectionStrings_1'
      - '@azure/arm-appservice.WebApps.updateConnectionStringsSlot'
      - '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_2'
      - '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_1'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_2'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_1'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_2'
      - '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_1'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_2'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_1'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_2'
      - '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_1'
      - '@azure/arm-appservice.WebApps.updateHybridConnection'
      - '@azure/arm-appservice.WebApps.updateHybridConnection_2'
      - '@azure/arm-appservice.WebApps.updateHybridConnection_1'
      - '@azure/arm-appservice.WebApps.updateHybridConnectionSlot'
      - '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.updateMetadata'
      - '@azure/arm-appservice.WebApps.updateMetadata_2'
      - '@azure/arm-appservice.WebApps.updateMetadata_1'
      - '@azure/arm-appservice.WebApps.updateMetadataSlot'
      - '@azure/arm-appservice.WebApps.updateMetadataSlot_2'
      - '@azure/arm-appservice.WebApps.updateMetadataSlot_1'
      - '@azure/arm-appservice.WebApps.updatePremierAddOn'
      - '@azure/arm-appservice.WebApps.updatePremierAddOn_2'
      - '@azure/arm-appservice.WebApps.updatePremierAddOn_1'
      - '@azure/arm-appservice.WebApps.updatePremierAddOnSlot'
      - '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_2'
      - '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_1'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnection'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnection_2'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnection_1'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.updateSitePushSettings'
      - '@azure/arm-appservice.WebApps.updateSitePushSettings_2'
      - '@azure/arm-appservice.WebApps.updateSitePushSettings_1'
      - '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot'
      - '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_2'
      - '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_1'
      - '@azure/arm-appservice.WebApps.updateSlot'
      - '@azure/arm-appservice.WebApps.updateSlot_2'
      - '@azure/arm-appservice.WebApps.updateSlot_1'
      - '@azure/arm-appservice.WebApps.updateSlotConfigurationNames'
      - '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_2'
      - '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_1'
      - '@azure/arm-appservice.WebApps.updateSourceControl'
      - '@azure/arm-appservice.WebApps.updateSourceControl_2'
      - '@azure/arm-appservice.WebApps.updateSourceControl_1'
      - '@azure/arm-appservice.WebApps.updateSourceControlSlot'
      - '@azure/arm-appservice.WebApps.updateSourceControlSlot_2'
      - '@azure/arm-appservice.WebApps.updateSourceControlSlot_1'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_2'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_1'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.updateVnetConnection'
      - '@azure/arm-appservice.WebApps.updateVnetConnection_2'
      - '@azure/arm-appservice.WebApps.updateVnetConnection_1'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGateway'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_2'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_1'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_2'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_1'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionSlot'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_2'
      - '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_1'
      - '@azure/arm-appservice.WebApps.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a WebApps.
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOn'
    name: >-
      addPremierAddOn(string, string, string, PremierAddOn,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a named add-on of an app.
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsAddPremierAddOnResponse>
        description: Promise<Models.WebAppsAddPremierAddOnResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOn_2'
    name: >-
      addPremierAddOn(string, string, string, PremierAddOn, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, options:
        RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOn_1'
    name: >-
      addPremierAddOn(string, string, string, PremierAddOn,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot'
    name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a named add-on of an app.
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsAddPremierAddOnSlotResponse>
        description: Promise<Models.WebAppsAddPremierAddOnSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot_2'
    name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      RequestOptionsBase, ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot_1'
    name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOn'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname'
    name: >-
      analyzeCustomHostname(string, string,
      Models.WebAppsAnalyzeCustomHostnameOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Analyze a custom hostname.
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        options?: Models.WebAppsAnalyzeCustomHostnameOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - Models.WebAppsAnalyzeCustomHostnameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsAnalyzeCustomHostnameResponse>
        description: Promise<Models.WebAppsAnalyzeCustomHostnameResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname_1'
    name: >-
      analyzeCustomHostname(string, string,
      ServiceCallback<CustomHostnameAnalysisResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        callback: ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.CustomHostnameAnalysisResult>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname_2'
    name: >-
      analyzeCustomHostname(string, string,
      WebAppsAnalyzeCustomHostnameOptionalParams,
      ServiceCallback<CustomHostnameAnalysisResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        options: WebAppsAnalyzeCustomHostnameOptionalParams, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsAnalyzeCustomHostnameOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.CustomHostnameAnalysisResult>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot'
    name: >-
      analyzeCustomHostnameSlot(string, string, string,
      Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Analyze a custom hostname.
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsAnalyzeCustomHostnameSlotResponse>
        description: Promise<Models.WebAppsAnalyzeCustomHostnameSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_1'
    name: >-
      analyzeCustomHostnameSlot(string, string, string,
      ServiceCallback<CustomHostnameAnalysisResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.CustomHostnameAnalysisResult>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_2'
    name: >-
      analyzeCustomHostnameSlot(string, string, string,
      WebAppsAnalyzeCustomHostnameSlotOptionalParams,
      ServiceCallback<CustomHostnameAnalysisResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsAnalyzeCustomHostnameSlotOptionalParams, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebAppsAnalyzeCustomHostnameSlotOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.CustomHostnameAnalysisResult>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction'
    name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Applies the configuration settings from the target slot onto the current
      slot.
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction_2'
    name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction_1'
    name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot'
    name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Applies the configuration settings from the target slot onto the current
      slot.
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_2'
    name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_1'
    name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backup'
    name: 'backup(string, string, BackupRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a backup of an app.
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsBackupResponse>
        description: Promise<Models.WebAppsBackupResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backup_2'
    name: >-
      backup(string, string, BackupRequest, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backup_1'
    name: 'backup(string, string, BackupRequest, ServiceCallback<BackupItem>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backupSlot'
    name: >-
      backupSlot(string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a backup of an app.
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsBackupSlotResponse>
        description: Promise<Models.WebAppsBackupSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backupSlot_2'
    name: >-
      backupSlot(string, string, BackupRequest, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.backupSlot_1'
    name: >-
      backupSlot(string, string, BackupRequest, string,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateFunction'
    name: >-
      beginCreateFunction(string, string, string, FunctionEnvelope,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create function for web site, or a deployment slot.'
    syntax:
      content: >-
        function beginCreateFunction(resourceGroupName: string, name: string,
        functionName: string, functionEnvelope: FunctionEnvelope, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: functionEnvelope
          type:
            - '@azure/arm-appservice.FunctionEnvelope'
          description: Function details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateInstanceFunctionSlot'
    name: >-
      beginCreateInstanceFunctionSlot(string, string, string, string,
      FunctionEnvelope, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create function for web site, or a deployment slot.'
    syntax:
      content: >-
        function beginCreateInstanceFunctionSlot(resourceGroupName: string,
        name: string, functionName: string, slot: string, functionEnvelope:
        FunctionEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: functionEnvelope
          type:
            - '@azure/arm-appservice.FunctionEnvelope'
          description: Function details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperation'
    name: >-
      beginCreateInstanceMSDeployOperation(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function beginCreateInstanceMSDeployOperation(resourceGroupName: string,
        name: string, instanceId: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperationSlot'
    name: >-
      beginCreateInstanceMSDeployOperationSlot(string, string, string, string,
      MSDeploy, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function beginCreateInstanceMSDeployOperationSlot(resourceGroupName:
        string, name: string, slot: string, instanceId: string, mSDeploy:
        MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateMSDeployOperation'
    name: >-
      beginCreateMSDeployOperation(string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function beginCreateMSDeployOperation(resourceGroupName: string, name:
        string, mSDeploy: MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateMSDeployOperationSlot'
    name: >-
      beginCreateMSDeployOperationSlot(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function beginCreateMSDeployOperationSlot(resourceGroupName: string,
        name: string, slot: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Site, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, name: string,
        siteEnvelope: Site, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.Site'
          description: A JSON representation of the app properties. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSlot'
    name: >-
      beginCreateOrUpdateSlot(string, string, Site, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function beginCreateOrUpdateSlot(resourceGroupName: string, name:
        string, siteEnvelope: Site, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.Site'
          description: A JSON representation of the app properties. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControl'
    name: >-
      beginCreateOrUpdateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function beginCreateOrUpdateSourceControl(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControlSlot'
    name: >-
      beginCreateOrUpdateSourceControlSlot(string, string, SiteSourceControl,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function beginCreateOrUpdateSourceControlSlot(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginInstallSiteExtension'
    name: >-
      beginInstallSiteExtension(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Install site extension on a web site, or a deployment slot.'
    syntax:
      content: >-
        function beginInstallSiteExtension(resourceGroupName: string, name:
        string, siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginInstallSiteExtensionSlot'
    name: >-
      beginInstallSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Install site extension on a web site, or a deployment slot.'
    syntax:
      content: >-
        function beginInstallSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginListPublishingCredentials'
    name: 'beginListPublishingCredentials(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Git/FTP publishing credentials of an app.
    syntax:
      content: >-
        function beginListPublishingCredentials(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginListPublishingCredentialsSlot'
    name: >-
      beginListPublishingCredentialsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Git/FTP publishing credentials of an app.
    syntax:
      content: >-
        function beginListPublishingCredentialsSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing credentials for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginMigrateMySql'
    name: >-
      beginMigrateMySql(string, string, MigrateMySqlRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrates a local (in-app) MySql database to a remote MySql database.
    syntax:
      content: >-
        function beginMigrateMySql(resourceGroupName: string, name: string,
        migrationRequestEnvelope: MigrateMySqlRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: migrationRequestEnvelope
          type:
            - '@azure/arm-appservice.MigrateMySqlRequest'
          description: MySql migration options.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginMigrateStorage'
    name: >-
      beginMigrateStorage(string, string, string, StorageMigrationOptions,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app.
    syntax:
      content: >-
        function beginMigrateStorage(subscriptionName: string,
        resourceGroupName: string, name: string, migrationOptions:
        StorageMigrationOptions, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription.
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: migrationOptions
          type:
            - '@azure/arm-appservice.StorageMigrationOptions'
          description: Migration migrationOptions.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestore'
    name: >-
      beginRestore(string, string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restores a specific backup to another app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function beginRestore(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlob'
    name: >-
      beginRestoreFromBackupBlob(string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores an app from a backup blob in Azure Storage.
    syntax:
      content: >-
        function beginRestoreFromBackupBlob(resourceGroupName: string, name:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlobSlot'
    name: >-
      beginRestoreFromBackupBlobSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores an app from a backup blob in Azure Storage.
    syntax:
      content: >-
        function beginRestoreFromBackupBlobSlot(resourceGroupName: string, name:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreFromDeletedApp'
    name: >-
      beginRestoreFromDeletedApp(string, string, DeletedAppRestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a deleted web app to this web app.
    syntax:
      content: >-
        function beginRestoreFromDeletedApp(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.DeletedAppRestoreRequest'
          description: Deleted web app restore information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreFromDeletedAppSlot'
    name: >-
      beginRestoreFromDeletedAppSlot(string, string, DeletedAppRestoreRequest,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a deleted web app to this web app.
    syntax:
      content: >-
        function beginRestoreFromDeletedAppSlot(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.DeletedAppRestoreRequest'
          description: Deleted web app restore information.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreSlot'
    name: >-
      beginRestoreSlot(string, string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restores a specific backup to another app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function beginRestoreSlot(resourceGroupName: string, name: string,
        backupId: string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreSnapshot'
    name: >-
      beginRestoreSnapshot(string, string, SnapshotRestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app from a snapshot.
    syntax:
      content: >-
        function beginRestoreSnapshot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.SnapshotRestoreRequest'
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginRestoreSnapshotSlot'
    name: >-
      beginRestoreSnapshotSlot(string, string, SnapshotRestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app from a snapshot.
    syntax:
      content: >-
        function beginRestoreSnapshotSlot(resourceGroupName: string, name:
        string, restoreRequest: SnapshotRestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.SnapshotRestoreRequest'
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginStartNetworkTrace'
    name: >-
      beginStartNetworkTrace(string, string,
      Models.WebAppsBeginStartNetworkTraceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function beginStartNetworkTrace(resourceGroupName: string, name: string,
        options?: Models.WebAppsBeginStartNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - Models.WebAppsBeginStartNetworkTraceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginStartNetworkTraceSlot'
    name: >-
      beginStartNetworkTraceSlot(string, string, string,
      Models.WebAppsBeginStartNetworkTraceSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function beginStartNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsBeginStartNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - Models.WebAppsBeginStartNetworkTraceSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperation'
    name: >-
      beginStartWebSiteNetworkTraceOperation(string, string,
      Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function beginStartWebSiteNetworkTraceOperation(resourceGroupName:
        string, name: string, options?:
        Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperationSlot'
    name: >-
      beginStartWebSiteNetworkTraceOperationSlot(string, string, string,
      Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function beginStartWebSiteNetworkTraceOperationSlot(resourceGroupName:
        string, name: string, slot: string, options?:
        Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - >-
              Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginSwapSlotSlot'
    name: >-
      beginSwapSlotSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Swaps two deployment slots of an app.
    syntax:
      content: >-
        function beginSwapSlotSlot(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.beginSwapSlotWithProduction'
    name: >-
      beginSwapSlotWithProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Swaps two deployment slots of an app.
    syntax:
      content: >-
        function beginSwapSlotWithProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeployment'
    name: >-
      createDeployment(string, string, string, Deployment,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create a deployment for an app, or a deployment slot.'
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateDeploymentResponse>
        description: Promise<Models.WebAppsCreateDeploymentResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeployment_2'
    name: >-
      createDeployment(string, string, string, Deployment, RequestOptionsBase,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeployment_1'
    name: >-
      createDeployment(string, string, string, Deployment,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeploymentSlot'
    name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create a deployment for an app, or a deployment slot.'
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateDeploymentSlotResponse>
        description: Promise<Models.WebAppsCreateDeploymentSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeploymentSlot_2'
    name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      RequestOptionsBase, ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, options:
        RequestOptionsBase, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createDeploymentSlot_1'
    name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type:
            - '@azure/arm-appservice.Deployment'
          description: Deployment details.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createFunction'
    name: >-
      createFunction(string, string, string, FunctionEnvelope,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create function for web site, or a deployment slot.'
    syntax:
      content: >-
        function createFunction(resourceGroupName: string, name: string,
        functionName: string, functionEnvelope: FunctionEnvelope, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: functionEnvelope
          type:
            - '@azure/arm-appservice.FunctionEnvelope'
          description: Function details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateFunctionResponse>
        description: Promise<Models.WebAppsCreateFunctionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createInstanceFunctionSlot'
    name: >-
      createInstanceFunctionSlot(string, string, string, string,
      FunctionEnvelope, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create function for web site, or a deployment slot.'
    syntax:
      content: >-
        function createInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, functionEnvelope:
        FunctionEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: functionEnvelope
          type:
            - '@azure/arm-appservice.FunctionEnvelope'
          description: Function details.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateInstanceFunctionSlotResponse>
        description: Promise<Models.WebAppsCreateInstanceFunctionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createInstanceMSDeployOperation'
    name: >-
      createInstanceMSDeployOperation(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function createInstanceMSDeployOperation(resourceGroupName: string,
        name: string, instanceId: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateInstanceMSDeployOperationResponse>
        description: Promise<Models.WebAppsCreateInstanceMSDeployOperationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createInstanceMSDeployOperationSlot'
    name: >-
      createInstanceMSDeployOperationSlot(string, string, string, string,
      MSDeploy, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function createInstanceMSDeployOperationSlot(resourceGroupName: string,
        name: string, slot: string, instanceId: string, mSDeploy: MSDeploy,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateInstanceMSDeployOperationSlotResponse>
        description: Promise<Models.WebAppsCreateInstanceMSDeployOperationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createMSDeployOperation'
    name: >-
      createMSDeployOperation(string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function createMSDeployOperation(resourceGroupName: string, name:
        string, mSDeploy: MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateMSDeployOperationResponse>
        description: Promise<Models.WebAppsCreateMSDeployOperationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createMSDeployOperationSlot'
    name: >-
      createMSDeployOperationSlot(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invoke the MSDeploy web app extension.
    syntax:
      content: >-
        function createMSDeployOperationSlot(resourceGroupName: string, name:
        string, slot: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: mSDeploy
          type:
            - '@azure/arm-appservice.MSDeploy'
          description: Details of MSDeploy operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateMSDeployOperationSlotResponse>
        description: Promise<Models.WebAppsCreateMSDeployOperationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdate'
    name: 'createOrUpdate(string, string, Site, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, name: string,
        siteEnvelope: Site, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.Site'
          description: A JSON representation of the app properties. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateResponse>
        description: Promise<Models.WebAppsCreateOrUpdateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration'
    name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the configuration of an app.
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateConfigurationResponse>
        description: Promise<Models.WebAppsCreateOrUpdateConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_2'
    name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, options: RequestOptionsBase,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_1'
    name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot'
    name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the configuration of an app.
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateConfigurationSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_2'
    name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_1'
    name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier'
    name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse>
        description: Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_2'
    name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, RequestOptionsBase, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options: RequestOptionsBase,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_1'
    name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot'
    name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse>
        description: >-
          Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_2
    name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, RequestOptionsBase, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_1
    name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding'
    name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a hostname binding for an app.
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateHostNameBindingResponse>
        description: Promise<Models.WebAppsCreateOrUpdateHostNameBindingResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_2'
    name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      RequestOptionsBase, ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, options:
        RequestOptionsBase, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_1'
    name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot'
    name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a hostname binding for an app.
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateHostNameBindingSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateHostNameBindingSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_2'
    name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, RequestOptionsBase, ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_1'
    name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - '@azure/arm-appservice.HostNameBinding'
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection'
    name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Hybrid Connection using a Service Bus relay.
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateHybridConnectionResponse>
        description: Promise<Models.WebAppsCreateOrUpdateHybridConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_2'
    name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, RequestOptionsBase, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_1'
    name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot'
    name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Hybrid Connection using a Service Bus relay.
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateHybridConnectionSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateHybridConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_2'
    name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_1'
    name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate'
    name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a hostname binding for an app.
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdatePublicCertificateResponse>
        description: Promise<Models.WebAppsCreateOrUpdatePublicCertificateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_2'
    name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      RequestOptionsBase, ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_1'
    name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, callback: ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot'
    name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a hostname binding for an app.
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdatePublicCertificateSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdatePublicCertificateSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_2'
    name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, RequestOptionsBase,
      ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_1'
    name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: publicCertificate
          type:
            - '@azure/arm-appservice.PublicCertificate'
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection'
    name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an
      existing one (PATCH).
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionResponse>
        description: Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_2'
    name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_1'
    name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot'
    name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an
      existing one (PATCH).
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse>
        description: >-
          Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_2'
    name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_1'
    name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateSlot'
    name: >-
      createOrUpdateSlot(string, string, Site, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function createOrUpdateSlot(resourceGroupName: string, name: string,
        siteEnvelope: Site, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.Site'
          description: A JSON representation of the app properties. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateSourceControl'
    name: >-
      createOrUpdateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function createOrUpdateSourceControl(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateSourceControlResponse>
        description: Promise<Models.WebAppsCreateOrUpdateSourceControlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateSourceControlSlot'
    name: >-
      createOrUpdateSourceControlSlot(string, string, SiteSourceControl, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function createOrUpdateSourceControlSlot(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateSourceControlSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateSourceControlSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection'
    name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Integrates this Web App with a Virtual Network. This requires that 1)
      "swiftSupported" is true

      when doing a GET against this resource, and 2) that the target Subnet has
      already been

      delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse>
        description: >-
          Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_2
    name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, options:
        RequestOptionsBase, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_1
    name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot
    name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Integrates this Web App with a Virtual Network. This requires that 1)
      "swiftSupported" is true

      when doing a GET against this resource, and 2) that the target Subnet has
      already been

      delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse>
        description: >-
          Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_2
    name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_1
    name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection'
    name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties

      (PATCH).
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateVnetConnectionResponse>
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_2'
    name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, options:
        RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_1'
    name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway'
    name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewayResponse>
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewayResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_2'
    name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_1'
    name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot'
    name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_2'
    name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_1'
    name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot'
    name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties

      (PATCH).
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsCreateOrUpdateVnetConnectionSlotResponse>
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_2'
    name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_1'
    name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackup'
    name: 'deleteBackup(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a backup of an app by its ID.
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackup_2'
    name: >-
      deleteBackup(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackup_1'
    name: 'deleteBackup(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration'
    name: 'deleteBackupConfiguration(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the backup configuration of an app.
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration_2'
    name: >-
      deleteBackupConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration_1'
    name: 'deleteBackupConfiguration(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot'
    name: >-
      deleteBackupConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the backup configuration of an app.
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_2'
    name: >-
      deleteBackupConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_1'
    name: >-
      deleteBackupConfigurationSlot(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupSlot'
    name: >-
      deleteBackupSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a backup of an app by its ID.
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupSlot_2'
    name: >-
      deleteBackupSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteBackupSlot_1'
    name: 'deleteBackupSlot(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob'
    name: 'deleteContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a continuous web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob_2'
    name: >-
      deleteContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob_1'
    name: 'deleteContinuousWebJob(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot'
    name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a continuous web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_2'
    name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_1'
    name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeployment'
    name: 'deleteDeployment(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a deployment by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeployment_2'
    name: >-
      deleteDeployment(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeployment_1'
    name: 'deleteDeployment(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot'
    name: >-
      deleteDeploymentSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a deployment by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot_2'
    name: >-
      deleteDeploymentSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot_1'
    name: >-
      deleteDeploymentSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier'
    name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a domain ownership identifier for a web app.
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_2'
    name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_1'
    name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot'
    name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a domain ownership identifier for a web app.
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_2'
    name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_1'
    name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteFunction'
    name: 'deleteFunction(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a function for web site, or a deployment slot.'
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteFunction_2'
    name: >-
      deleteFunction(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteFunction_1'
    name: 'deleteFunction(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding'
    name: 'deleteHostNameBinding(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a hostname binding for an app.
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding_2'
    name: >-
      deleteHostNameBinding(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding_1'
    name: 'deleteHostNameBinding(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot'
    name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a hostname binding for an app.
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_2'
    name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_1'
    name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnection'
    name: >-
      deleteHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a Hybrid Connection from this site.
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnection_2'
    name: >-
      deleteHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnection_1'
    name: >-
      deleteHybridConnection(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot'
    name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a Hybrid Connection from this site.
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_2'
    name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_1'
    name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot'
    name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a function for web site, or a deployment slot.'
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_2'
    name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_1'
    name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess'
    name: >-
      deleteInstanceProcess(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Terminate a process by its ID for a web site, or a deployment slot, or
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess_2'
    name: >-
      deleteInstanceProcess(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess_1'
    name: >-
      deleteInstanceProcess(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot'
    name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Terminate a process by its ID for a web site, or a deployment slot, or
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_2'
    name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_1'
    name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteMethod'
    name: 'deleteMethod(string, string, Models.WebAppsDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Deletes a web, mobile, or API app, or one of the deployment slots.'
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options?:
        Models.WebAppsDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: options
          type:
            - Models.WebAppsDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteMethod_2'
    name: >-
      deleteMethod(string, string, WebAppsDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options:
        WebAppsDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOn'
    name: 'deletePremierAddOn(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a premier add-on from an app.
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOn_2'
    name: >-
      deletePremierAddOn(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOn_1'
    name: 'deletePremierAddOn(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot'
    name: >-
      deletePremierAddOnSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a premier add-on from an app.
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_2'
    name: >-
      deletePremierAddOnSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_1'
    name: >-
      deletePremierAddOnSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcess'
    name: 'deleteProcess(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Terminate a process by its ID for a web site, or a deployment slot, or
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcess_2'
    name: >-
      deleteProcess(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcess_1'
    name: 'deleteProcess(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcessSlot'
    name: >-
      deleteProcessSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Terminate a process by its ID for a web site, or a deployment slot, or
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcessSlot_2'
    name: >-
      deleteProcessSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteProcessSlot_1'
    name: 'deleteProcessSlot(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificate'
    name: 'deletePublicCertificate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a hostname binding for an app.
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificate_2'
    name: >-
      deletePublicCertificate(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificate_1'
    name: 'deletePublicCertificate(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot'
    name: >-
      deletePublicCertificateSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a hostname binding for an app.
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_2'
    name: >-
      deletePublicCertificateSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_1'
    name: >-
      deletePublicCertificateSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection'
    name: >-
      deleteRelayServiceConnection(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a relay service connection by its name.
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_2'
    name: >-
      deleteRelayServiceConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_1'
    name: >-
      deleteRelayServiceConnection(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot'
    name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a relay service connection by its name.
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_2'
    name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_1'
    name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtension'
    name: 'deleteSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Remove a site extension from a web site, or a deployment slot.'
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtension_2'
    name: >-
      deleteSiteExtension(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtension_1'
    name: 'deleteSiteExtension(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot'
    name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Remove a site extension from a web site, or a deployment slot.'
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_2'
    name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_1'
    name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSlot'
    name: 'deleteSlot(string, string, string, Models.WebAppsDeleteSlotOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Deletes a web, mobile, or API app, or one of the deployment slots.'
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsDeleteSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: options
          type:
            - Models.WebAppsDeleteSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSlot_1'
    name: 'deleteSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSlot_2'
    name: >-
      deleteSlot(string, string, string, WebAppsDeleteSlotOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsDeleteSlotOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsDeleteSlotOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControl'
    name: 'deleteSourceControl(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the source control configuration of an app.
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControl_2'
    name: >-
      deleteSourceControl(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControl_1'
    name: 'deleteSourceControl(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot'
    name: 'deleteSourceControlSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the source control configuration of an app.
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot_2'
    name: >-
      deleteSourceControlSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot_1'
    name: 'deleteSourceControlSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork'
    name: 'deleteSwiftVirtualNetwork(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a Swift Virtual Network connection from an app (or deployment
      slot).
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_2'
    name: >-
      deleteSwiftVirtualNetwork(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_1'
    name: 'deleteSwiftVirtualNetwork(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot'
    name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a Swift Virtual Network connection from an app (or deployment
      slot).
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_2'
    name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_1'
    name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob'
    name: 'deleteTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a triggered web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_2'
    name: >-
      deleteTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_1'
    name: 'deleteTriggeredWebJob(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot'
    name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete a triggered web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_2'
    name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_1'
    name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnection'
    name: 'deleteVnetConnection(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnection_2'
    name: >-
      deleteVnetConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnection_1'
    name: 'deleteVnetConnection(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot'
    name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_2'
    name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_1'
    name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackup'
    name: 'discoverBackup(string, string, RestoreRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Discovers an existing app backup that can be restored from a blob in Azure
      storage. Use this to

      get information about the databases stored in a backup.
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsDiscoverBackupResponse>
        description: Promise<Models.WebAppsDiscoverBackupResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackup_2'
    name: >-
      discoverBackup(string, string, RestoreRequest, RequestOptionsBase,
      ServiceCallback<RestoreRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, options: RequestOptionsBase, callback:
        ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.RestoreRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackup_1'
    name: >-
      discoverBackup(string, string, RestoreRequest,
      ServiceCallback<RestoreRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, callback: ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.RestoreRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackupSlot'
    name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Discovers an existing app backup that can be restored from a blob in Azure
      storage. Use this to

      get information about the databases stored in a backup.
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsDiscoverBackupSlotResponse>
        description: Promise<Models.WebAppsDiscoverBackupSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackupSlot_2'
    name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      RequestOptionsBase, ServiceCallback<RestoreRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.RestoreRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.discoverBackupSlot_1'
    name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      ServiceCallback<RestoreRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, callback:
        ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.RestoreRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword'
    name: >-
      generateNewSitePublishingPassword(string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Generates a new publishing password for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_2'
    name: >-
      generateNewSitePublishingPassword(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_1'
    name: 'generateNewSitePublishingPassword(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot'
    name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Generates a new publishing password for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_2'
    name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_1'
    name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the details of a web, mobile, or API app.'
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetResponse>
        description: Promise<Models.WebAppsGetResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Site>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.get_1'
    name: 'get(string, string, ServiceCallback<Site>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettings'
    name: 'getAuthSettings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Authentication/Authorization settings of an app.
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetAuthSettingsResponse>
        description: Promise<Models.WebAppsGetAuthSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettings_2'
    name: >-
      getAuthSettings(string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettings_1'
    name: 'getAuthSettings(string, string, ServiceCallback<SiteAuthSettings>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot'
    name: 'getAuthSettingsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Authentication/Authorization settings of an app.
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetAuthSettingsSlotResponse>
        description: Promise<Models.WebAppsGetAuthSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot_2'
    name: >-
      getAuthSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot_1'
    name: >-
      getAuthSettingsSlot(string, string, string,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfiguration'
    name: 'getBackupConfiguration(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the backup configuration of an app.
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetBackupConfigurationResponse>
        description: Promise<Models.WebAppsGetBackupConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfiguration_2'
    name: >-
      getBackupConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfiguration_1'
    name: 'getBackupConfiguration(string, string, ServiceCallback<BackupRequest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot'
    name: >-
      getBackupConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the backup configuration of an app.
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetBackupConfigurationSlotResponse>
        description: Promise<Models.WebAppsGetBackupConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_2'
    name: >-
      getBackupConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_1'
    name: >-
      getBackupConfigurationSlot(string, string, string,
      ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatus'
    name: 'getBackupStatus(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a backup of an app by its ID.
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetBackupStatusResponse>
        description: Promise<Models.WebAppsGetBackupStatusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatus_2'
    name: >-
      getBackupStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatus_1'
    name: 'getBackupStatus(string, string, string, ServiceCallback<BackupItem>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot'
    name: >-
      getBackupStatusSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a backup of an app by its ID.
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetBackupStatusSlotResponse>
        description: Promise<Models.WebAppsGetBackupStatusSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot_2'
    name: >-
      getBackupStatusSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot_1'
    name: >-
      getBackupStatusSlot(string, string, string, string,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfiguration'
    name: 'getConfiguration(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configuration of an app, such as platform version and bitness,
      default documents,

      virtual applications, Always On, etc.
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetConfigurationResponse>
        description: Promise<Models.WebAppsGetConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfiguration_2'
    name: >-
      getConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfiguration_1'
    name: 'getConfiguration(string, string, ServiceCallback<SiteConfigResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSlot'
    name: 'getConfigurationSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configuration of an app, such as platform version and bitness,
      default documents,

      virtual applications, Always On, etc.
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetConfigurationSlotResponse>
        description: Promise<Models.WebAppsGetConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSlot_2'
    name: >-
      getConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSlot_1'
    name: >-
      getConfigurationSlot(string, string, string,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot'
    name: >-
      getConfigurationSnapshot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point in
      time.
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetConfigurationSnapshotResponse>
        description: Promise<Models.WebAppsGetConfigurationSnapshotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot_2'
    name: >-
      getConfigurationSnapshot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot_1'
    name: >-
      getConfigurationSnapshot(string, string, string,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot'
    name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point in
      time.
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetConfigurationSnapshotSlotResponse>
        description: Promise<Models.WebAppsGetConfigurationSnapshotSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_2'
    name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_1'
    name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZip'
    name: 'getContainerLogsZip(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the ZIP archived docker log files for the given site
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetContainerLogsZipResponse>
        description: Promise<Models.WebAppsGetContainerLogsZipResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZip_2'
    name: >-
      getContainerLogsZip(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZip_1'
    name: 'getContainerLogsZip(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot'
    name: 'getContainerLogsZipSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the ZIP archived docker log files for the given site
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetContainerLogsZipSlotResponse>
        description: Promise<Models.WebAppsGetContainerLogsZipSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_2'
    name: >-
      getContainerLogsZipSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_1'
    name: 'getContainerLogsZipSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJob'
    name: 'getContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets a continuous web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetContinuousWebJobResponse>
        description: Promise<Models.WebAppsGetContinuousWebJobResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJob_2'
    name: >-
      getContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJob_1'
    name: >-
      getContinuousWebJob(string, string, string,
      ServiceCallback<ContinuousWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot'
    name: >-
      getContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets a continuous web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetContinuousWebJobSlotResponse>
        description: Promise<Models.WebAppsGetContinuousWebJobSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_2'
    name: >-
      getContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ContinuousWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_1'
    name: >-
      getContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<ContinuousWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeployment'
    name: 'getDeployment(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get a deployment by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDeploymentResponse>
        description: Promise<Models.WebAppsGetDeploymentResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeployment_2'
    name: >-
      getDeployment(string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeployment_1'
    name: 'getDeployment(string, string, string, ServiceCallback<Deployment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeploymentSlot'
    name: >-
      getDeploymentSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get a deployment by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDeploymentSlotResponse>
        description: Promise<Models.WebAppsGetDeploymentSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeploymentSlot_2'
    name: >-
      getDeploymentSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDeploymentSlot_1'
    name: >-
      getDeploymentSlot(string, string, string, string,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration'
    name: 'getDiagnosticLogsConfiguration(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the logging configuration of an app.
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDiagnosticLogsConfigurationResponse>
        description: Promise<Models.WebAppsGetDiagnosticLogsConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_2'
    name: >-
      getDiagnosticLogsConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_1'
    name: >-
      getDiagnosticLogsConfiguration(string, string,
      ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot'
    name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the logging configuration of an app.
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDiagnosticLogsConfigurationSlotResponse>
        description: Promise<Models.WebAppsGetDiagnosticLogsConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_2'
    name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_1'
    name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier'
    name: >-
      getDomainOwnershipIdentifier(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get domain ownership identifier for web app.
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDomainOwnershipIdentifierResponse>
        description: Promise<Models.WebAppsGetDomainOwnershipIdentifierResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_2'
    name: >-
      getDomainOwnershipIdentifier(string, string, string, RequestOptionsBase,
      ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_1'
    name: >-
      getDomainOwnershipIdentifier(string, string, string,
      ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot'
    name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get domain ownership identifier for web app.
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetDomainOwnershipIdentifierSlotResponse>
        description: Promise<Models.WebAppsGetDomainOwnershipIdentifierSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_2'
    name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_1'
    name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunction'
    name: 'getFunction(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get function information by its ID for web site, or a deployment slot.'
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetFunctionResponse>
        description: Promise<Models.WebAppsGetFunctionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunction_2'
    name: >-
      getFunction(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelope>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelope>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunction_1'
    name: 'getFunction(string, string, string, ServiceCallback<FunctionEnvelope>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelope>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken'
    name: 'getFunctionsAdminToken(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetch a short lived token that can be exchanged for a master key.
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetFunctionsAdminTokenResponse>
        description: Promise<Models.WebAppsGetFunctionsAdminTokenResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken_2'
    name: >-
      getFunctionsAdminToken(string, string, RequestOptionsBase,
      ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken_1'
    name: 'getFunctionsAdminToken(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot'
    name: >-
      getFunctionsAdminTokenSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetch a short lived token that can be exchanged for a master key.
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetFunctionsAdminTokenSlotResponse>
        description: Promise<Models.WebAppsGetFunctionsAdminTokenSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_2'
    name: >-
      getFunctionsAdminTokenSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_1'
    name: >-
      getFunctionsAdminTokenSlot(string, string, string,
      ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBinding'
    name: 'getHostNameBinding(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the named hostname binding for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetHostNameBindingResponse>
        description: Promise<Models.WebAppsGetHostNameBindingResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBinding_2'
    name: >-
      getHostNameBinding(string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBinding_1'
    name: >-
      getHostNameBinding(string, string, string,
      ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot'
    name: >-
      getHostNameBindingSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the named hostname binding for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetHostNameBindingSlotResponse>
        description: Promise<Models.WebAppsGetHostNameBindingSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot_2'
    name: >-
      getHostNameBindingSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot_1'
    name: >-
      getHostNameBindingSlot(string, string, string, string,
      ServiceCallback<HostNameBinding>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBinding>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnection'
    name: >-
      getHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetHybridConnectionResponse>
        description: Promise<Models.WebAppsGetHybridConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnection_2'
    name: >-
      getHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnection_1'
    name: >-
      getHybridConnection(string, string, string, string,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot'
    name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetHybridConnectionSlotResponse>
        description: Promise<Models.WebAppsGetHybridConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot_2'
    name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot_1'
    name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot'
    name: >-
      getInstanceFunctionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get function information by its ID for web site, or a deployment slot.'
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceFunctionSlotResponse>
        description: Promise<Models.WebAppsGetInstanceFunctionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_2'
    name: >-
      getInstanceFunctionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<FunctionEnvelope>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelope>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_1'
    name: >-
      getInstanceFunctionSlot(string, string, string, string,
      ServiceCallback<FunctionEnvelope>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelope>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog'
    name: 'getInstanceMSDeployLog(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the MSDeploy Log for the last MSDeploy operation.
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceMSDeployLogResponse>
        description: Promise<Models.WebAppsGetInstanceMSDeployLogResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_2'
    name: >-
      getInstanceMSDeployLog(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_1'
    name: >-
      getInstanceMSDeployLog(string, string, string,
      ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot'
    name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the MSDeploy Log for the last MSDeploy operation.
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceMSDeployLogSlotResponse>
        description: Promise<Models.WebAppsGetInstanceMSDeployLogSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_2'
    name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_1'
    name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus'
    name: >-
      getInstanceMsDeployStatus(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of the last MSDeploy operation.
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceMsDeployStatusResponse>
        description: Promise<Models.WebAppsGetInstanceMsDeployStatusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_2'
    name: >-
      getInstanceMsDeployStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_1'
    name: >-
      getInstanceMsDeployStatus(string, string, string,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot'
    name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of the last MSDeploy operation.
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceMsDeployStatusSlotResponse>
        description: Promise<Models.WebAppsGetInstanceMsDeployStatusSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_2'
    name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_1'
    name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type:
            - string
          description: ID of web app instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcess'
    name: >-
      getInstanceProcess(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessResponse>
        description: Promise<Models.WebAppsGetInstanceProcessResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcess_2'
    name: >-
      getInstanceProcess(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcess_1'
    name: >-
      getInstanceProcess(string, string, string, string,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump'
    name: >-
      getInstanceProcessDump(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a memory dump of a process by its ID for a specific scaled-out
      instance in a web site.
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessDumpResponse>
        description: Promise<Models.WebAppsGetInstanceProcessDumpResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump_2'
    name: >-
      getInstanceProcessDump(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump_1'
    name: >-
      getInstanceProcessDump(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot'
    name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a memory dump of a process by its ID for a specific scaled-out
      instance in a web site.
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessDumpSlotResponse>
        description: Promise<Models.WebAppsGetInstanceProcessDumpSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_2'
    name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_1'
    name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule'
    name: >-
      getInstanceProcessModule(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessModuleResponse>
        description: Promise<Models.WebAppsGetInstanceProcessModuleResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule_2'
    name: >-
      getInstanceProcessModule(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule_1'
    name: >-
      getInstanceProcessModule(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot'
    name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessModuleSlotResponse>
        description: Promise<Models.WebAppsGetInstanceProcessModuleSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_2'
    name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_1'
    name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot'
    name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessSlotResponse>
        description: Promise<Models.WebAppsGetInstanceProcessSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot_2'
    name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot_1'
    name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThread'
    name: >-
      getInstanceProcessThread(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get thread information by Thread ID for a specific process, in a specific
      scaled-out instance in

      a web site.
    syntax:
      content: >-
        function getInstanceProcessThread(resourceGroupName: string, name:
        string, processId: string, threadId: string, instanceId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessThreadResponse>
        description: Promise<Models.WebAppsGetInstanceProcessThreadResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThread_2'
    name: >-
      getInstanceProcessThread(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessThread(resourceGroupName: string, name:
        string, processId: string, threadId: string, instanceId: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThread_1'
    name: >-
      getInstanceProcessThread(string, string, string, string, string,
      ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessThread(resourceGroupName: string, name:
        string, processId: string, threadId: string, instanceId: string,
        callback: ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot'
    name: >-
      getInstanceProcessThreadSlot(string, string, string, string, string,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get thread information by Thread ID for a specific process, in a specific
      scaled-out instance in

      a web site.
    syntax:
      content: >-
        function getInstanceProcessThreadSlot(resourceGroupName: string, name:
        string, processId: string, threadId: string, slot: string, instanceId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetInstanceProcessThreadSlotResponse>
        description: Promise<Models.WebAppsGetInstanceProcessThreadSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot_2'
    name: >-
      getInstanceProcessThreadSlot(string, string, string, string, string,
      string, RequestOptionsBase, ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessThreadSlot(resourceGroupName: string, name:
        string, processId: string, threadId: string, slot: string, instanceId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getInstanceProcessThreadSlot_1'
    name: >-
      getInstanceProcessThreadSlot(string, string, string, string, string,
      string, ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceProcessThreadSlot(resourceGroupName: string, name:
        string, processId: string, threadId: string, slot: string, instanceId:
        string, callback: ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus'
    name: 'getMigrateMySqlStatus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the status of MySql in app migration, if one is active, and
      whether or not MySql in app

      is enabled
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMigrateMySqlStatusResponse>
        description: Promise<Models.WebAppsGetMigrateMySqlStatusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_2'
    name: >-
      getMigrateMySqlStatus(string, string, RequestOptionsBase,
      ServiceCallback<MigrateMySqlStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MigrateMySqlStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_1'
    name: 'getMigrateMySqlStatus(string, string, ServiceCallback<MigrateMySqlStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        callback: ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MigrateMySqlStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot'
    name: >-
      getMigrateMySqlStatusSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the status of MySql in app migration, if one is active, and
      whether or not MySql in app

      is enabled
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: Name of the deployment slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMigrateMySqlStatusSlotResponse>
        description: Promise<Models.WebAppsGetMigrateMySqlStatusSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_2'
    name: >-
      getMigrateMySqlStatusSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MigrateMySqlStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: Name of the deployment slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MigrateMySqlStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_1'
    name: >-
      getMigrateMySqlStatusSlot(string, string, string,
      ServiceCallback<MigrateMySqlStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: Name of the deployment slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MigrateMySqlStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLog'
    name: 'getMSDeployLog(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the MSDeploy Log for the last MSDeploy operation.
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMSDeployLogResponse>
        description: Promise<Models.WebAppsGetMSDeployLogResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLog_2'
    name: >-
      getMSDeployLog(string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLog_1'
    name: 'getMSDeployLog(string, string, ServiceCallback<MSDeployLog>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot'
    name: 'getMSDeployLogSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the MSDeploy Log for the last MSDeploy operation.
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMSDeployLogSlotResponse>
        description: Promise<Models.WebAppsGetMSDeployLogSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot_2'
    name: >-
      getMSDeployLogSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot_1'
    name: 'getMSDeployLogSlot(string, string, string, ServiceCallback<MSDeployLog>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployLog>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatus'
    name: 'getMSDeployStatus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of the last MSDeploy operation.
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMSDeployStatusResponse>
        description: Promise<Models.WebAppsGetMSDeployStatusResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatus_2'
    name: >-
      getMSDeployStatus(string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatus_1'
    name: 'getMSDeployStatus(string, string, ServiceCallback<MSDeployStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot'
    name: 'getMSDeployStatusSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of the last MSDeploy operation.
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetMSDeployStatusSlotResponse>
        description: Promise<Models.WebAppsGetMSDeployStatusSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_2'
    name: >-
      getMSDeployStatusSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_1'
    name: >-
      getMSDeployStatusSlot(string, string, string,
      ServiceCallback<MSDeployStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.MSDeployStatus>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation'
    name: >-
      getNetworkTraceOperation(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTraceOperationResponse>
        description: Promise<Models.WebAppsGetNetworkTraceOperationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation_2'
    name: >-
      getNetworkTraceOperation(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation_1'
    name: >-
      getNetworkTraceOperation(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot'
    name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTraceOperationSlotResponse>
        description: Promise<Models.WebAppsGetNetworkTraceOperationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_2'
    name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_1'
    name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2'
    name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTraceOperationSlotV2Response>
        description: Promise<Models.WebAppsGetNetworkTraceOperationSlotV2Response>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_2'
    name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_1'
    name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2'
    name: >-
      getNetworkTraceOperationV2(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTraceOperationV2Response>
        description: Promise<Models.WebAppsGetNetworkTraceOperationV2Response>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_2'
    name: >-
      getNetworkTraceOperationV2(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_1'
    name: >-
      getNetworkTraceOperationV2(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraces'
    name: 'getNetworkTraces(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTracesResponse>
        description: Promise<Models.WebAppsGetNetworkTracesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraces_2'
    name: >-
      getNetworkTraces(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTraces_1'
    name: 'getNetworkTraces(string, string, string, ServiceCallback<NetworkTrace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot'
    name: >-
      getNetworkTracesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTracesSlotResponse>
        description: Promise<Models.WebAppsGetNetworkTracesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot_2'
    name: >-
      getNetworkTracesSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot_1'
    name: >-
      getNetworkTracesSlot(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2'
    name: >-
      getNetworkTracesSlotV2(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTracesSlotV2Response>
        description: Promise<Models.WebAppsGetNetworkTracesSlotV2Response>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_2'
    name: >-
      getNetworkTracesSlotV2(string, string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_1'
    name: >-
      getNetworkTracesSlotV2(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2'
    name: 'getNetworkTracesV2(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a named operation for a network trace capturing (or deployment slot,
      if specified).
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetNetworkTracesV2Response>
        description: Promise<Models.WebAppsGetNetworkTracesV2Response>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2_2'
    name: >-
      getNetworkTracesV2(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2_1'
    name: >-
      getNetworkTracesV2(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: operationId
          type:
            - string
          description: GUID of the operation.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOn'
    name: 'getPremierAddOn(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a named add-on of an app.
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPremierAddOnResponse>
        description: Promise<Models.WebAppsGetPremierAddOnResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOn_2'
    name: >-
      getPremierAddOn(string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOn_1'
    name: 'getPremierAddOn(string, string, string, ServiceCallback<PremierAddOn>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot'
    name: >-
      getPremierAddOnSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a named add-on of an app.
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPremierAddOnSlotResponse>
        description: Promise<Models.WebAppsGetPremierAddOnSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot_2'
    name: >-
      getPremierAddOnSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot_1'
    name: >-
      getPremierAddOnSlot(string, string, string, string,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccess'
    name: 'getPrivateAccess(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets data around private site access enablement and authorized Virtual
      Networks that can access

      the site.
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPrivateAccessResponse>
        description: Promise<Models.WebAppsGetPrivateAccessResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccess_2'
    name: >-
      getPrivateAccess(string, string, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccess_1'
    name: 'getPrivateAccess(string, string, ServiceCallback<PrivateAccess>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot'
    name: 'getPrivateAccessSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets data around private site access enablement and authorized Virtual
      Networks that can access

      the site.
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPrivateAccessSlotResponse>
        description: Promise<Models.WebAppsGetPrivateAccessSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot_2'
    name: >-
      getPrivateAccessSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot_1'
    name: >-
      getPrivateAccessSlot(string, string, string,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcess'
    name: 'getProcess(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessResponse>
        description: Promise<Models.WebAppsGetProcessResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcess_2'
    name: >-
      getProcess(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcess_1'
    name: 'getProcess(string, string, string, ServiceCallback<ProcessInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDump'
    name: 'getProcessDump(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a memory dump of a process by its ID for a specific scaled-out
      instance in a web site.
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessDumpResponse>
        description: Promise<Models.WebAppsGetProcessDumpResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDump_2'
    name: >-
      getProcessDump(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDump_1'
    name: 'getProcessDump(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot'
    name: >-
      getProcessDumpSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a memory dump of a process by its ID for a specific scaled-out
      instance in a web site.
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessDumpSlotResponse>
        description: Promise<Models.WebAppsGetProcessDumpSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot_2'
    name: >-
      getProcessDumpSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot_1'
    name: 'getProcessDumpSlot(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModule'
    name: >-
      getProcessModule(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessModuleResponse>
        description: Promise<Models.WebAppsGetProcessModuleResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModule_2'
    name: >-
      getProcessModule(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModule_1'
    name: >-
      getProcessModule(string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot'
    name: >-
      getProcessModuleSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessModuleSlotResponse>
        description: Promise<Models.WebAppsGetProcessModuleSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot_2'
    name: >-
      getProcessModuleSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot_1'
    name: >-
      getProcessModuleSlot(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: baseAddress
          type:
            - string
          description: Module base address.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessSlot'
    name: 'getProcessSlot(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get process information by its ID for a specific scaled-out instance in a
      web site.
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessSlotResponse>
        description: Promise<Models.WebAppsGetProcessSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessSlot_2'
    name: >-
      getProcessSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessSlot_1'
    name: >-
      getProcessSlot(string, string, string, string,
      ServiceCallback<ProcessInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThread'
    name: >-
      getProcessThread(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get thread information by Thread ID for a specific process, in a specific
      scaled-out instance in

      a web site.
    syntax:
      content: >-
        function getProcessThread(resourceGroupName: string, name: string,
        processId: string, threadId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessThreadResponse>
        description: Promise<Models.WebAppsGetProcessThreadResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThread_2'
    name: >-
      getProcessThread(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessThread(resourceGroupName: string, name: string,
        processId: string, threadId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThread_1'
    name: >-
      getProcessThread(string, string, string, string,
      ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessThread(resourceGroupName: string, name: string,
        processId: string, threadId: string, callback:
        ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThreadSlot'
    name: >-
      getProcessThreadSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get thread information by Thread ID for a specific process, in a specific
      scaled-out instance in

      a web site.
    syntax:
      content: >-
        function getProcessThreadSlot(resourceGroupName: string, name: string,
        processId: string, threadId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetProcessThreadSlotResponse>
        description: Promise<Models.WebAppsGetProcessThreadSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThreadSlot_2'
    name: >-
      getProcessThreadSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessThreadSlot(resourceGroupName: string, name: string,
        processId: string, threadId: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getProcessThreadSlot_1'
    name: >-
      getProcessThreadSlot(string, string, string, string, string,
      ServiceCallback<ProcessThreadInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProcessThreadSlot(resourceGroupName: string, name: string,
        processId: string, threadId: string, slot: string, callback:
        ServiceCallback<ProcessThreadInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: threadId
          type:
            - string
          description: TID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificate'
    name: 'getPublicCertificate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the named public certificate for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPublicCertificateResponse>
        description: Promise<Models.WebAppsGetPublicCertificateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificate_2'
    name: >-
      getPublicCertificate(string, string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificate_1'
    name: >-
      getPublicCertificate(string, string, string,
      ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot'
    name: >-
      getPublicCertificateSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the named public certificate for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetPublicCertificateSlotResponse>
        description: Promise<Models.WebAppsGetPublicCertificateSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot_2'
    name: >-
      getPublicCertificateSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options:
        RequestOptionsBase, callback: ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot_1'
    name: >-
      getPublicCertificateSlot(string, string, string, string,
      ServiceCallback<PublicCertificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type:
            - string
          description: Public certificate name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificate>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection'
    name: >-
      getRelayServiceConnection(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a hybrid connection configuration by its name.
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetRelayServiceConnectionResponse>
        description: Promise<Models.WebAppsGetRelayServiceConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection_2'
    name: >-
      getRelayServiceConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection_1'
    name: >-
      getRelayServiceConnection(string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot'
    name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a hybrid connection configuration by its name.
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetRelayServiceConnectionSlotResponse>
        description: Promise<Models.WebAppsGetRelayServiceConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_2'
    name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_1'
    name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtension'
    name: 'getSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get site extension information by its ID for a web site, or a deployment
      slot.
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSiteExtensionResponse>
        description: Promise<Models.WebAppsGetSiteExtensionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtension_2'
    name: >-
      getSiteExtension(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtension_1'
    name: >-
      getSiteExtension(string, string, string,
      ServiceCallback<SiteExtensionInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, callback: ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot'
    name: >-
      getSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get site extension information by its ID for a web site, or a deployment
      slot.
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSiteExtensionSlotResponse>
        description: Promise<Models.WebAppsGetSiteExtensionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot_2'
    name: >-
      getSiteExtensionSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot_1'
    name: >-
      getSiteExtensionSlot(string, string, string, string,
      ServiceCallback<SiteExtensionInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, callback:
        ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag'
    name: 'getSitePhpErrorLogFlag(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets web app's event logs.
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSitePhpErrorLogFlagResponse>
        description: Promise<Models.WebAppsGetSitePhpErrorLogFlagResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_2'
    name: >-
      getSitePhpErrorLogFlag(string, string, RequestOptionsBase,
      ServiceCallback<SitePhpErrorLogFlag>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SitePhpErrorLogFlag>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_1'
    name: >-
      getSitePhpErrorLogFlag(string, string,
      ServiceCallback<SitePhpErrorLogFlag>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        callback: ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SitePhpErrorLogFlag>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot'
    name: >-
      getSitePhpErrorLogFlagSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets web app's event logs.
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSitePhpErrorLogFlagSlotResponse>
        description: Promise<Models.WebAppsGetSitePhpErrorLogFlagSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_2'
    name: >-
      getSitePhpErrorLogFlagSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SitePhpErrorLogFlag>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SitePhpErrorLogFlag>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_1'
    name: >-
      getSitePhpErrorLogFlagSlot(string, string, string,
      ServiceCallback<SitePhpErrorLogFlag>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SitePhpErrorLogFlag>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSlot'
    name: 'getSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the details of a web, mobile, or API app.'
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSlotResponse>
        description: Promise<Models.WebAppsGetSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSlot_2'
    name: 'getSlot(string, string, string, RequestOptionsBase, ServiceCallback<Site>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSlot_1'
    name: 'getSlot(string, string, string, ServiceCallback<Site>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControl'
    name: 'getSourceControl(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the source control configuration of an app.
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSourceControlResponse>
        description: Promise<Models.WebAppsGetSourceControlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControl_2'
    name: >-
      getSourceControl(string, string, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControl_1'
    name: 'getSourceControl(string, string, ServiceCallback<SiteSourceControl>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControlSlot'
    name: 'getSourceControlSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the source control configuration of an app.
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSourceControlSlotResponse>
        description: Promise<Models.WebAppsGetSourceControlSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControlSlot_2'
    name: >-
      getSourceControlSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSourceControlSlot_1'
    name: >-
      getSourceControlSlot(string, string, string,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection'
    name: >-
      getSwiftVirtualNetworkConnection(string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a Swift Virtual Network connection.
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionResponse>
        description: Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_2'
    name: >-
      getSwiftVirtualNetworkConnection(string, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_1'
    name: >-
      getSwiftVirtualNetworkConnection(string, string,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot'
    name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a Swift Virtual Network connection.
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionSlotResponse>
        description: Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_2'
    name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_1'
    name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob'
    name: 'getTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets a triggered web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetTriggeredWebJobResponse>
        description: Promise<Models.WebAppsGetTriggeredWebJobResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob_2'
    name: >-
      getTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob_1'
    name: >-
      getTriggeredWebJob(string, string, string,
      ServiceCallback<TriggeredWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory'
    name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a triggered web job's history by its ID for an app, , or a deployment
      slot.
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetTriggeredWebJobHistoryResponse>
        description: Promise<Models.WebAppsGetTriggeredWebJobHistoryResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_2'
    name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, options: RequestOptionsBase,
        callback: ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredJobHistory>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_1'
    name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      ServiceCallback<TriggeredJobHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, callback:
        ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredJobHistory>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot'
    name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a triggered web job's history by its ID for an app, , or a deployment
      slot.
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetTriggeredWebJobHistorySlotResponse>
        description: Promise<Models.WebAppsGetTriggeredWebJobHistorySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_2'
    name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredJobHistory>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_1'
    name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      ServiceCallback<TriggeredJobHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, callback:
        ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: id
          type:
            - string
          description: History ID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredJobHistory>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot'
    name: >-
      getTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets a triggered web job by its ID for an app, or a deployment slot.'
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetTriggeredWebJobSlotResponse>
        description: Promise<Models.WebAppsGetTriggeredWebJobSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_2'
    name: >-
      getTriggeredWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_1'
    name: >-
      getTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<TriggeredWebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnection'
    name: 'getVnetConnection(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetVnetConnectionResponse>
        description: Promise<Models.WebAppsGetVnetConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnection_2'
    name: >-
      getVnetConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnection_1'
    name: 'getVnetConnection(string, string, string, ServiceCallback<VnetInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway'
    name: >-
      getVnetConnectionGateway(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an app's Virtual Network gateway.
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetVnetConnectionGatewayResponse>
        description: Promise<Models.WebAppsGetVnetConnectionGatewayResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway_2'
    name: >-
      getVnetConnectionGateway(string, string, string, string,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway_1'
    name: >-
      getVnetConnectionGateway(string, string, string, string,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot'
    name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an app's Virtual Network gateway.
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetVnetConnectionGatewaySlotResponse>
        description: Promise<Models.WebAppsGetVnetConnectionGatewaySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_2'
    name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_1'
    name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot'
    name: >-
      getVnetConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetVnetConnectionSlotResponse>
        description: Promise<Models.WebAppsGetVnetConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot_2'
    name: >-
      getVnetConnectionSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot_1'
    name: >-
      getVnetConnectionSlot(string, string, string, string,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJob'
    name: 'getWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get webjob information for an app, or a deployment slot.'
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetWebJobResponse>
        description: Promise<Models.WebAppsGetWebJobResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJob_2'
    name: >-
      getWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<WebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, options: RequestOptionsBase, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJob_1'
    name: 'getWebJob(string, string, string, ServiceCallback<WebJob>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJobSlot'
    name: 'getWebJobSlot(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get webjob information for an app, or a deployment slot.'
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetWebJobSlotResponse>
        description: Promise<Models.WebAppsGetWebJobSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJobSlot_2'
    name: >-
      getWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<WebJob>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebJobSlot_1'
    name: 'getWebJobSlot(string, string, string, string, ServiceCallback<WebJob>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of the web job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJob>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs'
    name: 'getWebSiteContainerLogs(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the last lines of docker logs for the given site
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetWebSiteContainerLogsResponse>
        description: Promise<Models.WebAppsGetWebSiteContainerLogsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_2'
    name: >-
      getWebSiteContainerLogs(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_1'
    name: 'getWebSiteContainerLogs(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot'
    name: >-
      getWebSiteContainerLogsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the last lines of docker logs for the given site
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsGetWebSiteContainerLogsSlotResponse>
        description: Promise<Models.WebAppsGetWebSiteContainerLogsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_2'
    name: >-
      getWebSiteContainerLogsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_1'
    name: 'getWebSiteContainerLogsSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.installSiteExtension'
    name: 'installSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Install site extension on a web site, or a deployment slot.'
    syntax:
      content: >-
        function installSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsInstallSiteExtensionResponse>
        description: Promise<Models.WebAppsInstallSiteExtensionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.installSiteExtensionSlot'
    name: >-
      installSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Install site extension on a web site, or a deployment slot.'
    syntax:
      content: >-
        function installSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: siteExtensionId
          type:
            - string
          description: Site extension name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsInstallSiteExtensionSlotResponse>
        description: Promise<Models.WebAppsInstallSiteExtensionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneable'
    name: 'isCloneable(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shows whether an app can be cloned to another resource group or
      subscription.
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsIsCloneableResponse>
        description: Promise<Models.WebAppsIsCloneableResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneable_2'
    name: >-
      isCloneable(string, string, RequestOptionsBase,
      ServiceCallback<SiteCloneability>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteCloneability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneable_1'
    name: 'isCloneable(string, string, ServiceCallback<SiteCloneability>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, callback:
        ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteCloneability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneableSlot'
    name: 'isCloneableSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shows whether an app can be cloned to another resource group or
      subscription.
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsIsCloneableSlotResponse>
        description: Promise<Models.WebAppsIsCloneableSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneableSlot_2'
    name: >-
      isCloneableSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteCloneability>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteCloneability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.isCloneableSlot_1'
    name: 'isCloneableSlot(string, string, string, ServiceCallback<SiteCloneability>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteCloneability>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps for a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListResponse>
        description: Promise<Models.WebAppsListResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.list_1'
    name: list(ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<WebAppCollection>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettings'
    name: 'listApplicationSettings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the application settings of an app.
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListApplicationSettingsResponse>
        description: Promise<Models.WebAppsListApplicationSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettings_2'
    name: >-
      listApplicationSettings(string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettings_1'
    name: 'listApplicationSettings(string, string, ServiceCallback<StringDictionary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot'
    name: >-
      listApplicationSettingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the application settings of an app.
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListApplicationSettingsSlotResponse>
        description: Promise<Models.WebAppsListApplicationSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_2'
    name: >-
      listApplicationSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_1'
    name: >-
      listApplicationSettingsSlot(string, string, string,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts'
    name: 'listAzureStorageAccounts(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Azure storage account configurations of an app.
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListAzureStorageAccountsResponse>
        description: Promise<Models.WebAppsListAzureStorageAccountsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts_2'
    name: >-
      listAzureStorageAccounts(string, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts_1'
    name: >-
      listAzureStorageAccounts(string, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot'
    name: >-
      listAzureStorageAccountsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Azure storage account configurations of an app.
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListAzureStorageAccountsSlotResponse>
        description: Promise<Models.WebAppsListAzureStorageAccountsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_2'
    name: >-
      listAzureStorageAccountsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_1'
    name: >-
      listAzureStorageAccountsSlot(string, string, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackups'
    name: 'listBackups(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets existing backups of an app.
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupsResponse>
        description: Promise<Models.WebAppsListBackupsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackups_2'
    name: >-
      listBackups(string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackups_1'
    name: 'listBackups(string, string, ServiceCallback<BackupItemCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsNext'
    name: 'listBackupsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets existing backups of an app.
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupsNextResponse>
        description: Promise<Models.WebAppsListBackupsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsNext_2'
    name: >-
      listBackupsNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsNext_1'
    name: 'listBackupsNext(string, ServiceCallback<BackupItemCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlot'
    name: 'listBackupsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets existing backups of an app.
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupsSlotResponse>
        description: Promise<Models.WebAppsListBackupsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlot_2'
    name: >-
      listBackupsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlot_1'
    name: >-
      listBackupsSlot(string, string, string,
      ServiceCallback<BackupItemCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext'
    name: 'listBackupsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets existing backups of an app.
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupsSlotNextResponse>
        description: Promise<Models.WebAppsListBackupsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext_2'
    name: >-
      listBackupsSlotNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext_1'
    name: 'listBackupsSlotNext(string, ServiceCallback<BackupItemCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItemCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets'
    name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets status of a web app backup that may be in progress, including secrets
      associated with the

      backup, such as the Azure Storage SAS URL. Also can be used to update the
      SAS URL for the backup

      if a new URL is passed in the request body.
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupStatusSecretsResponse>
        description: Promise<Models.WebAppsListBackupStatusSecretsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets_2'
    name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      RequestOptionsBase, ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets_1'
    name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot'
    name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets status of a web app backup that may be in progress, including secrets
      associated with the

      backup, such as the Azure Storage SAS URL. Also can be used to update the
      SAS URL for the backup

      if a new URL is passed in the request body.
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListBackupStatusSecretsSlotResponse>
        description: Promise<Models.WebAppsListBackupStatusSecretsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_2'
    name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      RequestOptionsBase, ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_1'
    name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      ServiceCallback<BackupItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string,
        callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: backupId
          type:
            - string
          description: ID of backup.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Information on backup request.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupItem>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.WebAppsListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all web, mobile, and API apps in the specified resource group.'
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.WebAppsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - Models.WebAppsListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListByResourceGroupResponse>
        description: Promise<Models.WebAppsListByResourceGroupResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, WebAppsListByResourceGroupOptionalParams,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        WebAppsListByResourceGroupOptionalParams, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all web, mobile, and API apps in the specified resource group.'
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListByResourceGroupNextResponse>
        description: Promise<Models.WebAppsListByResourceGroupNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurations'
    name: 'listConfigurations(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the configurations of an app
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationsResponse>
        description: Promise<Models.WebAppsListConfigurationsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurations_2'
    name: >-
      listConfigurations(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurations_1'
    name: >-
      listConfigurations(string, string,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo'
    name: 'listConfigurationSnapshotInfo(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each element
      of the list contains a

      timestamp and the ID of the snapshot.
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationSnapshotInfoResponse>
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_2'
    name: >-
      listConfigurationSnapshotInfo(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_1'
    name: >-
      listConfigurationSnapshotInfo(string, string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext'
    name: 'listConfigurationSnapshotInfoNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each element
      of the list contains a

      timestamp and the ID of the snapshot.
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationSnapshotInfoNextResponse>
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_2'
    name: >-
      listConfigurationSnapshotInfoNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_1'
    name: >-
      listConfigurationSnapshotInfoNext(string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        callback: ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot'
    name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each element
      of the list contains a

      timestamp and the ID of the snapshot.
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationSnapshotInfoSlotResponse>
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_2'
    name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_1'
    name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext'
    name: 'listConfigurationSnapshotInfoSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each element
      of the list contains a

      timestamp and the ID of the snapshot.
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationSnapshotInfoSlotNextResponse>
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_2'
    name: >-
      listConfigurationSnapshotInfoSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_1'
    name: >-
      listConfigurationSnapshotInfoSlotNext(string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        callback: ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsNext'
    name: 'listConfigurationsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the configurations of an app
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationsNextResponse>
        description: Promise<Models.WebAppsListConfigurationsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsNext_2'
    name: >-
      listConfigurationsNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsNext_1'
    name: >-
      listConfigurationsNext(string,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot'
    name: 'listConfigurationsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the configurations of an app
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationsSlotResponse>
        description: Promise<Models.WebAppsListConfigurationsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot_2'
    name: >-
      listConfigurationsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot_1'
    name: >-
      listConfigurationsSlot(string, string, string,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext'
    name: 'listConfigurationsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the configurations of an app
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConfigurationsSlotNextResponse>
        description: Promise<Models.WebAppsListConfigurationsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_2'
    name: >-
      listConfigurationsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_1'
    name: >-
      listConfigurationsSlotNext(string,
      ServiceCallback<SiteConfigResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the connection strings of an app.
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConnectionStringsResponse>
        description: Promise<Models.WebAppsListConnectionStringsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStrings_2'
    name: >-
      listConnectionStrings(string, string, RequestOptionsBase,
      ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStrings_1'
    name: >-
      listConnectionStrings(string, string,
      ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        callback: ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot'
    name: >-
      listConnectionStringsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the connection strings of an app.
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListConnectionStringsSlotResponse>
        description: Promise<Models.WebAppsListConnectionStringsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot_2'
    name: >-
      listConnectionStringsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot_1'
    name: >-
      listConnectionStringsSlot(string, string, string,
      ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs'
    name: 'listContinuousWebJobs(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List continuous web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListContinuousWebJobsResponse>
        description: Promise<Models.WebAppsListContinuousWebJobsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs_2'
    name: >-
      listContinuousWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs_1'
    name: >-
      listContinuousWebJobs(string, string,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        callback: ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext'
    name: 'listContinuousWebJobsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List continuous web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListContinuousWebJobsNextResponse>
        description: Promise<Models.WebAppsListContinuousWebJobsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_2'
    name: >-
      listContinuousWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_1'
    name: >-
      listContinuousWebJobsNext(string,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot'
    name: >-
      listContinuousWebJobsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List continuous web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListContinuousWebJobsSlotResponse>
        description: Promise<Models.WebAppsListContinuousWebJobsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_2'
    name: >-
      listContinuousWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_1'
    name: >-
      listContinuousWebJobsSlot(string, string, string,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext'
    name: 'listContinuousWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List continuous web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListContinuousWebJobsSlotNextResponse>
        description: Promise<Models.WebAppsListContinuousWebJobsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_2'
    name: >-
      listContinuousWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_1'
    name: >-
      listContinuousWebJobsSlotNext(string,
      ServiceCallback<ContinuousWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLog'
    name: 'listDeploymentLog(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List deployment log for specific deployment for an app, or a deployment
      slot.
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentLogResponse>
        description: Promise<Models.WebAppsListDeploymentLogResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLog_2'
    name: >-
      listDeploymentLog(string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLog_1'
    name: 'listDeploymentLog(string, string, string, ServiceCallback<Deployment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot'
    name: >-
      listDeploymentLogSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List deployment log for specific deployment for an app, or a deployment
      slot.
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentLogSlotResponse>
        description: Promise<Models.WebAppsListDeploymentLogSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot_2'
    name: >-
      listDeploymentLogSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot_1'
    name: >-
      listDeploymentLogSlot(string, string, string, string,
      ServiceCallback<Deployment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Deployment>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeployments'
    name: 'listDeployments(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List deployments for an app, or a deployment slot.'
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentsResponse>
        description: Promise<Models.WebAppsListDeploymentsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeployments_2'
    name: >-
      listDeployments(string, string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeployments_1'
    name: 'listDeployments(string, string, ServiceCallback<DeploymentCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsNext'
    name: 'listDeploymentsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List deployments for an app, or a deployment slot.'
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentsNextResponse>
        description: Promise<Models.WebAppsListDeploymentsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsNext_2'
    name: >-
      listDeploymentsNext(string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsNext_1'
    name: 'listDeploymentsNext(string, ServiceCallback<DeploymentCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot'
    name: 'listDeploymentsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List deployments for an app, or a deployment slot.'
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentsSlotResponse>
        description: Promise<Models.WebAppsListDeploymentsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot_2'
    name: >-
      listDeploymentsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot_1'
    name: >-
      listDeploymentsSlot(string, string, string,
      ServiceCallback<DeploymentCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext'
    name: 'listDeploymentsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List deployments for an app, or a deployment slot.'
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDeploymentsSlotNextResponse>
        description: Promise<Models.WebAppsListDeploymentsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_2'
    name: >-
      listDeploymentsSlotNext(string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_1'
    name: 'listDeploymentsSlotNext(string, ServiceCallback<DeploymentCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.DeploymentCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers'
    name: 'listDomainOwnershipIdentifiers(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists ownership identifiers for domain associated with web app.
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDomainOwnershipIdentifiersResponse>
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_2'
    name: >-
      listDomainOwnershipIdentifiers(string, string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_1'
    name: >-
      listDomainOwnershipIdentifiers(string, string,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext'
    name: 'listDomainOwnershipIdentifiersNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists ownership identifiers for domain associated with web app.
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDomainOwnershipIdentifiersNextResponse>
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_2'
    name: >-
      listDomainOwnershipIdentifiersNext(string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_1'
    name: >-
      listDomainOwnershipIdentifiersNext(string,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot'
    name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists ownership identifiers for domain associated with web app.
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotResponse>
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_2'
    name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_1'
    name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext'
    name: 'listDomainOwnershipIdentifiersSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists ownership identifiers for domain associated with web app.
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotNextResponse>
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_2'
    name: >-
      listDomainOwnershipIdentifiersSlotNext(string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_1'
    name: >-
      listDomainOwnershipIdentifiersSlotNext(string,
      ServiceCallback<IdentifierCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.IdentifierCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctions'
    name: 'listFunctions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the functions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListFunctionsResponse>
        description: Promise<Models.WebAppsListFunctionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctions_2'
    name: >-
      listFunctions(string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctions_1'
    name: 'listFunctions(string, string, ServiceCallback<FunctionEnvelopeCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string,
        callback: ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecrets'
    name: 'listFunctionSecrets(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get function secrets for a function in a web site, or a deployment slot.'
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListFunctionSecretsResponse>
        description: Promise<Models.WebAppsListFunctionSecretsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecrets_2'
    name: >-
      listFunctionSecrets(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecrets_1'
    name: >-
      listFunctionSecrets(string, string, string,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot'
    name: >-
      listFunctionSecretsSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get function secrets for a function in a web site, or a deployment slot.'
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListFunctionSecretsSlotResponse>
        description: Promise<Models.WebAppsListFunctionSecretsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_2'
    name: >-
      listFunctionSecretsSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_1'
    name: >-
      listFunctionSecretsSlot(string, string, string, string,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: functionName
          type:
            - string
          description: Function name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionsNext'
    name: 'listFunctionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the functions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListFunctionsNextResponse>
        description: Promise<Models.WebAppsListFunctionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionsNext_2'
    name: >-
      listFunctionsNext(string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listFunctionsNext_1'
    name: 'listFunctionsNext(string, ServiceCallback<FunctionEnvelopeCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindings'
    name: 'listHostNameBindings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get hostname bindings for an app or a deployment slot.
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHostNameBindingsResponse>
        description: Promise<Models.WebAppsListHostNameBindingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindings_2'
    name: >-
      listHostNameBindings(string, string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindings_1'
    name: >-
      listHostNameBindings(string, string,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        callback: ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext'
    name: 'listHostNameBindingsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get hostname bindings for an app or a deployment slot.
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHostNameBindingsNextResponse>
        description: Promise<Models.WebAppsListHostNameBindingsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext_2'
    name: >-
      listHostNameBindingsNext(string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext_1'
    name: >-
      listHostNameBindingsNext(string,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot'
    name: >-
      listHostNameBindingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get hostname bindings for an app or a deployment slot.
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHostNameBindingsSlotResponse>
        description: Promise<Models.WebAppsListHostNameBindingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_2'
    name: >-
      listHostNameBindingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_1'
    name: >-
      listHostNameBindingsSlot(string, string, string,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext'
    name: 'listHostNameBindingsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get hostname bindings for an app or a deployment slot.
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHostNameBindingsSlotNextResponse>
        description: Promise<Models.WebAppsListHostNameBindingsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_2'
    name: >-
      listHostNameBindingsSlotNext(string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_1'
    name: >-
      listHostNameBindingsSlotNext(string,
      ServiceCallback<HostNameBindingCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeys'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the send key name and value for a Hybrid Connection.
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHybridConnectionKeysResponse>
        description: Promise<Models.WebAppsListHybridConnectionKeysResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeys_2'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      RequestOptionsBase, ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeys_1'
    name: >-
      listHybridConnectionKeys(string, string, string, string,
      ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeys(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, callback:
        ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot'
    name: >-
      listHybridConnectionKeysSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the send key name and value for a Hybrid Connection.
    syntax:
      content: >-
        function listHybridConnectionKeysSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHybridConnectionKeysSlotResponse>
        description: Promise<Models.WebAppsListHybridConnectionKeysSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot_2'
    name: >-
      listHybridConnectionKeysSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeysSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionKeysSlot_1'
    name: >-
      listHybridConnectionKeysSlot(string, string, string, string, string,
      ServiceCallback<HybridConnectionKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionKeysSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        callback: ServiceCallback<HybridConnectionKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnections'
    name: 'listHybridConnections(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves all Service Bus Hybrid Connections used by this Web App.
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHybridConnectionsResponse>
        description: Promise<Models.WebAppsListHybridConnectionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnections_2'
    name: >-
      listHybridConnections(string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnections_1'
    name: 'listHybridConnections(string, string, ServiceCallback<HybridConnection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot'
    name: >-
      listHybridConnectionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves all Service Bus Hybrid Connections used by this Web App.
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListHybridConnectionsSlotResponse>
        description: Promise<Models.WebAppsListHybridConnectionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_2'
    name: >-
      listHybridConnectionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_1'
    name: >-
      listHybridConnectionsSlot(string, string, string,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot'
    name: >-
      listInstanceFunctionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the functions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceFunctionsSlotResponse>
        description: Promise<Models.WebAppsListInstanceFunctionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_2'
    name: >-
      listInstanceFunctionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_1'
    name: >-
      listInstanceFunctionsSlot(string, string, string,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext'
    name: 'listInstanceFunctionsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the functions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceFunctionsSlotNextResponse>
        description: Promise<Models.WebAppsListInstanceFunctionsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_2'
    name: >-
      listInstanceFunctionsSlotNext(string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_1'
    name: >-
      listInstanceFunctionsSlotNext(string,
      ServiceCallback<FunctionEnvelopeCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers'
    name: 'listInstanceIdentifiers(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all scale-out instances of an app.
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceIdentifiersResponse>
        description: Promise<Models.WebAppsListInstanceIdentifiersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers_2'
    name: >-
      listInstanceIdentifiers(string, string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers_1'
    name: >-
      listInstanceIdentifiers(string, string,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, callback: ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext'
    name: 'listInstanceIdentifiersNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all scale-out instances of an app.
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceIdentifiersNextResponse>
        description: Promise<Models.WebAppsListInstanceIdentifiersNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_2'
    name: >-
      listInstanceIdentifiersNext(string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_1'
    name: >-
      listInstanceIdentifiersNext(string,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, callback:
        ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot'
    name: >-
      listInstanceIdentifiersSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all scale-out instances of an app.
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceIdentifiersSlotResponse>
        description: Promise<Models.WebAppsListInstanceIdentifiersSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_2'
    name: >-
      listInstanceIdentifiersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_1'
    name: >-
      listInstanceIdentifiersSlot(string, string, string,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext'
    name: 'listInstanceIdentifiersSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all scale-out instances of an app.
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceIdentifiersSlotNextResponse>
        description: Promise<Models.WebAppsListInstanceIdentifiersSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_2'
    name: >-
      listInstanceIdentifiersSlotNext(string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_1'
    name: >-
      listInstanceIdentifiersSlotNext(string,
      ServiceCallback<WebAppInstanceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, callback:
        ServiceCallback<WebAppInstanceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcesses'
    name: 'listInstanceProcesses(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessesResponse>
        description: Promise<Models.WebAppsListInstanceProcessesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcesses_2'
    name: >-
      listInstanceProcesses(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcesses_1'
    name: >-
      listInstanceProcesses(string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext'
    name: 'listInstanceProcessesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessesNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext_2'
    name: >-
      listInstanceProcessesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext_1'
    name: 'listInstanceProcessesNext(string, ServiceCallback<ProcessInfoCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot'
    name: >-
      listInstanceProcessesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessesSlotResponse>
        description: Promise<Models.WebAppsListInstanceProcessesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_2'
    name: >-
      listInstanceProcessesSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_1'
    name: >-
      listInstanceProcessesSlot(string, string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext'
    name: 'listInstanceProcessesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessesSlotNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_2'
    name: >-
      listInstanceProcessesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_1'
    name: >-
      listInstanceProcessesSlotNext(string,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules'
    name: >-
      listInstanceProcessModules(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessModulesResponse>
        description: Promise<Models.WebAppsListInstanceProcessModulesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules_2'
    name: >-
      listInstanceProcessModules(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules_1'
    name: >-
      listInstanceProcessModules(string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext'
    name: 'listInstanceProcessModulesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessModulesNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessModulesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_2'
    name: >-
      listInstanceProcessModulesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_1'
    name: >-
      listInstanceProcessModulesNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot'
    name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessModulesSlotResponse>
        description: Promise<Models.WebAppsListInstanceProcessModulesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_2'
    name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_1'
    name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext'
    name: 'listInstanceProcessModulesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessModulesSlotNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessModulesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_2'
    name: >-
      listInstanceProcessModulesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_1'
    name: >-
      listInstanceProcessModulesSlotNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        callback: ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads'
    name: >-
      listInstanceProcessThreads(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessThreadsResponse>
        description: Promise<Models.WebAppsListInstanceProcessThreadsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads_2'
    name: >-
      listInstanceProcessThreads(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads_1'
    name: >-
      listInstanceProcessThreads(string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext'
    name: 'listInstanceProcessThreadsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessThreadsNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessThreadsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_2'
    name: >-
      listInstanceProcessThreadsNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_1'
    name: >-
      listInstanceProcessThreadsNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot'
    name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessThreadsSlotResponse>
        description: Promise<Models.WebAppsListInstanceProcessThreadsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_2'
    name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_1'
    name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type:
            - string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext'
    name: 'listInstanceProcessThreadsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListInstanceProcessThreadsSlotNextResponse>
        description: Promise<Models.WebAppsListInstanceProcessThreadsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_2'
    name: >-
      listInstanceProcessThreadsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_1'
    name: >-
      listInstanceProcessThreadsSlotNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        callback: ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadata'
    name: 'listMetadata(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the metadata of an app.
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetadataResponse>
        description: Promise<Models.WebAppsListMetadataResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadata_2'
    name: >-
      listMetadata(string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadata_1'
    name: 'listMetadata(string, string, ServiceCallback<StringDictionary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadataSlot'
    name: 'listMetadataSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the metadata of an app.
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetadataSlotResponse>
        description: Promise<Models.WebAppsListMetadataSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadataSlot_2'
    name: >-
      listMetadataSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetadataSlot_1'
    name: >-
      listMetadataSlot(string, string, string,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all metric definitions of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricDefinitionsResponse>
        description: Promise<Models.WebAppsListMetricDefinitionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitions_2'
    name: >-
      listMetricDefinitions(string, string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitions_1'
    name: >-
      listMetricDefinitions(string, string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, name: string,
        callback: ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsNext'
    name: 'listMetricDefinitionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all metric definitions of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricDefinitionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricDefinitionsNextResponse>
        description: Promise<Models.WebAppsListMetricDefinitionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsNext_2'
    name: >-
      listMetricDefinitionsNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsNext_1'
    name: >-
      listMetricDefinitionsNext(string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot'
    name: >-
      listMetricDefinitionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all metric definitions of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricDefinitionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metric

            definitions of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricDefinitionsSlotResponse>
        description: Promise<Models.WebAppsListMetricDefinitionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot_2'
    name: >-
      listMetricDefinitionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metric

            definitions of the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlot_1'
    name: >-
      listMetricDefinitionsSlot(string, string, string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metric

            definitions of the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext'
    name: 'listMetricDefinitionsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets all metric definitions of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricDefinitionsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricDefinitionsSlotNextResponse>
        description: Promise<Models.WebAppsListMetricDefinitionsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext_2'
    name: >-
      listMetricDefinitionsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricDefinitionsSlotNext_1'
    name: >-
      listMetricDefinitionsSlotNext(string,
      ServiceCallback<ResourceMetricDefinitionCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitionsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricDefinitionCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetrics'
    name: 'listMetrics(string, string, Models.WebAppsListMetricsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets performance metrics of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, options?:
        Models.WebAppsListMetricsOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - Models.WebAppsListMetricsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricsResponse>
        description: Promise<Models.WebAppsListMetricsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetrics_1'
    name: 'listMetrics(string, string, ServiceCallback<ResourceMetricCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetrics_2'
    name: >-
      listMetrics(string, string, WebAppsListMetricsOptionalParams,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, name: string, options:
        WebAppsListMetricsOptionalParams, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListMetricsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsNext'
    name: 'listMetricsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets performance metrics of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricsNextResponse>
        description: Promise<Models.WebAppsListMetricsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsNext_2'
    name: >-
      listMetricsNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsNext_1'
    name: 'listMetricsNext(string, ServiceCallback<ResourceMetricCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlot'
    name: >-
      listMetricsSlot(string, string, string,
      Models.WebAppsListMetricsSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets performance metrics of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricsSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsListMetricsSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metrics of

            the production slot.
        - id: options
          type:
            - Models.WebAppsListMetricsSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricsSlotResponse>
        description: Promise<Models.WebAppsListMetricsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlot_1'
    name: >-
      listMetricsSlot(string, string, string,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metrics of

            the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlot_2'
    name: >-
      listMetricsSlot(string, string, string,
      WebAppsListMetricsSlotOptionalParams,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsListMetricsSlotOptionalParams, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get metrics of

            the production slot.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListMetricsSlotOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlotNext'
    name: 'listMetricsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets performance metrics of an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listMetricsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListMetricsSlotNextResponse>
        description: Promise<Models.WebAppsListMetricsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlotNext_2'
    name: >-
      listMetricsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ResourceMetricCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listMetricsSlotNext_1'
    name: 'listMetricsSlotNext(string, ServiceCallback<ResourceMetricCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ResourceMetricCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeatures'
    name: 'listNetworkFeatures(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all network features used by the app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListNetworkFeaturesResponse>
        description: Promise<Models.WebAppsListNetworkFeaturesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeatures_2'
    name: >-
      listNetworkFeatures(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkFeatures>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.NetworkFeatures>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeatures_1'
    name: >-
      listNetworkFeatures(string, string, string,
      ServiceCallback<NetworkFeatures>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, callback: ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.NetworkFeatures>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot'
    name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all network features used by the app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListNetworkFeaturesSlotResponse>
        description: Promise<Models.WebAppsListNetworkFeaturesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_2'
    name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkFeatures>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.NetworkFeatures>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_1'
    name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      ServiceCallback<NetworkFeatures>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, callback:
        ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.NetworkFeatures>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all apps for a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListNextResponse>
        description: Promise<Models.WebAppsListNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listNext_1'
    name: 'listNext(string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCounters'
    name: >-
      listPerfMonCounters(string, string,
      Models.WebAppsListPerfMonCountersOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets perfmon counters for web app.
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        options?: Models.WebAppsListPerfMonCountersOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - Models.WebAppsListPerfMonCountersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPerfMonCountersResponse>
        description: Promise<Models.WebAppsListPerfMonCountersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCounters_1'
    name: >-
      listPerfMonCounters(string, string,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        callback: ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCounters_2'
    name: >-
      listPerfMonCounters(string, string,
      WebAppsListPerfMonCountersOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        options: WebAppsListPerfMonCountersOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListPerfMonCountersOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext'
    name: 'listPerfMonCountersNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets perfmon counters for web app.
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPerfMonCountersNextResponse>
        description: Promise<Models.WebAppsListPerfMonCountersNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext_2'
    name: >-
      listPerfMonCountersNext(string, RequestOptionsBase,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext_1'
    name: 'listPerfMonCountersNext(string, ServiceCallback<PerfMonCounterCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot'
    name: >-
      listPerfMonCountersSlot(string, string, string,
      Models.WebAppsListPerfMonCountersSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets perfmon counters for web app.
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsListPerfMonCountersSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - Models.WebAppsListPerfMonCountersSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPerfMonCountersSlotResponse>
        description: Promise<Models.WebAppsListPerfMonCountersSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_1'
    name: >-
      listPerfMonCountersSlot(string, string, string,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_2'
    name: >-
      listPerfMonCountersSlot(string, string, string,
      WebAppsListPerfMonCountersSlotOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsListPerfMonCountersSlotOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListPerfMonCountersSlotOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext'
    name: 'listPerfMonCountersSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets perfmon counters for web app.
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPerfMonCountersSlotNextResponse>
        description: Promise<Models.WebAppsListPerfMonCountersSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_2'
    name: >-
      listPerfMonCountersSlotNext(string, RequestOptionsBase,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_1'
    name: >-
      listPerfMonCountersSlotNext(string,
      ServiceCallback<PerfMonCounterCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOns'
    name: 'listPremierAddOns(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the premier add-ons of an app.
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPremierAddOnsResponse>
        description: Promise<Models.WebAppsListPremierAddOnsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOns_2'
    name: >-
      listPremierAddOns(string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOns_1'
    name: 'listPremierAddOns(string, string, ServiceCallback<PremierAddOn>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot'
    name: 'listPremierAddOnsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the premier add-ons of an app.
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPremierAddOnsSlotResponse>
        description: Promise<Models.WebAppsListPremierAddOnsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_2'
    name: >-
      listPremierAddOnsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_1'
    name: >-
      listPremierAddOnsSlot(string, string, string,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcesses'
    name: 'listProcesses(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessesResponse>
        description: Promise<Models.WebAppsListProcessesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcesses_2'
    name: >-
      listProcesses(string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcesses_1'
    name: 'listProcesses(string, string, ServiceCallback<ProcessInfoCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string,
        callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesNext'
    name: 'listProcessesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessesNextResponse>
        description: Promise<Models.WebAppsListProcessesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesNext_2'
    name: >-
      listProcessesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesNext_1'
    name: 'listProcessesNext(string, ServiceCallback<ProcessInfoCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlot'
    name: 'listProcessesSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessesSlotResponse>
        description: Promise<Models.WebAppsListProcessesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlot_2'
    name: >-
      listProcessesSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlot_1'
    name: >-
      listProcessesSlot(string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext'
    name: 'listProcessesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get list of processes for a web site, or a deployment slot, or for a
      specific scaled-out

      instance in a web site.
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessesSlotNextResponse>
        description: Promise<Models.WebAppsListProcessesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext_2'
    name: >-
      listProcessesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext_1'
    name: 'listProcessesSlotNext(string, ServiceCallback<ProcessInfoCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModules'
    name: 'listProcessModules(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessModulesResponse>
        description: Promise<Models.WebAppsListProcessModulesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModules_2'
    name: >-
      listProcessModules(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModules_1'
    name: >-
      listProcessModules(string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesNext'
    name: 'listProcessModulesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessModulesNextResponse>
        description: Promise<Models.WebAppsListProcessModulesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesNext_2'
    name: >-
      listProcessModulesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesNext_1'
    name: >-
      listProcessModulesNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot'
    name: >-
      listProcessModulesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessModulesSlotResponse>
        description: Promise<Models.WebAppsListProcessModulesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot_2'
    name: >-
      listProcessModulesSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot_1'
    name: >-
      listProcessModulesSlot(string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext'
    name: 'listProcessModulesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List module information for a process by its ID for a specific scaled-out
      instance in a web

      site.
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessModulesSlotNextResponse>
        description: Promise<Models.WebAppsListProcessModulesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_2'
    name: >-
      listProcessModulesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_1'
    name: >-
      listProcessModulesSlotNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreads'
    name: 'listProcessThreads(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessThreadsResponse>
        description: Promise<Models.WebAppsListProcessThreadsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreads_2'
    name: >-
      listProcessThreads(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreads_1'
    name: >-
      listProcessThreads(string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext'
    name: 'listProcessThreadsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessThreadsNextResponse>
        description: Promise<Models.WebAppsListProcessThreadsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext_2'
    name: >-
      listProcessThreadsNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext_1'
    name: >-
      listProcessThreadsNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot'
    name: >-
      listProcessThreadsSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessThreadsSlotResponse>
        description: Promise<Models.WebAppsListProcessThreadsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot_2'
    name: >-
      listProcessThreadsSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot_1'
    name: >-
      listProcessThreadsSlot(string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: processId
          type:
            - string
          description: PID.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext'
    name: 'listProcessThreadsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List the threads in a process by its ID for a specific scaled-out instance
      in a web site.
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListProcessThreadsSlotNextResponse>
        description: Promise<Models.WebAppsListProcessThreadsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_2'
    name: >-
      listProcessThreadsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_1'
    name: >-
      listProcessThreadsSlotNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificates'
    name: 'listPublicCertificates(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get public certificates for an app or a deployment slot.
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublicCertificatesResponse>
        description: Promise<Models.WebAppsListPublicCertificatesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificates_2'
    name: >-
      listPublicCertificates(string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificates_1'
    name: >-
      listPublicCertificates(string, string,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        callback: ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext'
    name: 'listPublicCertificatesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get public certificates for an app or a deployment slot.
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublicCertificatesNextResponse>
        description: Promise<Models.WebAppsListPublicCertificatesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext_2'
    name: >-
      listPublicCertificatesNext(string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext_1'
    name: >-
      listPublicCertificatesNext(string,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot'
    name: >-
      listPublicCertificatesSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get public certificates for an app or a deployment slot.
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublicCertificatesSlotResponse>
        description: Promise<Models.WebAppsListPublicCertificatesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_2'
    name: >-
      listPublicCertificatesSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_1'
    name: >-
      listPublicCertificatesSlot(string, string, string,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext'
    name: 'listPublicCertificatesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get public certificates for an app or a deployment slot.
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublicCertificatesSlotNextResponse>
        description: Promise<Models.WebAppsListPublicCertificatesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_2'
    name: >-
      listPublicCertificatesSlotNext(string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_1'
    name: >-
      listPublicCertificatesSlotNext(string,
      ServiceCallback<PublicCertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingCredentials'
    name: 'listPublishingCredentials(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Git/FTP publishing credentials of an app.
    syntax:
      content: >-
        function listPublishingCredentials(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublishingCredentialsResponse>
        description: Promise<Models.WebAppsListPublishingCredentialsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingCredentialsSlot'
    name: >-
      listPublishingCredentialsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Git/FTP publishing credentials of an app.
    syntax:
      content: >-
        function listPublishingCredentialsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing credentials for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublishingCredentialsSlotResponse>
        description: Promise<Models.WebAppsListPublishingCredentialsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets'
    name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the publishing profile for an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListPublishingProfileXmlWithSecretsResponse>
        description: Promise<Models.WebAppsListPublishingProfileXmlWithSecretsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_2'
    name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_1'
    name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot'
    name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the publishing profile for an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsListPublishingProfileXmlWithSecretsSlotResponse>
        description: Promise<Models.WebAppsListPublishingProfileXmlWithSecretsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_2'
    name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_1'
    name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: publishingProfileOptions
          type:
            - '@azure/arm-appservice.CsmPublishingProfileOptions'
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections'
    name: 'listRelayServiceConnections(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListRelayServiceConnectionsResponse>
        description: Promise<Models.WebAppsListRelayServiceConnectionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections_2'
    name: >-
      listRelayServiceConnections(string, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections_1'
    name: >-
      listRelayServiceConnections(string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot'
    name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListRelayServiceConnectionsSlotResponse>
        description: Promise<Models.WebAppsListRelayServiceConnectionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_2'
    name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_1'
    name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensions'
    name: 'listSiteExtensions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get list of siteextensions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSiteExtensionsResponse>
        description: Promise<Models.WebAppsListSiteExtensionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensions_2'
    name: >-
      listSiteExtensions(string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensions_1'
    name: >-
      listSiteExtensions(string, string,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext'
    name: 'listSiteExtensionsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get list of siteextensions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSiteExtensionsNextResponse>
        description: Promise<Models.WebAppsListSiteExtensionsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext_2'
    name: >-
      listSiteExtensionsNext(string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext_1'
    name: >-
      listSiteExtensionsNext(string,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot'
    name: 'listSiteExtensionsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get list of siteextensions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSiteExtensionsSlotResponse>
        description: Promise<Models.WebAppsListSiteExtensionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_2'
    name: >-
      listSiteExtensionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_1'
    name: >-
      listSiteExtensionsSlot(string, string, string,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext'
    name: 'listSiteExtensionsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Get list of siteextensions for a web site, or a deployment slot.'
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSiteExtensionsSlotNextResponse>
        description: Promise<Models.WebAppsListSiteExtensionsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_2'
    name: >-
      listSiteExtensionsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_1'
    name: >-
      listSiteExtensionsSlotNext(string,
      ServiceCallback<SiteExtensionInfoCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettings'
    name: 'listSitePushSettings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Push settings associated with web app.
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSitePushSettingsResponse>
        description: Promise<Models.WebAppsListSitePushSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettings_2'
    name: >-
      listSitePushSettings(string, string, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettings_1'
    name: 'listSitePushSettings(string, string, ServiceCallback<PushSettings>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot'
    name: >-
      listSitePushSettingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Push settings associated with web app.
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSitePushSettingsSlotResponse>
        description: Promise<Models.WebAppsListSitePushSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_2'
    name: >-
      listSitePushSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_1'
    name: >-
      listSitePushSettingsSlot(string, string, string,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames'
    name: 'listSlotConfigurationNames(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the names of app settings and connection strings that stick to the
      slot (not swapped).
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotConfigurationNamesResponse>
        description: Promise<Models.WebAppsListSlotConfigurationNamesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames_2'
    name: >-
      listSlotConfigurationNames(string, string, RequestOptionsBase,
      ServiceCallback<SlotConfigNamesResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotConfigNamesResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames_1'
    name: >-
      listSlotConfigurationNames(string, string,
      ServiceCallback<SlotConfigNamesResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, callback: ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotConfigNamesResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction'
    name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the difference in configuration settings between two web app slots.
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotDifferencesFromProductionResponse>
        description: Promise<Models.WebAppsListSlotDifferencesFromProductionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_2'
    name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      RequestOptionsBase, ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_1'
    name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext'
    name: 'listSlotDifferencesFromProductionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the difference in configuration settings between two web app slots.
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotDifferencesFromProductionNextResponse>
        description: Promise<Models.WebAppsListSlotDifferencesFromProductionNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_2'
    name: >-
      listSlotDifferencesFromProductionNext(string, RequestOptionsBase,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_1'
    name: >-
      listSlotDifferencesFromProductionNext(string,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot'
    name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the difference in configuration settings between two web app slots.
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotDifferencesSlotResponse>
        description: Promise<Models.WebAppsListSlotDifferencesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_2'
    name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      RequestOptionsBase, ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_1'
    name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext'
    name: 'listSlotDifferencesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the difference in configuration settings between two web app slots.
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotDifferencesSlotNextResponse>
        description: Promise<Models.WebAppsListSlotDifferencesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_2'
    name: >-
      listSlotDifferencesSlotNext(string, RequestOptionsBase,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_1'
    name: >-
      listSlotDifferencesSlotNext(string,
      ServiceCallback<SlotDifferenceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlots'
    name: 'listSlots(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an app's deployment slots.
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotsResponse>
        description: Promise<Models.WebAppsListSlotsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlots_2'
    name: >-
      listSlots(string, string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlots_1'
    name: 'listSlots(string, string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotsNext'
    name: 'listSlotsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an app's deployment slots.
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSlotsNextResponse>
        description: Promise<Models.WebAppsListSlotsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotsNext_2'
    name: >-
      listSlotsNext(string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSlotsNext_1'
    name: 'listSlotsNext(string, ServiceCallback<WebAppCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebAppCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshots'
    name: 'listSnapshots(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user.
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsResponse>
        description: Promise<Models.WebAppsListSnapshotsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshots_2'
    name: >-
      listSnapshots(string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshots_1'
    name: 'listSnapshots(string, string, ServiceCallback<SnapshotCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary'
    name: 'listSnapshotsFromDRSecondary(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user from DRSecondary endpoint.
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsFromDRSecondaryResponse>
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondaryResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_2'
    name: >-
      listSnapshotsFromDRSecondary(string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_1'
    name: >-
      listSnapshotsFromDRSecondary(string, string,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext'
    name: 'listSnapshotsFromDRSecondaryNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user from DRSecondary endpoint.
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsFromDRSecondaryNextResponse>
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondaryNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_2'
    name: >-
      listSnapshotsFromDRSecondaryNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_1'
    name: >-
      listSnapshotsFromDRSecondaryNext(string,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot'
    name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user from DRSecondary endpoint.
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotResponse>
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_2'
    name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_1'
    name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext'
    name: 'listSnapshotsFromDRSecondarySlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user from DRSecondary endpoint.
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotNextResponse>
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_2'
    name: >-
      listSnapshotsFromDRSecondarySlotNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_1'
    name: >-
      listSnapshotsFromDRSecondarySlotNext(string,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsNext'
    name: 'listSnapshotsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user.
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsNextResponse>
        description: Promise<Models.WebAppsListSnapshotsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsNext_2'
    name: >-
      listSnapshotsNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsNext_1'
    name: 'listSnapshotsNext(string, ServiceCallback<SnapshotCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot'
    name: 'listSnapshotsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user.
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsSlotResponse>
        description: Promise<Models.WebAppsListSnapshotsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot_2'
    name: >-
      listSnapshotsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot_1'
    name: >-
      listSnapshotsSlot(string, string, string,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Website Name.
        - id: slot
          type:
            - string
          description: Website Slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext'
    name: 'listSnapshotsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all Snapshots to the user.
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSnapshotsSlotNextResponse>
        description: Promise<Models.WebAppsListSnapshotsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_2'
    name: >-
      listSnapshotsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_1'
    name: 'listSnapshotsSlotNext(string, ServiceCallback<SnapshotCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SnapshotCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers'
    name: 'listSyncFunctionTriggers(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: This is to allow calling via powershell and ARM template.
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSyncFunctionTriggersResponse>
        description: Promise<Models.WebAppsListSyncFunctionTriggersResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_2'
    name: >-
      listSyncFunctionTriggers(string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_1'
    name: 'listSyncFunctionTriggers(string, string, ServiceCallback<FunctionSecrets>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot'
    name: >-
      listSyncFunctionTriggersSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: This is to allow calling via powershell and ARM template.
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListSyncFunctionTriggersSlotResponse>
        description: Promise<Models.WebAppsListSyncFunctionTriggersSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_2'
    name: >-
      listSyncFunctionTriggersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_1'
    name: >-
      listSyncFunctionTriggersSlot(string, string, string,
      ServiceCallback<FunctionSecrets>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.FunctionSecrets>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory'
    name: >-
      listTriggeredWebJobHistory(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List a triggered web job''s history for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobHistoryResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobHistoryResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_2'
    name: >-
      listTriggeredWebJobHistory(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_1'
    name: >-
      listTriggeredWebJobHistory(string, string, string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext'
    name: 'listTriggeredWebJobHistoryNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List a triggered web job''s history for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobHistoryNextResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobHistoryNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_2'
    name: >-
      listTriggeredWebJobHistoryNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_1'
    name: >-
      listTriggeredWebJobHistoryNext(string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot'
    name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List a triggered web job''s history for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobHistorySlotResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobHistorySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_2'
    name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_1'
    name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext'
    name: 'listTriggeredWebJobHistorySlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List a triggered web job''s history for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobHistorySlotNextResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobHistorySlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_2'
    name: >-
      listTriggeredWebJobHistorySlotNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_1'
    name: >-
      listTriggeredWebJobHistorySlotNext(string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        callback: ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs'
    name: 'listTriggeredWebJobs(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List triggered web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobsResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs_2'
    name: >-
      listTriggeredWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs_1'
    name: >-
      listTriggeredWebJobs(string, string,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        callback: ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext'
    name: 'listTriggeredWebJobsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List triggered web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobsNextResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_2'
    name: >-
      listTriggeredWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_1'
    name: >-
      listTriggeredWebJobsNext(string,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot'
    name: >-
      listTriggeredWebJobsSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List triggered web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobsSlotResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_2'
    name: >-
      listTriggeredWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_1'
    name: >-
      listTriggeredWebJobsSlot(string, string, string,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext'
    name: 'listTriggeredWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List triggered web jobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListTriggeredWebJobsSlotNextResponse>
        description: Promise<Models.WebAppsListTriggeredWebJobsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_2'
    name: >-
      listTriggeredWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_1'
    name: >-
      listTriggeredWebJobsSlotNext(string,
      ServiceCallback<TriggeredWebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsages'
    name: 'listUsages(string, string, Models.WebAppsListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the quota usage information of an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options?:
        Models.WebAppsListUsagesOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - Models.WebAppsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListUsagesResponse>
        description: Promise<Models.WebAppsListUsagesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<CsmUsageQuotaCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsages_2'
    name: >-
      listUsages(string, string, WebAppsListUsagesOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options:
        WebAppsListUsagesOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListUsagesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesNext'
    name: 'listUsagesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the quota usage information of an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListUsagesNextResponse>
        description: Promise<Models.WebAppsListUsagesNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesNext_2'
    name: >-
      listUsagesNext(string, RequestOptionsBase,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesNext_1'
    name: 'listUsagesNext(string, ServiceCallback<CsmUsageQuotaCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlot'
    name: >-
      listUsagesSlot(string, string, string,
      Models.WebAppsListUsagesSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the quota usage information of an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsListUsagesSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: options
          type:
            - Models.WebAppsListUsagesSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListUsagesSlotResponse>
        description: Promise<Models.WebAppsListUsagesSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlot_1'
    name: >-
      listUsagesSlot(string, string, string,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlot_2'
    name: >-
      listUsagesSlot(string, string, string,
      WebAppsListUsagesSlotOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsListUsagesSlotOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsListUsagesSlotOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext'
    name: 'listUsagesSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the quota usage information of an app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListUsagesSlotNextResponse>
        description: Promise<Models.WebAppsListUsagesSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext_2'
    name: >-
      listUsagesSlotNext(string, RequestOptionsBase,
      ServiceCallback<CsmUsageQuotaCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext_1'
    name: 'listUsagesSlotNext(string, ServiceCallback<CsmUsageQuotaCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnections'
    name: 'listVnetConnections(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual networks the app (or deployment slot) is connected to.
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListVnetConnectionsResponse>
        description: Promise<Models.WebAppsListVnetConnectionsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnections_2'
    name: >-
      listVnetConnections(string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnections_1'
    name: 'listVnetConnections(string, string, ServiceCallback<VnetInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot'
    name: 'listVnetConnectionsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual networks the app (or deployment slot) is connected to.
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListVnetConnectionsSlotResponse>
        description: Promise<Models.WebAppsListVnetConnectionsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_2'
    name: >-
      listVnetConnectionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_1'
    name: >-
      listVnetConnectionsSlot(string, string, string,
      ServiceCallback<VnetInfo[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobs'
    name: 'listWebJobs(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List webjobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListWebJobsResponse>
        description: Promise<Models.WebAppsListWebJobsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobs_2'
    name: >-
      listWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobs_1'
    name: 'listWebJobs(string, string, ServiceCallback<WebJobCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsNext'
    name: 'listWebJobsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List webjobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListWebJobsNextResponse>
        description: Promise<Models.WebAppsListWebJobsNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsNext_2'
    name: >-
      listWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsNext_1'
    name: 'listWebJobsNext(string, ServiceCallback<WebJobCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlot'
    name: 'listWebJobsSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List webjobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListWebJobsSlotResponse>
        description: Promise<Models.WebAppsListWebJobsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlot_2'
    name: >-
      listWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlot_1'
    name: 'listWebJobsSlot(string, string, string, ServiceCallback<WebJobCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext'
    name: 'listWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List webjobs for an app, or a deployment slot.'
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsListWebJobsSlotNextResponse>
        description: Promise<Models.WebAppsListWebJobsSlotNextResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext_2'
    name: >-
      listWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext_1'
    name: 'listWebJobsSlotNext(string, ServiceCallback<WebJobCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.WebJobCollection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.migrateMySql'
    name: >-
      migrateMySql(string, string, MigrateMySqlRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrates a local (in-app) MySql database to a remote MySql database.
    syntax:
      content: >-
        function migrateMySql(resourceGroupName: string, name: string,
        migrationRequestEnvelope: MigrateMySqlRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: migrationRequestEnvelope
          type:
            - '@azure/arm-appservice.MigrateMySqlRequest'
          description: MySql migration options.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsMigrateMySqlResponse>
        description: Promise<Models.WebAppsMigrateMySqlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.migrateStorage'
    name: >-
      migrateStorage(string, string, string, StorageMigrationOptions,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app.
    syntax:
      content: >-
        function migrateStorage(subscriptionName: string, resourceGroupName:
        string, name: string, migrationOptions: StorageMigrationOptions,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription.
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: migrationOptions
          type:
            - '@azure/arm-appservice.StorageMigrationOptions'
          description: Migration migrationOptions.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsMigrateStorageResponse>
        description: Promise<Models.WebAppsMigrateStorageResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet'
    name: >-
      putPrivateAccessVnet(string, string, PrivateAccess,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets data around private site access enablement and authorized Virtual
      Networks that can access

      the site.
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsPutPrivateAccessVnetResponse>
        description: Promise<Models.WebAppsPutPrivateAccessVnetResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet_2'
    name: >-
      putPrivateAccessVnet(string, string, PrivateAccess, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, options: RequestOptionsBase, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet_1'
    name: >-
      putPrivateAccessVnet(string, string, PrivateAccess,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot'
    name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets data around private site access enablement and authorized Virtual
      Networks that can access

      the site.
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsPutPrivateAccessVnetSlotResponse>
        description: Promise<Models.WebAppsPutPrivateAccessVnetSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_2'
    name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      RequestOptionsBase, ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_1'
    name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      ServiceCallback<PrivateAccess>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: access
          type:
            - '@azure/arm-appservice.PrivateAccess'
          description: The information for the private access
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PrivateAccess>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot'
    name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Reverts the configuration of an app to a previous snapshot.
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_2'
    name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_1'
    name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot'
    name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Reverts the configuration of an app to a previous snapshot.
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_2'
    name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_1'
    name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig'
    name: 'resetProductionSlotConfig(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Resets the configuration settings of the current slot if they were
      previously modified by

      calling the API with POST.
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig_2'
    name: >-
      resetProductionSlotConfig(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig_1'
    name: 'resetProductionSlotConfig(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot'
    name: >-
      resetSlotConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Resets the configuration settings of the current slot if they were
      previously modified by

      calling the API with POST.
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_2'
    name: >-
      resetSlotConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_1'
    name: 'resetSlotConfigurationSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restart'
    name: 'restart(string, string, Models.WebAppsRestartOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Restarts an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, options?:
        Models.WebAppsRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - Models.WebAppsRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restart_1'
    name: 'restart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restart_2'
    name: >-
      restart(string, string, WebAppsRestartOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, options:
        WebAppsRestartOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsRestartOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restartSlot'
    name: >-
      restartSlot(string, string, string,
      Models.WebAppsRestartSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Restarts an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsRestartSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: options
          type:
            - Models.WebAppsRestartSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restartSlot_1'
    name: 'restartSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restartSlot_2'
    name: >-
      restartSlot(string, string, string, WebAppsRestartSlotOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsRestartSlotOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: options
          type:
            - '@azure/arm-appservice.WebAppsRestartSlotOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restore'
    name: 'restore(string, string, string, RestoreRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restores a specific backup to another app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function restore(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreFromBackupBlob'
    name: >-
      restoreFromBackupBlob(string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores an app from a backup blob in Azure Storage.
    syntax:
      content: >-
        function restoreFromBackupBlob(resourceGroupName: string, name: string,
        request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreFromBackupBlobSlot'
    name: >-
      restoreFromBackupBlobSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores an app from a backup blob in Azure Storage.
    syntax:
      content: >-
        function restoreFromBackupBlobSlot(resourceGroupName: string, name:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreFromDeletedApp'
    name: >-
      restoreFromDeletedApp(string, string, DeletedAppRestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a deleted web app to this web app.
    syntax:
      content: >-
        function restoreFromDeletedApp(resourceGroupName: string, name: string,
        restoreRequest: DeletedAppRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.DeletedAppRestoreRequest'
          description: Deleted web app restore information.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreFromDeletedAppSlot'
    name: >-
      restoreFromDeletedAppSlot(string, string, DeletedAppRestoreRequest,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a deleted web app to this web app.
    syntax:
      content: >-
        function restoreFromDeletedAppSlot(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.DeletedAppRestoreRequest'
          description: Deleted web app restore information.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreSlot'
    name: >-
      restoreSlot(string, string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restores a specific backup to another app (or deployment slot, if
      specified).
    syntax:
      content: >-
        function restoreSlot(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - '@azure/arm-appservice.RestoreRequest'
          description: Information on restore request .
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreSnapshot'
    name: >-
      restoreSnapshot(string, string, SnapshotRestoreRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app from a snapshot.
    syntax:
      content: >-
        function restoreSnapshot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.SnapshotRestoreRequest'
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.restoreSnapshotSlot'
    name: >-
      restoreSnapshotSlot(string, string, SnapshotRestoreRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a web app from a snapshot.
    syntax:
      content: >-
        function restoreSnapshotSlot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: restoreRequest
          type:
            - '@azure/arm-appservice.SnapshotRestoreRequest'
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob'
    name: 'runTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Run a triggered web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob_2'
    name: >-
      runTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob_1'
    name: 'runTriggeredWebJob(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot'
    name: >-
      runTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Run a triggered web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_2'
    name: >-
      runTriggeredWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_1'
    name: >-
      runTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.start'
    name: 'start(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Starts an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.start_2'
    name: 'start(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.start_1'
    name: 'start(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJob'
    name: 'startContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Start a continuous web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJob_2'
    name: >-
      startContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJob_1'
    name: 'startContinuousWebJob(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot'
    name: >-
      startContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Start a continuous web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_2'
    name: >-
      startContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_1'
    name: >-
      startContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startNetworkTrace'
    name: >-
      startNetworkTrace(string, string,
      Models.WebAppsStartNetworkTraceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function startNetworkTrace(resourceGroupName: string, name: string,
        options?: Models.WebAppsStartNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - Models.WebAppsStartNetworkTraceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartNetworkTraceResponse>
        description: Promise<Models.WebAppsStartNetworkTraceResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startNetworkTraceSlot'
    name: >-
      startNetworkTraceSlot(string, string, string,
      Models.WebAppsStartNetworkTraceSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function startNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options?:
        Models.WebAppsStartNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - Models.WebAppsStartNetworkTraceSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartNetworkTraceSlotResponse>
        description: Promise<Models.WebAppsStartNetworkTraceSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startSlot'
    name: 'startSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Starts an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startSlot_2'
    name: >-
      startSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startSlot_1'
    name: 'startSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace'
    name: >-
      startWebSiteNetworkTrace(string, string,
      Models.WebAppsStartWebSiteNetworkTraceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site (To be deprecated).
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options?: Models.WebAppsStartWebSiteNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - Models.WebAppsStartWebSiteNetworkTraceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartWebSiteNetworkTraceResponse>
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_1'
    name: 'startWebSiteNetworkTrace(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_2'
    name: >-
      startWebSiteNetworkTrace(string, string,
      WebAppsStartWebSiteNetworkTraceOptionalParams, ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options: WebAppsStartWebSiteNetworkTraceOptionalParams,
        callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebAppsStartWebSiteNetworkTraceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperation'
    name: >-
      startWebSiteNetworkTraceOperation(string, string,
      Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function startWebSiteNetworkTraceOperation(resourceGroupName: string,
        name: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartWebSiteNetworkTraceOperationResponse>
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceOperationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperationSlot'
    name: >-
      startWebSiteNetworkTraceOperationSlot(string, string, string,
      Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site.
    syntax:
      content: >-
        function startWebSiteNetworkTraceOperationSlot(resourceGroupName:
        string, name: string, slot: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartWebSiteNetworkTraceOperationSlotResponse>
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceOperationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot'
    name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Start capturing network packets for the site (To be deprecated).
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsStartWebSiteNetworkTraceSlotResponse>
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_1'
    name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_2'
    name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      WebAppsStartWebSiteNetworkTraceSlotOptionalParams,
      ServiceCallback<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsStartWebSiteNetworkTraceSlotOptionalParams, callback:
        ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - >-
              @azure/arm-appservice.WebAppsStartWebSiteNetworkTraceSlotOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stop'
    name: 'stop(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stops an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stop_2'
    name: 'stop(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stop_1'
    name: 'stop(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob'
    name: 'stopContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stop a continuous web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob_2'
    name: >-
      stopContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob_1'
    name: 'stopContinuousWebJob(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot'
    name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stop a continuous web job for an app, or a deployment slot.'
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_2'
    name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_1'
    name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Site name.
        - id: webJobName
          type:
            - string
          description: Name of Web Job.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTrace'
    name: 'stopNetworkTrace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop ongoing capturing network packets for the site.
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTrace_2'
    name: >-
      stopNetworkTrace(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTrace_1'
    name: 'stopNetworkTrace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot'
    name: 'stopNetworkTraceSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop ongoing capturing network packets for the site.
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_2'
    name: >-
      stopNetworkTraceSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_1'
    name: 'stopNetworkTraceSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopSlot'
    name: 'stopSlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stops an app (or deployment slot, if specified).'
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopSlot_2'
    name: >-
      stopSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopSlot_1'
    name: 'stopSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace'
    name: 'stopWebSiteNetworkTrace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop ongoing capturing network packets for the site.
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_2'
    name: >-
      stopWebSiteNetworkTrace(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_1'
    name: 'stopWebSiteNetworkTrace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot'
    name: >-
      stopWebSiteNetworkTraceSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop ongoing capturing network packets for the site.
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_2'
    name: >-
      stopWebSiteNetworkTraceSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_1'
    name: 'stopWebSiteNetworkTraceSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.swapSlotSlot'
    name: >-
      swapSlotSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Swaps two deployment slots of an app.
    syntax:
      content: >-
        function swapSlotSlot(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.swapSlotWithProduction'
    name: >-
      swapSlotWithProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Swaps two deployment slots of an app.
    syntax:
      content: >-
        function swapSlotWithProduction(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - '@azure/arm-appservice.CsmSlotEntity'
          description: JSON object that contains the target slot name. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers'
    name: 'syncFunctionTriggers(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Syncs function trigger metadata to the scale controller
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers_2'
    name: >-
      syncFunctionTriggers(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers_1'
    name: 'syncFunctionTriggers(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot'
    name: >-
      syncFunctionTriggersSlot(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Syncs function trigger metadata to the scale controller
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_2'
    name: >-
      syncFunctionTriggersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_1'
    name: 'syncFunctionTriggersSlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepository'
    name: 'syncRepository(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sync web app repository.
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepository_2'
    name: 'syncRepository(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepository_1'
    name: 'syncRepository(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepositorySlot'
    name: 'syncRepositorySlot(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sync web app repository.
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepositorySlot_2'
    name: >-
      syncRepositorySlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.syncRepositorySlot_1'
    name: 'syncRepositorySlot(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.update'
    name: 'update(string, string, SitePatchResource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateResponse>
        description: Promise<Models.WebAppsUpdateResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.update_2'
    name: >-
      update(string, string, SitePatchResource, RequestOptionsBase,
      ServiceCallback<Site>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, options: RequestOptionsBase, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.update_1'
    name: 'update(string, string, SitePatchResource, ServiceCallback<Site>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettings'
    name: >-
      updateApplicationSettings(string, string, StringDictionary,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the application settings of an app.
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateApplicationSettingsResponse>
        description: Promise<Models.WebAppsUpdateApplicationSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettings_2'
    name: >-
      updateApplicationSettings(string, string, StringDictionary,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, options: RequestOptionsBase,
        callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettings_1'
    name: >-
      updateApplicationSettings(string, string, StringDictionary,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot'
    name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the application settings of an app.
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateApplicationSettingsSlotResponse>
        description: Promise<Models.WebAppsUpdateApplicationSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_2'
    name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_1'
    name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Application settings of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettings'
    name: >-
      updateAuthSettings(string, string, SiteAuthSettings,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the Authentication / Authorization settings associated with web
      app.
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateAuthSettingsResponse>
        description: Promise<Models.WebAppsUpdateAuthSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettings_2'
    name: >-
      updateAuthSettings(string, string, SiteAuthSettings, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, options: RequestOptionsBase,
        callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettings_1'
    name: >-
      updateAuthSettings(string, string, SiteAuthSettings,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot'
    name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the Authentication / Authorization settings associated with web
      app.
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateAuthSettingsSlotResponse>
        description: Promise<Models.WebAppsUpdateAuthSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_2'
    name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      RequestOptionsBase, ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_1'
    name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      ServiceCallback<SiteAuthSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: siteAuthSettings
          type:
            - '@azure/arm-appservice.SiteAuthSettings'
          description: Auth settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts'
    name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Azure storage account configurations of an app.
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateAzureStorageAccountsResponse>
        description: Promise<Models.WebAppsUpdateAzureStorageAccountsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_2'
    name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_1'
    name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        callback: ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot'
    name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Azure storage account configurations of an app.
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateAzureStorageAccountsSlotResponse>
        description: Promise<Models.WebAppsUpdateAzureStorageAccountsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_2'
    name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_1'
    name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: azureStorageAccounts
          type:
            - '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
          description: Azure storage accounts of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration'
    name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the backup configuration of an app.
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateBackupConfigurationResponse>
        description: Promise<Models.WebAppsUpdateBackupConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration_2'
    name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      RequestOptionsBase, ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, options: RequestOptionsBase, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration_1'
    name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot'
    name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the backup configuration of an app.
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateBackupConfigurationSlotResponse>
        description: Promise<Models.WebAppsUpdateBackupConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_2'
    name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      RequestOptionsBase, ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_1'
    name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      ServiceCallback<BackupRequest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - '@azure/arm-appservice.BackupRequest'
          description: Edited backup configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.BackupRequest>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfiguration'
    name: >-
      updateConfiguration(string, string, SiteConfigResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the configuration of an app.
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateConfigurationResponse>
        description: Promise<Models.WebAppsUpdateConfigurationResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfiguration_2'
    name: >-
      updateConfiguration(string, string, SiteConfigResource,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfiguration_1'
    name: >-
      updateConfiguration(string, string, SiteConfigResource,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot'
    name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the configuration of an app.
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateConfigurationSlotResponse>
        description: Promise<Models.WebAppsUpdateConfigurationSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot_2'
    name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot_1'
    name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      ServiceCallback<SiteConfigResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - '@azure/arm-appservice.SiteConfigResource'
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteConfigResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStrings'
    name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the connection strings of an app.
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateConnectionStringsResponse>
        description: Promise<Models.WebAppsUpdateConnectionStringsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStrings_2'
    name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      RequestOptionsBase, ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, options:
        RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStrings_1'
    name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot'
    name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the connection strings of an app.
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateConnectionStringsSlotResponse>
        description: Promise<Models.WebAppsUpdateConnectionStringsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_2'
    name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, RequestOptionsBase, ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_1'
    name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, ServiceCallback<ConnectionStringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        callback: ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - '@azure/arm-appservice.ConnectionStringDictionary'
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig'
    name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the logging configuration of an app.
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateDiagnosticLogsConfigResponse>
        description: Promise<Models.WebAppsUpdateDiagnosticLogsConfigResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_2'
    name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, options: RequestOptionsBase,
        callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_1'
    name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot'
    name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the logging configuration of an app.
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateDiagnosticLogsConfigSlotResponse>
        description: Promise<Models.WebAppsUpdateDiagnosticLogsConfigSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_2'
    name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_1'
    name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      ServiceCallback<SiteLogsConfig>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - '@azure/arm-appservice.SiteLogsConfig'
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier'
    name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateDomainOwnershipIdentifierResponse>
        description: Promise<Models.WebAppsUpdateDomainOwnershipIdentifierResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_2'
    name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      RequestOptionsBase, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options: RequestOptionsBase,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_1'
    name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot'
    name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateDomainOwnershipIdentifierSlotResponse>
        description: Promise<Models.WebAppsUpdateDomainOwnershipIdentifierSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_2'
    name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, RequestOptionsBase, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_1'
    name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, ServiceCallback<Identifier>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type:
            - '@azure/arm-appservice.Identifier'
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Identifier>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnection'
    name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Hybrid Connection using a Service Bus relay.
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateHybridConnectionResponse>
        description: Promise<Models.WebAppsUpdateHybridConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnection_2'
    name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      RequestOptionsBase, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnection_1'
    name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot'
    name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Hybrid Connection using a Service Bus relay.
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateHybridConnectionSlotResponse>
        description: Promise<Models.WebAppsUpdateHybridConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_2'
    name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_1'
    name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, ServiceCallback<HybridConnection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection.
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.HybridConnection'
          description: The details of the hybrid connection.
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.HybridConnection>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadata'
    name: >-
      updateMetadata(string, string, StringDictionary,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the metadata of an app.
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateMetadataResponse>
        description: Promise<Models.WebAppsUpdateMetadataResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadata_2'
    name: >-
      updateMetadata(string, string, StringDictionary, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadata_1'
    name: >-
      updateMetadata(string, string, StringDictionary,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadataSlot'
    name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces the metadata of an app.
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateMetadataSlotResponse>
        description: Promise<Models.WebAppsUpdateMetadataSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadataSlot_2'
    name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateMetadataSlot_1'
    name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      ServiceCallback<StringDictionary>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - '@azure/arm-appservice.StringDictionary'
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.StringDictionary>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOn'
    name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a named add-on of an app.
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdatePremierAddOnResponse>
        description: Promise<Models.WebAppsUpdatePremierAddOnResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOn_2'
    name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      RequestOptionsBase, ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOn_1'
    name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot'
    name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a named add-on of an app.
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdatePremierAddOnSlotResponse>
        description: Promise<Models.WebAppsUpdatePremierAddOnSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_2'
    name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, RequestOptionsBase, ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_1'
    name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, ServiceCallback<PremierAddOn>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - '@azure/arm-appservice.PremierAddOnPatchResource'
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PremierAddOn>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection'
    name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an
      existing one (PATCH).
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateRelayServiceConnectionResponse>
        description: Promise<Models.WebAppsUpdateRelayServiceConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection_2'
    name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection_1'
    name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot'
    name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an
      existing one (PATCH).
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateRelayServiceConnectionSlotResponse>
        description: Promise<Models.WebAppsUpdateRelayServiceConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_2'
    name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_1'
    name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.RelayServiceConnectionEntity'
          description: Details of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettings'
    name: >-
      updateSitePushSettings(string, string, PushSettings,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Push settings associated with web app.
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSitePushSettingsResponse>
        description: Promise<Models.WebAppsUpdateSitePushSettingsResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettings_2'
    name: >-
      updateSitePushSettings(string, string, PushSettings, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, options: RequestOptionsBase, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettings_1'
    name: >-
      updateSitePushSettings(string, string, PushSettings,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot'
    name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Push settings associated with web app.
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSitePushSettingsSlotResponse>
        description: Promise<Models.WebAppsUpdateSitePushSettingsSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_2'
    name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      RequestOptionsBase, ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_1'
    name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      ServiceCallback<PushSettings>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of web app.
        - id: pushSettings
          type:
            - '@azure/arm-appservice.PushSettings'
          description: Push settings associated with web app.
        - id: slot
          type:
            - string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.PushSettings>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlot'
    name: >-
      updateSlot(string, string, SitePatchResource, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSlotResponse>
        description: Promise<Models.WebAppsUpdateSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlot_2'
    name: >-
      updateSlot(string, string, SitePatchResource, string, RequestOptionsBase,
      ServiceCallback<Site>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlot_1'
    name: >-
      updateSlot(string, string, SitePatchResource, string,
      ServiceCallback<Site>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type:
            - '@azure/arm-appservice.SitePatchResource'
          description: A JSON representation of the app properties. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.Site>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames'
    name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the names of application settings and connection string that
      remain with the slot during

      swap operation.
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotConfigNames
          type:
            - '@azure/arm-appservice.SlotConfigNamesResource'
          description: Names of application settings and connection strings. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSlotConfigurationNamesResponse>
        description: Promise<Models.WebAppsUpdateSlotConfigurationNamesResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_2'
    name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      RequestOptionsBase, ServiceCallback<SlotConfigNamesResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, options:
        RequestOptionsBase, callback: ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotConfigNames
          type:
            - '@azure/arm-appservice.SlotConfigNamesResource'
          description: Names of application settings and connection strings. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotConfigNamesResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_1'
    name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      ServiceCallback<SlotConfigNamesResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, callback:
        ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotConfigNames
          type:
            - '@azure/arm-appservice.SlotConfigNamesResource'
          description: Names of application settings and connection strings. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SlotConfigNamesResource>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControl'
    name: >-
      updateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSourceControlResponse>
        description: Promise<Models.WebAppsUpdateSourceControlResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControl_2'
    name: >-
      updateSourceControl(string, string, SiteSourceControl, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, options: RequestOptionsBase,
        callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControl_1'
    name: >-
      updateSourceControl(string, string, SiteSourceControl,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot'
    name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the source control configuration of an app.
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSourceControlSlotResponse>
        description: Promise<Models.WebAppsUpdateSourceControlSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot_2'
    name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      RequestOptionsBase, ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot_1'
    name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      ServiceCallback<SiteSourceControl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - '@azure/arm-appservice.SiteSourceControl'
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SiteSourceControl>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection'
    name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Integrates this Web App with a Virtual Network. This requires that 1)
      "swiftSupported" is true

      when doing a GET against this resource, and 2) that the target Subnet has
      already been

      delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionResponse>
        description: Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_2'
    name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      RequestOptionsBase, ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, options:
        RequestOptionsBase, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_1'
    name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot'
    name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Integrates this Web App with a Virtual Network. This requires that 1)
      "swiftSupported" is true

      when doing a GET against this resource, and 2) that the target Subnet has
      already been

      delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse>
        description: Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_2'
    name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_1'
    name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, ServiceCallback<SwiftVirtualNetwork>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.SwiftVirtualNetwork'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnection'
    name: >-
      updateVnetConnection(string, string, string, VnetInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties

      (PATCH).
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateVnetConnectionResponse>
        description: Promise<Models.WebAppsUpdateVnetConnectionResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnection_2'
    name: >-
      updateVnetConnection(string, string, string, VnetInfo, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, options:
        RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnection_1'
    name: >-
      updateVnetConnection(string, string, string, VnetInfo,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway'
    name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateVnetConnectionGatewayResponse>
        description: Promise<Models.WebAppsUpdateVnetConnectionGatewayResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_2'
    name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_1'
    name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot'
    name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateVnetConnectionGatewaySlotResponse>
        description: Promise<Models.WebAppsUpdateVnetConnectionGatewaySlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_2'
    name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, RequestOptionsBase, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_1'
    name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, ServiceCallback<VnetGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetGateway'
          description: The properties to update this gateway with.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetGateway>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot'
    name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties

      (PATCH).
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebAppsUpdateVnetConnectionSlotResponse>
        description: Promise<Models.WebAppsUpdateVnetConnectionSlotResponse>
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_2'
    name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_1'
    name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      ServiceCallback<VnetInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - '@azure/arm-appservice.VnetInfo'
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appservice.VnetInfo>
          description: |
            The callback
    package: '@azure/arm-appservice'
  - uid: '@azure/arm-appservice.WebApps.constructor'
    name: WebApps(WebSiteManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a WebApps.
    syntax:
      content: 'new WebApps(client: WebSiteManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-appservice.WebSiteManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-appservice'
references:
  - uid: '@azure/arm-appservice.WebSiteManagementClientContext'
    name: WebSiteManagementClientContext
    spec.typeScript:
      - name: WebSiteManagementClientContext
        fullName: WebSiteManagementClientContext
        uid: '@azure/arm-appservice.WebSiteManagementClientContext'
  - uid: '@azure/arm-appservice.PremierAddOn'
    name: PremierAddOn
    spec.typeScript:
      - name: PremierAddOn
        fullName: PremierAddOn
        uid: '@azure/arm-appservice.PremierAddOn'
  - uid: ServiceCallback<@azure/arm-appservice.PremierAddOn>
    name: PremierAddOn>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PremierAddOn
        fullName: PremierAddOn
        uid: '@azure/arm-appservice.PremierAddOn'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.CustomHostnameAnalysisResult>
    name: CustomHostnameAnalysisResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CustomHostnameAnalysisResult
        fullName: CustomHostnameAnalysisResult
        uid: '@azure/arm-appservice.CustomHostnameAnalysisResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsAnalyzeCustomHostnameOptionalParams'
    name: WebAppsAnalyzeCustomHostnameOptionalParams
    spec.typeScript:
      - name: WebAppsAnalyzeCustomHostnameOptionalParams
        fullName: WebAppsAnalyzeCustomHostnameOptionalParams
        uid: '@azure/arm-appservice.WebAppsAnalyzeCustomHostnameOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsAnalyzeCustomHostnameSlotOptionalParams'
    name: WebAppsAnalyzeCustomHostnameSlotOptionalParams
    spec.typeScript:
      - name: WebAppsAnalyzeCustomHostnameSlotOptionalParams
        fullName: WebAppsAnalyzeCustomHostnameSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsAnalyzeCustomHostnameSlotOptionalParams'
  - uid: '@azure/arm-appservice.CsmSlotEntity'
    name: CsmSlotEntity
    spec.typeScript:
      - name: CsmSlotEntity
        fullName: CsmSlotEntity
        uid: '@azure/arm-appservice.CsmSlotEntity'
  - uid: '@azure/arm-appservice.BackupRequest'
    name: BackupRequest
    spec.typeScript:
      - name: BackupRequest
        fullName: BackupRequest
        uid: '@azure/arm-appservice.BackupRequest'
  - uid: ServiceCallback<@azure/arm-appservice.BackupItem>
    name: BackupItem>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupItem
        fullName: BackupItem
        uid: '@azure/arm-appservice.BackupItem'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.FunctionEnvelope'
    name: FunctionEnvelope
    spec.typeScript:
      - name: FunctionEnvelope
        fullName: FunctionEnvelope
        uid: '@azure/arm-appservice.FunctionEnvelope'
  - uid: '@azure/arm-appservice.MSDeploy'
    name: MSDeploy
    spec.typeScript:
      - name: MSDeploy
        fullName: MSDeploy
        uid: '@azure/arm-appservice.MSDeploy'
  - uid: '@azure/arm-appservice.Site'
    name: Site
    spec.typeScript:
      - name: Site
        fullName: Site
        uid: '@azure/arm-appservice.Site'
  - uid: '@azure/arm-appservice.SiteSourceControl'
    name: SiteSourceControl
    spec.typeScript:
      - name: SiteSourceControl
        fullName: SiteSourceControl
        uid: '@azure/arm-appservice.SiteSourceControl'
  - uid: '@azure/arm-appservice.MigrateMySqlRequest'
    name: MigrateMySqlRequest
    spec.typeScript:
      - name: MigrateMySqlRequest
        fullName: MigrateMySqlRequest
        uid: '@azure/arm-appservice.MigrateMySqlRequest'
  - uid: '@azure/arm-appservice.StorageMigrationOptions'
    name: StorageMigrationOptions
    spec.typeScript:
      - name: StorageMigrationOptions
        fullName: StorageMigrationOptions
        uid: '@azure/arm-appservice.StorageMigrationOptions'
  - uid: '@azure/arm-appservice.RestoreRequest'
    name: RestoreRequest
    spec.typeScript:
      - name: RestoreRequest
        fullName: RestoreRequest
        uid: '@azure/arm-appservice.RestoreRequest'
  - uid: '@azure/arm-appservice.DeletedAppRestoreRequest'
    name: DeletedAppRestoreRequest
    spec.typeScript:
      - name: DeletedAppRestoreRequest
        fullName: DeletedAppRestoreRequest
        uid: '@azure/arm-appservice.DeletedAppRestoreRequest'
  - uid: '@azure/arm-appservice.SnapshotRestoreRequest'
    name: SnapshotRestoreRequest
    spec.typeScript:
      - name: SnapshotRestoreRequest
        fullName: SnapshotRestoreRequest
        uid: '@azure/arm-appservice.SnapshotRestoreRequest'
  - uid: '@azure/arm-appservice.Deployment'
    name: Deployment
    spec.typeScript:
      - name: Deployment
        fullName: Deployment
        uid: '@azure/arm-appservice.Deployment'
  - uid: ServiceCallback<@azure/arm-appservice.Deployment>
    name: Deployment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Deployment
        fullName: Deployment
        uid: '@azure/arm-appservice.Deployment'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.SiteConfigResource'
    name: SiteConfigResource
    spec.typeScript:
      - name: SiteConfigResource
        fullName: SiteConfigResource
        uid: '@azure/arm-appservice.SiteConfigResource'
  - uid: ServiceCallback<@azure/arm-appservice.SiteConfigResource>
    name: SiteConfigResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteConfigResource
        fullName: SiteConfigResource
        uid: '@azure/arm-appservice.SiteConfigResource'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.Identifier'
    name: Identifier
    spec.typeScript:
      - name: Identifier
        fullName: Identifier
        uid: '@azure/arm-appservice.Identifier'
  - uid: ServiceCallback<@azure/arm-appservice.Identifier>
    name: Identifier>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Identifier
        fullName: Identifier
        uid: '@azure/arm-appservice.Identifier'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.HostNameBinding'
    name: HostNameBinding
    spec.typeScript:
      - name: HostNameBinding
        fullName: HostNameBinding
        uid: '@azure/arm-appservice.HostNameBinding'
  - uid: ServiceCallback<@azure/arm-appservice.HostNameBinding>
    name: HostNameBinding>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HostNameBinding
        fullName: HostNameBinding
        uid: '@azure/arm-appservice.HostNameBinding'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.HybridConnection'
    name: HybridConnection
    spec.typeScript:
      - name: HybridConnection
        fullName: HybridConnection
        uid: '@azure/arm-appservice.HybridConnection'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnection>
    name: HybridConnection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnection
        fullName: HybridConnection
        uid: '@azure/arm-appservice.HybridConnection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.PublicCertificate'
    name: PublicCertificate
    spec.typeScript:
      - name: PublicCertificate
        fullName: PublicCertificate
        uid: '@azure/arm-appservice.PublicCertificate'
  - uid: ServiceCallback<@azure/arm-appservice.PublicCertificate>
    name: PublicCertificate>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PublicCertificate
        fullName: PublicCertificate
        uid: '@azure/arm-appservice.PublicCertificate'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.RelayServiceConnectionEntity'
    name: RelayServiceConnectionEntity
    spec.typeScript:
      - name: RelayServiceConnectionEntity
        fullName: RelayServiceConnectionEntity
        uid: '@azure/arm-appservice.RelayServiceConnectionEntity'
  - uid: ServiceCallback<@azure/arm-appservice.RelayServiceConnectionEntity>
    name: RelayServiceConnectionEntity>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RelayServiceConnectionEntity
        fullName: RelayServiceConnectionEntity
        uid: '@azure/arm-appservice.RelayServiceConnectionEntity'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.SwiftVirtualNetwork'
    name: SwiftVirtualNetwork
    spec.typeScript:
      - name: SwiftVirtualNetwork
        fullName: SwiftVirtualNetwork
        uid: '@azure/arm-appservice.SwiftVirtualNetwork'
  - uid: ServiceCallback<@azure/arm-appservice.SwiftVirtualNetwork>
    name: SwiftVirtualNetwork>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SwiftVirtualNetwork
        fullName: SwiftVirtualNetwork
        uid: '@azure/arm-appservice.SwiftVirtualNetwork'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.VnetInfo'
    name: VnetInfo
    spec.typeScript:
      - name: VnetInfo
        fullName: VnetInfo
        uid: '@azure/arm-appservice.VnetInfo'
  - uid: ServiceCallback<@azure/arm-appservice.VnetInfo>
    name: VnetInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetInfo
        fullName: VnetInfo
        uid: '@azure/arm-appservice.VnetInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.VnetGateway'
    name: VnetGateway
    spec.typeScript:
      - name: VnetGateway
        fullName: VnetGateway
        uid: '@azure/arm-appservice.VnetGateway'
  - uid: ServiceCallback<@azure/arm-appservice.VnetGateway>
    name: VnetGateway>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetGateway
        fullName: VnetGateway
        uid: '@azure/arm-appservice.VnetGateway'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsDeleteMethodOptionalParams'
    name: WebAppsDeleteMethodOptionalParams
    spec.typeScript:
      - name: WebAppsDeleteMethodOptionalParams
        fullName: WebAppsDeleteMethodOptionalParams
        uid: '@azure/arm-appservice.WebAppsDeleteMethodOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsDeleteSlotOptionalParams'
    name: WebAppsDeleteSlotOptionalParams
    spec.typeScript:
      - name: WebAppsDeleteSlotOptionalParams
        fullName: WebAppsDeleteSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsDeleteSlotOptionalParams'
  - uid: ServiceCallback<@azure/arm-appservice.RestoreRequest>
    name: RestoreRequest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RestoreRequest
        fullName: RestoreRequest
        uid: '@azure/arm-appservice.RestoreRequest'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.Site>
    name: Site>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Site
        fullName: Site
        uid: '@azure/arm-appservice.Site'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteAuthSettings>
    name: SiteAuthSettings>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteAuthSettings
        fullName: SiteAuthSettings
        uid: '@azure/arm-appservice.SiteAuthSettings'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.BackupRequest>
    name: BackupRequest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupRequest
        fullName: BackupRequest
        uid: '@azure/arm-appservice.BackupRequest'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ContinuousWebJob>
    name: ContinuousWebJob>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContinuousWebJob
        fullName: ContinuousWebJob
        uid: '@azure/arm-appservice.ContinuousWebJob'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteLogsConfig>
    name: SiteLogsConfig>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteLogsConfig
        fullName: SiteLogsConfig
        uid: '@azure/arm-appservice.SiteLogsConfig'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.FunctionEnvelope>
    name: FunctionEnvelope>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FunctionEnvelope
        fullName: FunctionEnvelope
        uid: '@azure/arm-appservice.FunctionEnvelope'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.MSDeployLog>
    name: MSDeployLog>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MSDeployLog
        fullName: MSDeployLog
        uid: '@azure/arm-appservice.MSDeployLog'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.MSDeployStatus>
    name: MSDeployStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MSDeployStatus
        fullName: MSDeployStatus
        uid: '@azure/arm-appservice.MSDeployStatus'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessInfo>
    name: ProcessInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessInfo
        fullName: ProcessInfo
        uid: '@azure/arm-appservice.ProcessInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessModuleInfo>
    name: ProcessModuleInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessModuleInfo
        fullName: ProcessModuleInfo
        uid: '@azure/arm-appservice.ProcessModuleInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessThreadInfo>
    name: ProcessThreadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessThreadInfo
        fullName: ProcessThreadInfo
        uid: '@azure/arm-appservice.ProcessThreadInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.MigrateMySqlStatus>
    name: MigrateMySqlStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MigrateMySqlStatus
        fullName: MigrateMySqlStatus
        uid: '@azure/arm-appservice.MigrateMySqlStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/arm-appservice.NetworkTrace[]>'
    name: 'NetworkTrace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkTrace
        fullName: NetworkTrace
        uid: '@azure/arm-appservice.NetworkTrace'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/arm-appservice.PrivateAccess>
    name: PrivateAccess>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PrivateAccess
        fullName: PrivateAccess
        uid: '@azure/arm-appservice.PrivateAccess'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteExtensionInfo>
    name: SiteExtensionInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteExtensionInfo
        fullName: SiteExtensionInfo
        uid: '@azure/arm-appservice.SiteExtensionInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SitePhpErrorLogFlag>
    name: SitePhpErrorLogFlag>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SitePhpErrorLogFlag
        fullName: SitePhpErrorLogFlag
        uid: '@azure/arm-appservice.SitePhpErrorLogFlag'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteSourceControl>
    name: SiteSourceControl>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteSourceControl
        fullName: SiteSourceControl
        uid: '@azure/arm-appservice.SiteSourceControl'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.TriggeredWebJob>
    name: TriggeredWebJob>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TriggeredWebJob
        fullName: TriggeredWebJob
        uid: '@azure/arm-appservice.TriggeredWebJob'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.TriggeredJobHistory>
    name: TriggeredJobHistory>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TriggeredJobHistory
        fullName: TriggeredJobHistory
        uid: '@azure/arm-appservice.TriggeredJobHistory'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.WebJob>
    name: WebJob>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebJob
        fullName: WebJob
        uid: '@azure/arm-appservice.WebJob'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteCloneability>
    name: SiteCloneability>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteCloneability
        fullName: SiteCloneability
        uid: '@azure/arm-appservice.SiteCloneability'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.WebAppCollection>
    name: WebAppCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebAppCollection
        fullName: WebAppCollection
        uid: '@azure/arm-appservice.WebAppCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.StringDictionary>
    name: StringDictionary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StringDictionary
        fullName: StringDictionary
        uid: '@azure/arm-appservice.StringDictionary'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-appservice.AzureStoragePropertyDictionaryResource>
    name: AzureStoragePropertyDictionaryResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AzureStoragePropertyDictionaryResource
        fullName: AzureStoragePropertyDictionaryResource
        uid: '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.BackupItemCollection>
    name: BackupItemCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupItemCollection
        fullName: BackupItemCollection
        uid: '@azure/arm-appservice.BackupItemCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsListByResourceGroupOptionalParams'
    name: WebAppsListByResourceGroupOptionalParams
    spec.typeScript:
      - name: WebAppsListByResourceGroupOptionalParams
        fullName: WebAppsListByResourceGroupOptionalParams
        uid: '@azure/arm-appservice.WebAppsListByResourceGroupOptionalParams'
  - uid: >-
      ServiceCallback<@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection>
    name: SiteConfigurationSnapshotInfoCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteConfigurationSnapshotInfoCollection
        fullName: SiteConfigurationSnapshotInfoCollection
        uid: '@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SiteConfigResourceCollection>
    name: SiteConfigResourceCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteConfigResourceCollection
        fullName: SiteConfigResourceCollection
        uid: '@azure/arm-appservice.SiteConfigResourceCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ConnectionStringDictionary>
    name: ConnectionStringDictionary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConnectionStringDictionary
        fullName: ConnectionStringDictionary
        uid: '@azure/arm-appservice.ConnectionStringDictionary'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ContinuousWebJobCollection>
    name: ContinuousWebJobCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContinuousWebJobCollection
        fullName: ContinuousWebJobCollection
        uid: '@azure/arm-appservice.ContinuousWebJobCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.DeploymentCollection>
    name: DeploymentCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeploymentCollection
        fullName: DeploymentCollection
        uid: '@azure/arm-appservice.DeploymentCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.IdentifierCollection>
    name: IdentifierCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifierCollection
        fullName: IdentifierCollection
        uid: '@azure/arm-appservice.IdentifierCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.FunctionSecrets>
    name: FunctionSecrets>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FunctionSecrets
        fullName: FunctionSecrets
        uid: '@azure/arm-appservice.FunctionSecrets'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.FunctionEnvelopeCollection>
    name: FunctionEnvelopeCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FunctionEnvelopeCollection
        fullName: FunctionEnvelopeCollection
        uid: '@azure/arm-appservice.FunctionEnvelopeCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.HostNameBindingCollection>
    name: HostNameBindingCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HostNameBindingCollection
        fullName: HostNameBindingCollection
        uid: '@azure/arm-appservice.HostNameBindingCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.HybridConnectionKey>
    name: HybridConnectionKey>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: HybridConnectionKey
        fullName: HybridConnectionKey
        uid: '@azure/arm-appservice.HybridConnectionKey'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.WebAppInstanceCollection>
    name: WebAppInstanceCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebAppInstanceCollection
        fullName: WebAppInstanceCollection
        uid: '@azure/arm-appservice.WebAppInstanceCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessModuleInfoCollection>
    name: ProcessModuleInfoCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessModuleInfoCollection
        fullName: ProcessModuleInfoCollection
        uid: '@azure/arm-appservice.ProcessModuleInfoCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessThreadInfoCollection>
    name: ProcessThreadInfoCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessThreadInfoCollection
        fullName: ProcessThreadInfoCollection
        uid: '@azure/arm-appservice.ProcessThreadInfoCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ProcessInfoCollection>
    name: ProcessInfoCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProcessInfoCollection
        fullName: ProcessInfoCollection
        uid: '@azure/arm-appservice.ProcessInfoCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceMetricDefinitionCollection>
    name: ResourceMetricDefinitionCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceMetricDefinitionCollection
        fullName: ResourceMetricDefinitionCollection
        uid: '@azure/arm-appservice.ResourceMetricDefinitionCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.ResourceMetricCollection>
    name: ResourceMetricCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceMetricCollection
        fullName: ResourceMetricCollection
        uid: '@azure/arm-appservice.ResourceMetricCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsListMetricsOptionalParams'
    name: WebAppsListMetricsOptionalParams
    spec.typeScript:
      - name: WebAppsListMetricsOptionalParams
        fullName: WebAppsListMetricsOptionalParams
        uid: '@azure/arm-appservice.WebAppsListMetricsOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsListMetricsSlotOptionalParams'
    name: WebAppsListMetricsSlotOptionalParams
    spec.typeScript:
      - name: WebAppsListMetricsSlotOptionalParams
        fullName: WebAppsListMetricsSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsListMetricsSlotOptionalParams'
  - uid: ServiceCallback<@azure/arm-appservice.NetworkFeatures>
    name: NetworkFeatures>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkFeatures
        fullName: NetworkFeatures
        uid: '@azure/arm-appservice.NetworkFeatures'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.PerfMonCounterCollection>
    name: PerfMonCounterCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PerfMonCounterCollection
        fullName: PerfMonCounterCollection
        uid: '@azure/arm-appservice.PerfMonCounterCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsListPerfMonCountersOptionalParams'
    name: WebAppsListPerfMonCountersOptionalParams
    spec.typeScript:
      - name: WebAppsListPerfMonCountersOptionalParams
        fullName: WebAppsListPerfMonCountersOptionalParams
        uid: '@azure/arm-appservice.WebAppsListPerfMonCountersOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsListPerfMonCountersSlotOptionalParams'
    name: WebAppsListPerfMonCountersSlotOptionalParams
    spec.typeScript:
      - name: WebAppsListPerfMonCountersSlotOptionalParams
        fullName: WebAppsListPerfMonCountersSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsListPerfMonCountersSlotOptionalParams'
  - uid: ServiceCallback<@azure/arm-appservice.PublicCertificateCollection>
    name: PublicCertificateCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PublicCertificateCollection
        fullName: PublicCertificateCollection
        uid: '@azure/arm-appservice.PublicCertificateCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.CsmPublishingProfileOptions'
    name: CsmPublishingProfileOptions
    spec.typeScript:
      - name: CsmPublishingProfileOptions
        fullName: CsmPublishingProfileOptions
        uid: '@azure/arm-appservice.CsmPublishingProfileOptions'
  - uid: ServiceCallback<@azure/arm-appservice.SiteExtensionInfoCollection>
    name: SiteExtensionInfoCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SiteExtensionInfoCollection
        fullName: SiteExtensionInfoCollection
        uid: '@azure/arm-appservice.SiteExtensionInfoCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.PushSettings>
    name: PushSettings>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PushSettings
        fullName: PushSettings
        uid: '@azure/arm-appservice.PushSettings'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SlotConfigNamesResource>
    name: SlotConfigNamesResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SlotConfigNamesResource
        fullName: SlotConfigNamesResource
        uid: '@azure/arm-appservice.SlotConfigNamesResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SlotDifferenceCollection>
    name: SlotDifferenceCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SlotDifferenceCollection
        fullName: SlotDifferenceCollection
        uid: '@azure/arm-appservice.SlotDifferenceCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.SnapshotCollection>
    name: SnapshotCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SnapshotCollection
        fullName: SnapshotCollection
        uid: '@azure/arm-appservice.SnapshotCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.TriggeredJobHistoryCollection>
    name: TriggeredJobHistoryCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TriggeredJobHistoryCollection
        fullName: TriggeredJobHistoryCollection
        uid: '@azure/arm-appservice.TriggeredJobHistoryCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.TriggeredWebJobCollection>
    name: TriggeredWebJobCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TriggeredWebJobCollection
        fullName: TriggeredWebJobCollection
        uid: '@azure/arm-appservice.TriggeredWebJobCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appservice.CsmUsageQuotaCollection>
    name: CsmUsageQuotaCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CsmUsageQuotaCollection
        fullName: CsmUsageQuotaCollection
        uid: '@azure/arm-appservice.CsmUsageQuotaCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.WebAppsListUsagesOptionalParams'
    name: WebAppsListUsagesOptionalParams
    spec.typeScript:
      - name: WebAppsListUsagesOptionalParams
        fullName: WebAppsListUsagesOptionalParams
        uid: '@azure/arm-appservice.WebAppsListUsagesOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsListUsagesSlotOptionalParams'
    name: WebAppsListUsagesSlotOptionalParams
    spec.typeScript:
      - name: WebAppsListUsagesSlotOptionalParams
        fullName: WebAppsListUsagesSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsListUsagesSlotOptionalParams'
  - uid: 'ServiceCallback<@azure/arm-appservice.VnetInfo[]>'
    name: 'VnetInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VnetInfo
        fullName: VnetInfo
        uid: '@azure/arm-appservice.VnetInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/arm-appservice.WebJobCollection>
    name: WebJobCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebJobCollection
        fullName: WebJobCollection
        uid: '@azure/arm-appservice.WebJobCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appservice.PrivateAccess'
    name: PrivateAccess
    spec.typeScript:
      - name: PrivateAccess
        fullName: PrivateAccess
        uid: '@azure/arm-appservice.PrivateAccess'
  - uid: '@azure/arm-appservice.WebAppsRestartOptionalParams'
    name: WebAppsRestartOptionalParams
    spec.typeScript:
      - name: WebAppsRestartOptionalParams
        fullName: WebAppsRestartOptionalParams
        uid: '@azure/arm-appservice.WebAppsRestartOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsRestartSlotOptionalParams'
    name: WebAppsRestartSlotOptionalParams
    spec.typeScript:
      - name: WebAppsRestartSlotOptionalParams
        fullName: WebAppsRestartSlotOptionalParams
        uid: '@azure/arm-appservice.WebAppsRestartSlotOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsStartWebSiteNetworkTraceOptionalParams'
    name: WebAppsStartWebSiteNetworkTraceOptionalParams
    spec.typeScript:
      - name: WebAppsStartWebSiteNetworkTraceOptionalParams
        fullName: WebAppsStartWebSiteNetworkTraceOptionalParams
        uid: '@azure/arm-appservice.WebAppsStartWebSiteNetworkTraceOptionalParams'
  - uid: '@azure/arm-appservice.WebAppsStartWebSiteNetworkTraceSlotOptionalParams'
    name: WebAppsStartWebSiteNetworkTraceSlotOptionalParams
    spec.typeScript:
      - name: WebAppsStartWebSiteNetworkTraceSlotOptionalParams
        fullName: WebAppsStartWebSiteNetworkTraceSlotOptionalParams
        uid: >-
          @azure/arm-appservice.WebAppsStartWebSiteNetworkTraceSlotOptionalParams
  - uid: '@azure/arm-appservice.SitePatchResource'
    name: SitePatchResource
    spec.typeScript:
      - name: SitePatchResource
        fullName: SitePatchResource
        uid: '@azure/arm-appservice.SitePatchResource'
  - uid: '@azure/arm-appservice.StringDictionary'
    name: StringDictionary
    spec.typeScript:
      - name: StringDictionary
        fullName: StringDictionary
        uid: '@azure/arm-appservice.StringDictionary'
  - uid: '@azure/arm-appservice.SiteAuthSettings'
    name: SiteAuthSettings
    spec.typeScript:
      - name: SiteAuthSettings
        fullName: SiteAuthSettings
        uid: '@azure/arm-appservice.SiteAuthSettings'
  - uid: '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
    name: AzureStoragePropertyDictionaryResource
    spec.typeScript:
      - name: AzureStoragePropertyDictionaryResource
        fullName: AzureStoragePropertyDictionaryResource
        uid: '@azure/arm-appservice.AzureStoragePropertyDictionaryResource'
  - uid: '@azure/arm-appservice.ConnectionStringDictionary'
    name: ConnectionStringDictionary
    spec.typeScript:
      - name: ConnectionStringDictionary
        fullName: ConnectionStringDictionary
        uid: '@azure/arm-appservice.ConnectionStringDictionary'
  - uid: '@azure/arm-appservice.SiteLogsConfig'
    name: SiteLogsConfig
    spec.typeScript:
      - name: SiteLogsConfig
        fullName: SiteLogsConfig
        uid: '@azure/arm-appservice.SiteLogsConfig'
  - uid: '@azure/arm-appservice.PremierAddOnPatchResource'
    name: PremierAddOnPatchResource
    spec.typeScript:
      - name: PremierAddOnPatchResource
        fullName: PremierAddOnPatchResource
        uid: '@azure/arm-appservice.PremierAddOnPatchResource'
  - uid: '@azure/arm-appservice.PushSettings'
    name: PushSettings
    spec.typeScript:
      - name: PushSettings
        fullName: PushSettings
        uid: '@azure/arm-appservice.PushSettings'
  - uid: '@azure/arm-appservice.SlotConfigNamesResource'
    name: SlotConfigNamesResource
    spec.typeScript:
      - name: SlotConfigNamesResource
        fullName: SlotConfigNamesResource
        uid: '@azure/arm-appservice.SlotConfigNamesResource'
