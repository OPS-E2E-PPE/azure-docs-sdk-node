### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews'
    name: Reviews
    fullName: Reviews
    children:
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1'
      - >-
        @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
      - >-
        @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
      - >-
        @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Reviews.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame'
    name: 'addVideoFrame(string, string, Models.ReviewsAddVideoFrameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The reviews created would show up for Reviewers on your team. As Reviewers
      complete reviewing,

      results of the Review would be POSTED (i.e. HTTP POST) on the specified
      CallBackEndpoint.

      <h3>CallBack Schemas </h3>

      <h4>Review Completion CallBack Sample</h4>

      <p>

      {<br/>

      "ReviewId": "<Review Id>",<br/>

      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

      "ModifiedBy": "<Name of the Reviewer>",<br/>

      "CallBackType": "Review",<br/>

      "ContentId": "<The ContentId that was specified input>",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",<br/>

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      },<br/>

      "ReviewerResultTags": {<br/>

      "a": "False",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>.
    syntax:
      content: >-
        function addVideoFrame(teamName: string, reviewId: string, options?:
        Models.ReviewsAddVideoFrameOptionalParams)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - Models.ReviewsAddVideoFrameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_2'
    name: >-
      addVideoFrame(string, string, ReviewsAddVideoFrameOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrame(teamName: string, reviewId: string, options:
        ReviewsAddVideoFrameOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_1'
    name: 'addVideoFrame(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrame(teamName: string, reviewId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream'
    name: >-
      addVideoFrameStream(string, string, string, msRest.HttpRequestBody,
      string, Models.ReviewsAddVideoFrameStreamOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use this method to add frames for a video review.Timescale: This parameter
      is a factor which is

      used to convert the timestamp on a frame into milliseconds. Timescale is
      provided in the output

      of the Content Moderator video media processor on the Azure Media Services
      platform.Timescale in

      the Video Moderation output is Ticks/Second.
    syntax:
      content: >-
        function addVideoFrameStream(contentType: string, teamName: string,
        reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata:
        string, options?: Models.ReviewsAddVideoFrameStreamOptionalParams)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: Zip file containing frame images.
        - id: frameMetadata
          type:
            - string
          description: Metadata of the frame.
        - id: options
          type:
            - Models.ReviewsAddVideoFrameStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2'
    name: >-
      addVideoFrameStream(string, string, string, msRest.HttpRequestBody,
      string, ReviewsAddVideoFrameStreamOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrameStream(contentType: string, teamName: string,
        reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata:
        string, options: ReviewsAddVideoFrameStreamOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: Zip file containing frame images.
        - id: frameMetadata
          type:
            - string
          description: Metadata of the frame.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1'
    name: >-
      addVideoFrameStream(string, string, string, msRest.HttpRequestBody,
      string, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrameStream(contentType: string, teamName: string,
        reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: Zip file containing frame images.
        - id: frameMetadata
          type:
            - string
          description: Metadata of the frame.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl'
    name: >-
      addVideoFrameUrl(string, string, string, VideoFrameBodyItem[],
      Models.ReviewsAddVideoFrameUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use this method to add frames for a video review.Timescale: This parameter
      is a factor which is

      used to convert the timestamp on a frame into milliseconds. Timescale is
      provided in the output

      of the Content Moderator video media processor on the Azure Media Services
      platform.Timescale in

      the Video Moderation output is Ticks/Second.
    syntax:
      content: >-
        function addVideoFrameUrl(contentType: string, teamName: string,
        reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?:
        Models.ReviewsAddVideoFrameUrlOptionalParams)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Body for add video frames API
        - id: options
          type:
            - Models.ReviewsAddVideoFrameUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2'
    name: >-
      addVideoFrameUrl(string, string, string, VideoFrameBodyItem[],
      ReviewsAddVideoFrameUrlOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrameUrl(contentType: string, teamName: string,
        reviewId: string, videoFrameBody: VideoFrameBodyItem[], options:
        ReviewsAddVideoFrameUrlOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Body for add video frames API
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1'
    name: >-
      addVideoFrameUrl(string, string, string, VideoFrameBodyItem[],
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoFrameUrl(contentType: string, teamName: string,
        reviewId: string, videoFrameBody: VideoFrameBodyItem[], callback:
        ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Body for add video frames API
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript'
    name: >-
      addVideoTranscript(string, string, msRest.HttpRequestBody,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This API adds a transcript file (text version of all the words spoken in a
      video) to a video

      review. The file should be a valid WebVTT format.
    syntax:
      content: >-
        function addVideoTranscript(teamName: string, reviewId: string, vTTfile:
        msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: Transcript file of the video.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2'
    name: >-
      addVideoTranscript(string, string, msRest.HttpRequestBody,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoTranscript(teamName: string, reviewId: string, vTTfile:
        msRest.HttpRequestBody, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: Transcript file of the video.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1'
    name: >-
      addVideoTranscript(string, string, msRest.HttpRequestBody,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoTranscript(teamName: string, reviewId: string, vTTfile:
        msRest.HttpRequestBody, callback: ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: Transcript file of the video.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
    name: >-
      addVideoTranscriptModerationResult(string, string, string,
      TranscriptModerationBodyItem[], msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This API adds a transcript screen text result file for a video review.
      Transcript screen text

      result file is a result of Screen Text API . In order to generate
      transcript screen text result

      file , a transcript file has to be screened for profanity using Screen
      Text API.
    syntax:
      content: >-
        function addVideoTranscriptModerationResult(contentType: string,
        teamName: string, reviewId: string, transcriptModerationBody:
        TranscriptModerationBodyItem[], options?: msRest.RequestOptionsBase)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: transcriptModerationBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
          description: Body for add video transcript moderation result API
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
    name: >-
      addVideoTranscriptModerationResult(string, string, string,
      TranscriptModerationBodyItem[], RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoTranscriptModerationResult(contentType: string,
        teamName: string, reviewId: string, transcriptModerationBody:
        TranscriptModerationBodyItem[], options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: transcriptModerationBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
          description: Body for add video transcript moderation result API
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
    name: >-
      addVideoTranscriptModerationResult(string, string, string,
      TranscriptModerationBodyItem[], ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addVideoTranscriptModerationResult(contentType: string,
        teamName: string, reviewId: string, transcriptModerationBody:
        TranscriptModerationBodyItem[], callback: ServiceCallback<void>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: transcriptModerationBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
          description: Body for add video transcript moderation result API
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob'
    name: >-
      createJob(string, Models.ContentType, string, string,
      Models.JobContentType, Content, Models.ReviewsCreateJobOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A job Id will be returned for the content posted on this endpoint.

      Once the content is evaluated against the Workflow provided the review
      will be created or

      ignored based on the workflow expression.


      <h3>CallBack Schemas </h3>


      <p>

      <h4>Job Completion CallBack Sample</h4><br/>


      {<br/>

      "JobId": "<Job Id>,<br/>

      "ReviewId": "<Review Id, if the Job resulted in a Review to be
      created>",<br/>

      "WorkFlowId": "default",<br/>

      "Status": "<This will be one of Complete, InProgress, Error>",<br/>

      "ContentType": "Image",<br/>

      "ContentId": "<This is the ContentId that was specified on input>",<br/>

      "CallBackType": "Job",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",<br/>

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>

      <p>

      <h4>Review Completion CallBack Sample</h4><br/>


      {

      "ReviewId": "<Review Id>",<br/>

      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

      "ModifiedBy": "<Name of the Reviewer>",<br/>

      "CallBackType": "Review",<br/>

      "ContentId": "<The ContentId that was specified input>",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      },<br/>

      "ReviewerResultTags": {<br/>

      "a": "False",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>.
    syntax:
      content: >-
        function createJob(teamName: string, contentType: Models.ContentType,
        contentId: string, workflowName: string, jobContentType:
        Models.JobContentType, content: Content, options?:
        Models.ReviewsCreateJobOptionalParams)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: contentType
          type:
            - Models.ContentType
          description: >-
            Image, Text or Video. Possible values include: 'Image', 'Text',
            'Video'
        - id: contentId
          type:
            - string
          description: Id/Name to identify the content submitted.
        - id: workflowName
          type:
            - string
          description: Workflow Name that you want to invoke.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: |-
            The content type. Possible values include: 'application/json',
            'image/jpeg'
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Content to evaluate.
        - id: options
          type:
            - Models.ReviewsCreateJobOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateJobResponse>
        description: Promise<Models.ReviewsCreateJobResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob_2'
    name: >-
      createJob(string, Models.ContentType, string, string,
      Models.JobContentType, Content, ReviewsCreateJobOptionalParams,
      ServiceCallback<JobId>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createJob(teamName: string, contentType: Models.ContentType,
        contentId: string, workflowName: string, jobContentType:
        Models.JobContentType, content: Content, options:
        ReviewsCreateJobOptionalParams, callback: ServiceCallback<JobId>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: contentType
          type:
            - Models.ContentType
          description: >-
            Image, Text or Video. Possible values include: 'Image', 'Text',
            'Video'
        - id: contentId
          type:
            - string
          description: Id/Name to identify the content submitted.
        - id: workflowName
          type:
            - string
          description: Workflow Name that you want to invoke.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: |-
            The content type. Possible values include: 'application/json',
            'image/jpeg'
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Content to evaluate.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob_1'
    name: >-
      createJob(string, Models.ContentType, string, string,
      Models.JobContentType, Content, ServiceCallback<JobId>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createJob(teamName: string, contentType: Models.ContentType,
        contentId: string, workflowName: string, jobContentType:
        Models.JobContentType, content: Content, callback:
        ServiceCallback<JobId>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: contentType
          type:
            - Models.ContentType
          description: >-
            Image, Text or Video. Possible values include: 'Image', 'Text',
            'Video'
        - id: contentId
          type:
            - string
          description: Id/Name to identify the content submitted.
        - id: workflowName
          type:
            - string
          description: Workflow Name that you want to invoke.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: |-
            The content type. Possible values include: 'application/json',
            'image/jpeg'
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Content to evaluate.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews'
    name: >-
      createReviews(string, string, CreateReviewBodyItem[],
      Models.ReviewsCreateReviewsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The reviews created would show up for Reviewers on your team. As Reviewers
      complete reviewing,

      results of the Review would be POSTED (i.e. HTTP POST) on the specified
      CallBackEndpoint.

      <h3>CallBack Schemas </h3>

      <h4>Review Completion CallBack Sample</h4>

      <p>

      {<br/>

      "ReviewId": "<Review Id>",<br/>

      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

      "ModifiedBy": "<Name of the Reviewer>",<br/>

      "CallBackType": "Review",<br/>

      "ContentId": "<The ContentId that was specified input>",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",<br/>

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      },<br/>

      "ReviewerResultTags": {<br/>

      "a": "False",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>.
    syntax:
      content: >-
        function createReviews(urlContentType: string, teamName: string,
        createReviewBody: CreateReviewBodyItem[], options?:
        Models.ReviewsCreateReviewsOptionalParams)
      parameters:
        - id: urlContentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Body for create reviews API
        - id: options
          type:
            - Models.ReviewsCreateReviewsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateReviewsResponse>
        description: Promise<Models.ReviewsCreateReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_2'
    name: >-
      createReviews(string, string, CreateReviewBodyItem[],
      ReviewsCreateReviewsOptionalParams, ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createReviews(urlContentType: string, teamName: string,
        createReviewBody: CreateReviewBodyItem[], options:
        ReviewsCreateReviewsOptionalParams, callback: ServiceCallback<string[]>)
      parameters:
        - id: urlContentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Body for create reviews API
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_1'
    name: >-
      createReviews(string, string, CreateReviewBodyItem[],
      ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createReviews(urlContentType: string, teamName: string,
        createReviewBody: CreateReviewBodyItem[], callback:
        ServiceCallback<string[]>)
      parameters:
        - id: urlContentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Body for create reviews API
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews'
    name: >-
      createVideoReviews(string, string, CreateVideoReviewsBodyItem[],
      Models.ReviewsCreateVideoReviewsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The reviews created would show up for Reviewers on your team. As Reviewers
      complete reviewing,

      results of the Review would be POSTED (i.e. HTTP POST) on the specified
      CallBackEndpoint.

      <h3>CallBack Schemas </h3>

      <h4>Review Completion CallBack Sample</h4>

      <p>

      {<br/>

      "ReviewId": "<Review Id>",<br/>

      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

      "ModifiedBy": "<Name of the Reviewer>",<br/>

      "CallBackType": "Review",<br/>

      "ContentId": "<The ContentId that was specified input>",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",<br/>

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      },<br/>

      "ReviewerResultTags": {<br/>

      "a": "False",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>.
    syntax:
      content: >-
        function createVideoReviews(contentType: string, teamName: string,
        createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?:
        Models.ReviewsCreateVideoReviewsOptionalParams)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createVideoReviewsBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
          description: Body for create reviews API
        - id: options
          type:
            - Models.ReviewsCreateVideoReviewsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateVideoReviewsResponse>
        description: Promise<Models.ReviewsCreateVideoReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_2'
    name: >-
      createVideoReviews(string, string, CreateVideoReviewsBodyItem[],
      ReviewsCreateVideoReviewsOptionalParams, ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createVideoReviews(contentType: string, teamName: string,
        createVideoReviewsBody: CreateVideoReviewsBodyItem[], options:
        ReviewsCreateVideoReviewsOptionalParams, callback:
        ServiceCallback<string[]>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createVideoReviewsBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
          description: Body for create reviews API
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_1'
    name: >-
      createVideoReviews(string, string, CreateVideoReviewsBodyItem[],
      ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createVideoReviews(contentType: string, teamName: string,
        createVideoReviewsBody: CreateVideoReviewsBodyItem[], callback:
        ServiceCallback<string[]>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createVideoReviewsBody
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
          description: Body for create reviews API
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails'
    name: 'getJobDetails(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the Job Details for a Job Id.
    syntax:
      content: >-
        function getJobDetails(teamName: string, jobId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: jobId
          type:
            - string
          description: Id of the job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetJobDetailsResponse>
        description: Promise<Models.ReviewsGetJobDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_2'
    name: 'getJobDetails(string, string, RequestOptionsBase, ServiceCallback<Job>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getJobDetails(teamName: string, jobId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Job>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: jobId
          type:
            - string
          description: Id of the job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_1'
    name: 'getJobDetails(string, string, ServiceCallback<Job>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getJobDetails(teamName: string, jobId: string, callback:
        ServiceCallback<Job>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: jobId
          type:
            - string
          description: Id of the job.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview'
    name: 'getReview(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns review details for the review Id passed.
    syntax:
      content: >-
        function getReview(teamName: string, reviewId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetReviewResponse>
        description: Promise<Models.ReviewsGetReviewResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview_2'
    name: 'getReview(string, string, RequestOptionsBase, ServiceCallback<Review>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReview(teamName: string, reviewId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Review>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview_1'
    name: 'getReview(string, string, ServiceCallback<Review>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReview(teamName: string, reviewId: string, callback:
        ServiceCallback<Review>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames'
    name: 'getVideoFrames(string, string, Models.ReviewsGetVideoFramesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The reviews created would show up for Reviewers on your team. As Reviewers
      complete reviewing,

      results of the Review would be POSTED (i.e. HTTP POST) on the specified
      CallBackEndpoint.

      <h3>CallBack Schemas </h3>

      <h4>Review Completion CallBack Sample</h4>

      <p>

      {<br/>

      "ReviewId": "<Review Id>",<br/>

      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

      "ModifiedBy": "<Name of the Reviewer>",<br/>

      "CallBackType": "Review",<br/>

      "ContentId": "<The ContentId that was specified input>",<br/>

      "Metadata": {<br/>

      "adultscore": "0.xxx",<br/>

      "a": "False",<br/>

      "racyscore": "0.xxx",<br/>

      "r": "True"<br/>

      },<br/>

      "ReviewerResultTags": {<br/>

      "a": "False",<br/>

      "r": "True"<br/>

      }<br/>

      }<br/>


      </p>.
    syntax:
      content: >-
        function getVideoFrames(teamName: string, reviewId: string, options?:
        Models.ReviewsGetVideoFramesOptionalParams)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - Models.ReviewsGetVideoFramesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetVideoFramesResponse>
        description: Promise<Models.ReviewsGetVideoFramesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_2'
    name: >-
      getVideoFrames(string, string, ReviewsGetVideoFramesOptionalParams,
      ServiceCallback<Frames>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVideoFrames(teamName: string, reviewId: string, options:
        ReviewsGetVideoFramesOptionalParams, callback: ServiceCallback<Frames>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_1'
    name: 'getVideoFrames(string, string, ServiceCallback<Frames>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVideoFrames(teamName: string, reviewId: string, callback:
        ServiceCallback<Frames>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview'
    name: 'publishVideoReview(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Publish video review to make it available for review.
    syntax:
      content: >-
        function publishVideoReview(teamName: string, reviewId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_2'
    name: >-
      publishVideoReview(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function publishVideoReview(teamName: string, reviewId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_1'
    name: 'publishVideoReview(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function publishVideoReview(teamName: string, reviewId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.constructor'
    name: Reviews(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Reviews.
    syntax:
      content: 'new Reviews(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: >-
          @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams
    name: ReviewsAddVideoFrameOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameOptionalParams
        fullName: ReviewsAddVideoFrameOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams
    name: ReviewsAddVideoFrameStreamOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameStreamOptionalParams
        fullName: ReviewsAddVideoFrameStreamOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams
  - uid: '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
    name: 'VideoFrameBodyItem[]'
    spec.typeScript:
      - name: VideoFrameBodyItem
        fullName: VideoFrameBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams
    name: ReviewsAddVideoFrameUrlOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameUrlOptionalParams
        fullName: ReviewsAddVideoFrameUrlOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams
  - uid: '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]'
    name: 'TranscriptModerationBodyItem[]'
    spec.typeScript:
      - name: TranscriptModerationBodyItem
        fullName: TranscriptModerationBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-contentmoderator.Content'
    name: Content
    spec.typeScript:
      - name: Content
        fullName: Content
        uid: '@azure/cognitiveservices-contentmoderator.Content'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
    name: JobId>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: JobId
        fullName: JobId
        uid: '@azure/cognitiveservices-contentmoderator.JobId'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams'
    name: ReviewsCreateJobOptionalParams
    spec.typeScript:
      - name: ReviewsCreateJobOptionalParams
        fullName: ReviewsCreateJobOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams
  - uid: '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
    name: 'CreateReviewBodyItem[]'
    spec.typeScript:
      - name: CreateReviewBodyItem
        fullName: CreateReviewBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams
    name: ReviewsCreateReviewsOptionalParams
    spec.typeScript:
      - name: ReviewsCreateReviewsOptionalParams
        fullName: ReviewsCreateReviewsOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams
  - uid: '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]'
    name: 'CreateVideoReviewsBodyItem[]'
    spec.typeScript:
      - name: CreateVideoReviewsBodyItem
        fullName: CreateVideoReviewsBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams
    name: ReviewsCreateVideoReviewsOptionalParams
    spec.typeScript:
      - name: ReviewsCreateVideoReviewsOptionalParams
        fullName: ReviewsCreateVideoReviewsOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
    name: Job>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Job
        fullName: Job
        uid: '@azure/cognitiveservices-contentmoderator.Job'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
    name: Review>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Review
        fullName: Review
        uid: '@azure/cognitiveservices-contentmoderator.Review'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
    name: Frames>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Frames
        fullName: Frames
        uid: '@azure/cognitiveservices-contentmoderator.Frames'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams
    name: ReviewsGetVideoFramesOptionalParams
    spec.typeScript:
      - name: ReviewsGetVideoFramesOptionalParams
        fullName: ReviewsGetVideoFramesOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams
