### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImageLists'
    name: ListManagementImageLists
    fullName: ListManagementImageLists
    children:
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.create
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.create_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.create_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.constructor
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.update
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.update_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImageLists.update_1
    langs:
      - typeScript
    type: class
    summary: Class representing a ListManagementImageLists.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImageLists.create'
    name: 'create(string, Body, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an image list.
    syntax:
      content: >-
        function create(contentType: string, body: Body, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsCreateResponse>
        description: Promise<Models.ListManagementImageListsCreateResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.create_2
    name: 'create(string, Body, RequestOptionsBase, ServiceCallback<ImageList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentType: string, body: Body, options:
        RequestOptionsBase, callback: ServiceCallback<ImageList>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.create_1
    name: 'create(string, Body, ServiceCallback<ImageList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentType: string, body: Body, callback:
        ServiceCallback<ImageList>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes image list with the list Id equal to list Id passed.
    syntax:
      content: >-
        function deleteMethod(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsDeleteMethodResponse>
        description: Promise<Models.ListManagementImageListsDeleteMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod_2
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.deleteMethod_1
    name: 'deleteMethod(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(listId: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists
    name: getAllImageLists(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the Image Lists.
    syntax:
      content: 'function getAllImageLists(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsGetAllImageListsResponse>
        description: Promise<Models.ListManagementImageListsGetAllImageListsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists_2
    name: 'getAllImageLists(RequestOptionsBase, ServiceCallback<ImageList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllImageLists(options: RequestOptionsBase, callback:
        ServiceCallback<ImageList[]>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getAllImageLists_1
    name: 'getAllImageLists(ServiceCallback<ImageList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllImageLists(callback: ServiceCallback<ImageList[]>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails
    name: 'getDetails(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the details of the image list with list Id equal to list Id
      passed.
    syntax:
      content: 'function getDetails(listId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsGetDetailsResponse>
        description: Promise<Models.ListManagementImageListsGetDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails_2
    name: 'getDetails(string, RequestOptionsBase, ServiceCallback<ImageList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImageList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.getDetails_1
    name: 'getDetails(string, ServiceCallback<ImageList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(listId: string, callback:
        ServiceCallback<ImageList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.constructor
    name: ListManagementImageLists(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ListManagementImageLists.
    syntax:
      content: 'new ListManagementImageLists(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod
    name: 'refreshIndexMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Refreshes the index of the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsRefreshIndexMethodResponse>
        description: Promise<Models.ListManagementImageListsRefreshIndexMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod_2
    name: >-
      refreshIndexMethod(string, RequestOptionsBase,
      ServiceCallback<RefreshIndex>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.refreshIndexMethod_1
    name: 'refreshIndexMethod(string, ServiceCallback<RefreshIndex>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, callback:
        ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImageLists.update'
    name: 'update(string, string, Body, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an image list with list Id equal to list Id passed.
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageListsUpdateResponse>
        description: Promise<Models.ListManagementImageListsUpdateResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.update_2
    name: >-
      update(string, string, Body, RequestOptionsBase,
      ServiceCallback<ImageList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options: RequestOptionsBase, callback: ServiceCallback<ImageList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageLists.update_1
    name: 'update(string, string, Body, ServiceCallback<ImageList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        callback: ServiceCallback<ImageList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: >-
          @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
  - uid: '@azure/cognitiveservices-contentmoderator.Body'
    name: Body
    spec.typeScript:
      - name: Body
        fullName: Body
        uid: '@azure/cognitiveservices-contentmoderator.Body'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList>
    name: ImageList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageList
        fullName: ImageList
        uid: '@azure/cognitiveservices-contentmoderator.ImageList'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageList[]>'
    name: 'ImageList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageList
        fullName: ImageList
        uid: '@azure/cognitiveservices-contentmoderator.ImageList'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
    name: RefreshIndex>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RefreshIndex
        fullName: RefreshIndex
        uid: '@azure/cognitiveservices-contentmoderator.RefreshIndex'
      - name: '>'
        fullName: '>'
