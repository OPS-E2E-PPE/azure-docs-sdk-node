### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage'
    name: ListManagementImage
    fullName: ListManagementImage
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage'
      - '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_1'
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementImage.constructor
    langs:
      - typeScript
    type: class
    summary: Class representing a ListManagementImage.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_2'
    name: >-
      addImage(string, ListManagementImageAddImageOptionalParams,
      ServiceCallback<Image>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addImage(listId: string, options:
        ListManagementImageAddImageOptionalParams, callback:
        ServiceCallback<Image>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage'
    name: 'addImage(string, Models.ListManagementImageAddImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an image to the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function addImage(listId: string, options?:
        Models.ListManagementImageAddImageOptionalParams)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - Models.ListManagementImageAddImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageAddImageResponse>
        description: Promise<Models.ListManagementImageAddImageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_1'
    name: 'addImage(string, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addImage(listId: string, callback: ServiceCallback<Image>)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_2
    name: >-
      addImageFileInput(string, msRest.HttpRequestBody,
      ListManagementImageAddImageFileInputOptionalParams,
      ServiceCallback<Image>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, options:
        ListManagementImageAddImageFileInputOptionalParams, callback:
        ServiceCallback<Image>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: The image file.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput
    name: >-
      addImageFileInput(string, msRest.HttpRequestBody,
      Models.ListManagementImageAddImageFileInputOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an image to the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, options?:
        Models.ListManagementImageAddImageFileInputOptionalParams)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: The image file.
        - id: options
          type:
            - Models.ListManagementImageAddImageFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageAddImageFileInputResponse>
        description: Promise<Models.ListManagementImageAddImageFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_1
    name: 'addImageFileInput(string, msRest.HttpRequestBody, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: The image file.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_2
    name: >-
      addImageUrlInput(string, string, ImageUrl,
      ListManagementImageAddImageUrlInputOptionalParams, ServiceCallback<Image>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, options: ListManagementImageAddImageUrlInputOptionalParams,
        callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageUrl'
          description: The image url.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput
    name: >-
      addImageUrlInput(string, string, ImageUrl,
      Models.ListManagementImageAddImageUrlInputOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an image to the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, options?:
        Models.ListManagementImageAddImageUrlInputOptionalParams)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageUrl'
          description: The image url.
        - id: options
          type:
            - Models.ListManagementImageAddImageUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageAddImageUrlInputResponse>
        description: Promise<Models.ListManagementImageAddImageUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_1
    name: 'addImageUrlInput(string, string, ImageUrl, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageUrl'
          description: The image url.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages
    name: 'deleteAllImages(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes all images from the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function deleteAllImages(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageDeleteAllImagesResponse>
        description: Promise<Models.ListManagementImageDeleteAllImagesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_2
    name: 'deleteAllImages(string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAllImages(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_1
    name: 'deleteAllImages(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAllImages(listId: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage'
    name: 'deleteImage(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an image from the list with list Id and image Id passed.
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageId
          type:
            - string
          description: Id of the image.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageDeleteImageResponse>
        description: Promise<Models.ListManagementImageDeleteImageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_2
    name: 'deleteImage(string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, options:
        RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageId
          type:
            - string
          description: Id of the image.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_1
    name: 'deleteImage(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: imageId
          type:
            - string
          description: Id of the image.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds
    name: 'getAllImageIds(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all image Ids from the list with list Id equal to list Id passed.
    syntax:
      content: >-
        function getAllImageIds(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementImageGetAllImageIdsResponse>
        description: Promise<Models.ListManagementImageGetAllImageIdsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_2
    name: 'getAllImageIds(string, RequestOptionsBase, ServiceCallback<ImageIds>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllImageIds(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImageIds>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageIds>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_1
    name: 'getAllImageIds(string, ServiceCallback<ImageIds>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllImageIds(listId: string, callback:
        ServiceCallback<ImageIds>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageIds>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage.constructor'
    name: ListManagementImage(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ListManagementImage.
    syntax:
      content: 'new ListManagementImage(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: >-
          @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Image>
    name: Image>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Image
        fullName: Image
        uid: '@azure/cognitiveservices-contentmoderator.Image'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageOptionalParams
    name: ListManagementImageAddImageOptionalParams
    spec.typeScript:
      - name: ListManagementImageAddImageOptionalParams
        fullName: ListManagementImageAddImageOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageOptionalParams
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputOptionalParams
    name: ListManagementImageAddImageFileInputOptionalParams
    spec.typeScript:
      - name: ListManagementImageAddImageFileInputOptionalParams
        fullName: ListManagementImageAddImageFileInputOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputOptionalParams
  - uid: '@azure/cognitiveservices-contentmoderator.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-contentmoderator.ImageUrl'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputOptionalParams
    name: ListManagementImageAddImageUrlInputOptionalParams
    spec.typeScript:
      - name: ListManagementImageAddImageUrlInputOptionalParams
        fullName: ListManagementImageAddImageUrlInputOptionalParams
        uid: >-
          @azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputOptionalParams
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.ImageIds>
    name: ImageIds>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageIds
        fullName: ImageIds
        uid: '@azure/cognitiveservices-contentmoderator.ImageIds'
      - name: '>'
        fullName: '>'
