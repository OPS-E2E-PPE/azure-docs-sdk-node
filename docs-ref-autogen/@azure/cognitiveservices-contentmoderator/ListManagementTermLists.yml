### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists'
    name: ListManagementTermLists
    fullName: ListManagementTermLists
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create'
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_1
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.constructor
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_1
      - '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update'
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_2
      - >-
        @azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_1
    langs:
      - typeScript
    type: class
    summary: Class representing a ListManagementTermLists.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create'
    name: 'create(string, Body, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a Term List
    syntax:
      content: >-
        function create(contentType: string, body: Body, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsCreateResponse>
        description: Promise<Models.ListManagementTermListsCreateResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_2'
    name: 'create(string, Body, RequestOptionsBase, ServiceCallback<TermList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentType: string, body: Body, options:
        RequestOptionsBase, callback: ServiceCallback<TermList>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_1'
    name: 'create(string, Body, ServiceCallback<TermList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentType: string, body: Body, callback:
        ServiceCallback<TermList>)
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes term list with the list Id equal to list Id passed.
    syntax:
      content: >-
        function deleteMethod(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsDeleteMethodResponse>
        description: Promise<Models.ListManagementTermListsDeleteMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_2
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_1
    name: 'deleteMethod(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(listId: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists
    name: getAllTermLists(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: gets all the Term Lists
    syntax:
      content: 'function getAllTermLists(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsGetAllTermListsResponse>
        description: Promise<Models.ListManagementTermListsGetAllTermListsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_2
    name: 'getAllTermLists(RequestOptionsBase, ServiceCallback<TermList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllTermLists(options: RequestOptionsBase, callback:
        ServiceCallback<TermList[]>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_1
    name: 'getAllTermLists(ServiceCallback<TermList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTermLists(callback: ServiceCallback<TermList[]>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails
    name: 'getDetails(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns list Id details of the term list with list Id equal to list Id
      passed.
    syntax:
      content: 'function getDetails(listId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsGetDetailsResponse>
        description: Promise<Models.ListManagementTermListsGetDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_2
    name: 'getDetails(string, RequestOptionsBase, ServiceCallback<TermList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_1
    name: 'getDetails(string, ServiceCallback<TermList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDetails(listId: string, callback: ServiceCallback<TermList>)'
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.constructor
    name: ListManagementTermLists(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ListManagementTermLists.
    syntax:
      content: 'new ListManagementTermLists(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod
    name: 'refreshIndexMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Refreshes the index of the list with list Id equal to list ID passed.
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>
        description: Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_2
    name: >-
      refreshIndexMethod(string, string, RequestOptionsBase,
      ServiceCallback<RefreshIndex>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, options:
        RequestOptionsBase, callback: ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_1
    name: 'refreshIndexMethod(string, string, ServiceCallback<RefreshIndex>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, callback:
        ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update'
    name: 'update(string, string, Body, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an Term List.
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermListsUpdateResponse>
        description: Promise<Models.ListManagementTermListsUpdateResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_2'
    name: >-
      update(string, string, Body, RequestOptionsBase,
      ServiceCallback<TermList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options: RequestOptionsBase, callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_1'
    name: 'update(string, string, Body, ServiceCallback<TermList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type:
            - string
          description: List Id of the image list.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: body
          type:
            - '@azure/cognitiveservices-contentmoderator.Body'
          description: Schema of the body.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
          description: |
            The callback
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: >-
          @azure/cognitiveservices-contentmoderator.ContentModeratorClientContext
  - uid: '@azure/cognitiveservices-contentmoderator.Body'
    name: Body
    spec.typeScript:
      - name: Body
        fullName: Body
        uid: '@azure/cognitiveservices-contentmoderator.Body'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList>
    name: TermList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TermList
        fullName: TermList
        uid: '@azure/cognitiveservices-contentmoderator.TermList'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-contentmoderator.TermList[]>'
    name: 'TermList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TermList
        fullName: TermList
        uid: '@azure/cognitiveservices-contentmoderator.TermList'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.RefreshIndex>
    name: RefreshIndex>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RefreshIndex
        fullName: RefreshIndex
        uid: '@azure/cognitiveservices-contentmoderator.RefreshIndex'
      - name: '>'
        fullName: '>'
