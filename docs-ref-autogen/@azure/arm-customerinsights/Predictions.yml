### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-customerinsights.Predictions'
    name: Predictions
    fullName: Predictions
    children:
      - '@azure/arm-customerinsights.Predictions.beginCreateOrUpdate'
      - '@azure/arm-customerinsights.Predictions.beginDeleteMethod'
      - '@azure/arm-customerinsights.Predictions.createOrUpdate'
      - '@azure/arm-customerinsights.Predictions.deleteMethod'
      - '@azure/arm-customerinsights.Predictions.get'
      - '@azure/arm-customerinsights.Predictions.get_2'
      - '@azure/arm-customerinsights.Predictions.get_1'
      - '@azure/arm-customerinsights.Predictions.getModelStatus'
      - '@azure/arm-customerinsights.Predictions.getModelStatus_2'
      - '@azure/arm-customerinsights.Predictions.getModelStatus_1'
      - '@azure/arm-customerinsights.Predictions.getTrainingResults'
      - '@azure/arm-customerinsights.Predictions.getTrainingResults_2'
      - '@azure/arm-customerinsights.Predictions.getTrainingResults_1'
      - '@azure/arm-customerinsights.Predictions.listByHub'
      - '@azure/arm-customerinsights.Predictions.listByHub_2'
      - '@azure/arm-customerinsights.Predictions.listByHub_1'
      - '@azure/arm-customerinsights.Predictions.listByHubNext'
      - '@azure/arm-customerinsights.Predictions.listByHubNext_2'
      - '@azure/arm-customerinsights.Predictions.listByHubNext_1'
      - '@azure/arm-customerinsights.Predictions.modelStatus'
      - '@azure/arm-customerinsights.Predictions.modelStatus_2'
      - '@azure/arm-customerinsights.Predictions.modelStatus_1'
      - '@azure/arm-customerinsights.Predictions.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Predictions.
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, PredictionResourceFormat,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a Prediction or updates an existing Prediction in the hub.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, hubName: string,
        predictionName: string, parameters: PredictionResourceFormat, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.PredictionResourceFormat'
          description: Parameters supplied to the create/update Prediction operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a Prediction in the hub.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, hubName: string,
        predictionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, PredictionResourceFormat,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a Prediction or updates an existing Prediction in the hub.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, hubName: string,
        predictionName: string, parameters: PredictionResourceFormat, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.PredictionResourceFormat'
          description: Parameters supplied to the create/update Prediction operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsCreateOrUpdateResponse>
        description: Promise<Models.PredictionsCreateOrUpdateResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a Prediction in the hub.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, hubName: string,
        predictionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a Prediction in the hub.
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, predictionName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsGetResponse>
        description: Promise<Models.PredictionsGetResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<PredictionResourceFormat>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, predictionName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<PredictionResourceFormat>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-customerinsights.PredictionResourceFormat>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.get_1'
    name: 'get(string, string, string, ServiceCallback<PredictionResourceFormat>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, predictionName:
        string, callback: ServiceCallback<PredictionResourceFormat>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-customerinsights.PredictionResourceFormat>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getModelStatus'
    name: 'getModelStatus(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets model status of the prediction.
    syntax:
      content: >-
        function getModelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsGetModelStatusResponse>
        description: Promise<Models.PredictionsGetModelStatusResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getModelStatus_2'
    name: >-
      getModelStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<PredictionModelStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getModelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PredictionModelStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionModelStatus>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getModelStatus_1'
    name: >-
      getModelStatus(string, string, string,
      ServiceCallback<PredictionModelStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getModelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, callback:
        ServiceCallback<PredictionModelStatus>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionModelStatus>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getTrainingResults'
    name: 'getTrainingResults(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets training results.
    syntax:
      content: >-
        function getTrainingResults(resourceGroupName: string, hubName: string,
        predictionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsGetTrainingResultsResponse>
        description: Promise<Models.PredictionsGetTrainingResultsResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getTrainingResults_2'
    name: >-
      getTrainingResults(string, string, string, RequestOptionsBase,
      ServiceCallback<PredictionTrainingResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingResults(resourceGroupName: string, hubName: string,
        predictionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PredictionTrainingResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-customerinsights.PredictionTrainingResults>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.getTrainingResults_1'
    name: >-
      getTrainingResults(string, string, string,
      ServiceCallback<PredictionTrainingResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingResults(resourceGroupName: string, hubName: string,
        predictionName: string, callback:
        ServiceCallback<PredictionTrainingResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-customerinsights.PredictionTrainingResults>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHub'
    name: 'listByHub(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the predictions in the specified hub.
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsListByHubResponse>
        description: Promise<Models.PredictionsListByHubResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHub_2'
    name: >-
      listByHub(string, string, RequestOptionsBase,
      ServiceCallback<PredictionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options:
        RequestOptionsBase, callback: ServiceCallback<PredictionListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionListResult>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHub_1'
    name: 'listByHub(string, string, ServiceCallback<PredictionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, callback:
        ServiceCallback<PredictionListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionListResult>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHubNext'
    name: 'listByHubNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the predictions in the specified hub.
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionsListByHubNextResponse>
        description: Promise<Models.PredictionsListByHubNextResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHubNext_2'
    name: >-
      listByHubNext(string, RequestOptionsBase,
      ServiceCallback<PredictionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PredictionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionListResult>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.listByHubNext_1'
    name: 'listByHubNext(string, ServiceCallback<PredictionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, callback:
        ServiceCallback<PredictionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.PredictionListResult>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.modelStatus'
    name: >-
      modelStatus(string, string, string, PredictionModelStatus,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates the model status of prediction.
    syntax:
      content: >-
        function modelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, parameters: PredictionModelStatus, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.PredictionModelStatus'
          description: >-
            Parameters supplied to the create/update prediction model status
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.modelStatus_2'
    name: >-
      modelStatus(string, string, string, PredictionModelStatus,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function modelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, parameters: PredictionModelStatus, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.PredictionModelStatus'
          description: >-
            Parameters supplied to the create/update prediction model status
            operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.modelStatus_1'
    name: >-
      modelStatus(string, string, string, PredictionModelStatus,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function modelStatus(resourceGroupName: string, hubName: string,
        predictionName: string, parameters: PredictionModelStatus, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: hubName
          type:
            - string
          description: The name of the hub.
        - id: predictionName
          type:
            - string
          description: The name of the Prediction.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.PredictionModelStatus'
          description: >-
            Parameters supplied to the create/update prediction model status
            operation.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Predictions.constructor'
    name: Predictions(CustomerInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Predictions.
    syntax:
      content: 'new Predictions(client: CustomerInsightsManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-customerinsights.CustomerInsightsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-customerinsights'
references:
  - uid: '@azure/arm-customerinsights.CustomerInsightsManagementClientContext'
    name: CustomerInsightsManagementClientContext
    spec.typeScript:
      - name: CustomerInsightsManagementClientContext
        fullName: CustomerInsightsManagementClientContext
        uid: '@azure/arm-customerinsights.CustomerInsightsManagementClientContext'
  - uid: '@azure/arm-customerinsights.PredictionResourceFormat'
    name: PredictionResourceFormat
    spec.typeScript:
      - name: PredictionResourceFormat
        fullName: PredictionResourceFormat
        uid: '@azure/arm-customerinsights.PredictionResourceFormat'
  - uid: ServiceCallback<@azure/arm-customerinsights.PredictionResourceFormat>
    name: PredictionResourceFormat>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PredictionResourceFormat
        fullName: PredictionResourceFormat
        uid: '@azure/arm-customerinsights.PredictionResourceFormat'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-customerinsights.PredictionModelStatus>
    name: PredictionModelStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PredictionModelStatus
        fullName: PredictionModelStatus
        uid: '@azure/arm-customerinsights.PredictionModelStatus'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-customerinsights.PredictionTrainingResults>
    name: PredictionTrainingResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PredictionTrainingResults
        fullName: PredictionTrainingResults
        uid: '@azure/arm-customerinsights.PredictionTrainingResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-customerinsights.PredictionListResult>
    name: PredictionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PredictionListResult
        fullName: PredictionListResult
        uid: '@azure/arm-customerinsights.PredictionListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-customerinsights.PredictionModelStatus'
    name: PredictionModelStatus
    spec.typeScript:
      - name: PredictionModelStatus
        fullName: PredictionModelStatus
        uid: '@azure/arm-customerinsights.PredictionModelStatus'
