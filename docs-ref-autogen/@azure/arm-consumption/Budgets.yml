### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-consumption.Budgets'
    name: Budgets
    fullName: Budgets
    children:
      - '@azure/arm-consumption.Budgets.constructor'
      - '@azure/arm-consumption.Budgets.createOrUpdate'
      - '@azure/arm-consumption.Budgets.createOrUpdate_2'
      - '@azure/arm-consumption.Budgets.createOrUpdate_1'
      - '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName'
      - '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName_2'
      - '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName_1'
      - '@azure/arm-consumption.Budgets.deleteByResourceGroupName'
      - '@azure/arm-consumption.Budgets.deleteByResourceGroupName_2'
      - '@azure/arm-consumption.Budgets.deleteByResourceGroupName_1'
      - '@azure/arm-consumption.Budgets.deleteMethod'
      - '@azure/arm-consumption.Budgets.deleteMethod_2'
      - '@azure/arm-consumption.Budgets.deleteMethod_1'
      - '@azure/arm-consumption.Budgets.get'
      - '@azure/arm-consumption.Budgets.get_2'
      - '@azure/arm-consumption.Budgets.get_1'
      - '@azure/arm-consumption.Budgets.getByResourceGroupName'
      - '@azure/arm-consumption.Budgets.getByResourceGroupName_2'
      - '@azure/arm-consumption.Budgets.getByResourceGroupName_1'
      - '@azure/arm-consumption.Budgets.list'
      - '@azure/arm-consumption.Budgets.list_2'
      - '@azure/arm-consumption.Budgets.list_1'
      - '@azure/arm-consumption.Budgets.listByResourceGroupName'
      - '@azure/arm-consumption.Budgets.listByResourceGroupName_2'
      - '@azure/arm-consumption.Budgets.listByResourceGroupName_1'
      - '@azure/arm-consumption.Budgets.listByResourceGroupNameNext'
      - '@azure/arm-consumption.Budgets.listByResourceGroupNameNext_2'
      - '@azure/arm-consumption.Budgets.listByResourceGroupNameNext_1'
      - '@azure/arm-consumption.Budgets.listNext'
      - '@azure/arm-consumption.Budgets.listNext_2'
      - '@azure/arm-consumption.Budgets.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Budgets.
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.constructor'
    name: Budgets(ConsumptionManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Budgets.
    syntax:
      content: 'new Budgets(client: ConsumptionManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-consumption.ConsumptionManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdate'
    name: 'createOrUpdate(string, Budget, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to create or update a budget. Update operation requires
      latest eTag to be set in

      the request mandatorily. You may obtain the latest eTag by performing a
      get operation. Create

      operation does not require eTag.
    syntax:
      content: >-
        function createOrUpdate(budgetName: string, parameters: Budget,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsCreateOrUpdateResponse>
        description: Promise<Models.BudgetsCreateOrUpdateResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdate_2'
    name: >-
      createOrUpdate(string, Budget, RequestOptionsBase,
      ServiceCallback<Budget>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(budgetName: string, parameters: Budget, options:
        RequestOptionsBase, callback: ServiceCallback<Budget>)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdate_1'
    name: 'createOrUpdate(string, Budget, ServiceCallback<Budget>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(budgetName: string, parameters: Budget,
        callback: ServiceCallback<Budget>)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName'
    name: >-
      createOrUpdateByResourceGroupName(string, string, Budget,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to create or update a budget. Update operation requires
      latest eTag to be set in

      the request mandatorily. You may obtain the latest eTag by performing a
      get operation. Create

      operation does not require eTag.
    syntax:
      content: >-
        function createOrUpdateByResourceGroupName(resourceGroupName: string,
        budgetName: string, parameters: Budget, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsCreateOrUpdateByResourceGroupNameResponse>
        description: Promise<Models.BudgetsCreateOrUpdateByResourceGroupNameResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName_2'
    name: >-
      createOrUpdateByResourceGroupName(string, string, Budget,
      RequestOptionsBase, ServiceCallback<Budget>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateByResourceGroupName(resourceGroupName: string,
        budgetName: string, parameters: Budget, options: RequestOptionsBase,
        callback: ServiceCallback<Budget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.createOrUpdateByResourceGroupName_1'
    name: >-
      createOrUpdateByResourceGroupName(string, string, Budget,
      ServiceCallback<Budget>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateByResourceGroupName(resourceGroupName: string,
        budgetName: string, parameters: Budget, callback:
        ServiceCallback<Budget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: parameters
          type:
            - '@azure/arm-consumption.Budget'
          description: Parameters supplied to the Create Budget operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteByResourceGroupName'
    name: 'deleteByResourceGroupName(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a budget.
    syntax:
      content: >-
        function deleteByResourceGroupName(resourceGroupName: string,
        budgetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteByResourceGroupName_2'
    name: >-
      deleteByResourceGroupName(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteByResourceGroupName(resourceGroupName: string,
        budgetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteByResourceGroupName_1'
    name: 'deleteByResourceGroupName(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteByResourceGroupName(resourceGroupName: string,
        budgetName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a budget.
    syntax:
      content: >-
        function deleteMethod(budgetName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(budgetName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(budgetName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the budget for a subscription by budget name.
    syntax:
      content: 'function get(budgetName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsGetResponse>
        description: Promise<Models.BudgetsGetResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Budget>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(budgetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Budget>)
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.get_1'
    name: 'get(string, ServiceCallback<Budget>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(budgetName: string, callback: ServiceCallback<Budget>)'
      parameters:
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.getByResourceGroupName'
    name: 'getByResourceGroupName(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the budget for a resource group under a subscription by budget name.
    syntax:
      content: >-
        function getByResourceGroupName(resourceGroupName: string, budgetName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsGetByResourceGroupNameResponse>
        description: Promise<Models.BudgetsGetByResourceGroupNameResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.getByResourceGroupName_2'
    name: >-
      getByResourceGroupName(string, string, RequestOptionsBase,
      ServiceCallback<Budget>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getByResourceGroupName(resourceGroupName: string, budgetName:
        string, options: RequestOptionsBase, callback: ServiceCallback<Budget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.getByResourceGroupName_1'
    name: 'getByResourceGroupName(string, string, ServiceCallback<Budget>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getByResourceGroupName(resourceGroupName: string, budgetName:
        string, callback: ServiceCallback<Budget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: budgetName
          type:
            - string
          description: Budget Name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.Budget>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all budgets for a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsListResponse>
        description: Promise<Models.BudgetsListResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<BudgetsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<BudgetsListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.list_1'
    name: list(ServiceCallback<BudgetsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<BudgetsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupName'
    name: 'listByResourceGroupName(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all budgets for a resource group under a subscription.
    syntax:
      content: >-
        function listByResourceGroupName(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsListByResourceGroupNameResponse>
        description: Promise<Models.BudgetsListByResourceGroupNameResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupName_2'
    name: >-
      listByResourceGroupName(string, RequestOptionsBase,
      ServiceCallback<BudgetsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupName(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<BudgetsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupName_1'
    name: 'listByResourceGroupName(string, ServiceCallback<BudgetsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupName(resourceGroupName: string, callback:
        ServiceCallback<BudgetsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Azure Resource Group Name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupNameNext'
    name: 'listByResourceGroupNameNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all budgets for a resource group under a subscription.
    syntax:
      content: >-
        function listByResourceGroupNameNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsListByResourceGroupNameNextResponse>
        description: Promise<Models.BudgetsListByResourceGroupNameNextResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupNameNext_2'
    name: >-
      listByResourceGroupNameNext(string, RequestOptionsBase,
      ServiceCallback<BudgetsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNameNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BudgetsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listByResourceGroupNameNext_1'
    name: 'listByResourceGroupNameNext(string, ServiceCallback<BudgetsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNameNext(nextPageLink: string, callback:
        ServiceCallback<BudgetsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all budgets for a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BudgetsListNextResponse>
        description: Promise<Models.BudgetsListNextResponse>
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<BudgetsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<BudgetsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
  - uid: '@azure/arm-consumption.Budgets.listNext_1'
    name: 'listNext(string, ServiceCallback<BudgetsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<BudgetsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-consumption.BudgetsListResult>
          description: |
            The callback
    package: '@azure/arm-consumption'
references:
  - uid: '@azure/arm-consumption.ConsumptionManagementClientContext'
    name: ConsumptionManagementClientContext
    spec.typeScript:
      - name: ConsumptionManagementClientContext
        fullName: ConsumptionManagementClientContext
        uid: '@azure/arm-consumption.ConsumptionManagementClientContext'
  - uid: '@azure/arm-consumption.Budget'
    name: Budget
    spec.typeScript:
      - name: Budget
        fullName: Budget
        uid: '@azure/arm-consumption.Budget'
  - uid: ServiceCallback<@azure/arm-consumption.Budget>
    name: Budget>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Budget
        fullName: Budget
        uid: '@azure/arm-consumption.Budget'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-consumption.BudgetsListResult>
    name: BudgetsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BudgetsListResult
        fullName: BudgetsListResult
        uid: '@azure/arm-consumption.BudgetsListResult'
      - name: '>'
        fullName: '>'
