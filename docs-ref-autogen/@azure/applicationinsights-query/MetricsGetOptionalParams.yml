### YamlMime:UniversalReference
items:
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams'
    name: MetricsGetOptionalParams
    fullName: MetricsGetOptionalParams
    children:
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.abortSignal'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.aggregation'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.customHeaders'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.filter'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.interval'
      - >-
        @azure/applicationinsights-query.MetricsGetOptionalParams.onDownloadProgress
      - >-
        @azure/applicationinsights-query.MetricsGetOptionalParams.onUploadProgress
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.orderby'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.segment'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.timeout'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.timespan'
      - '@azure/applicationinsights-query.MetricsGetOptionalParams.top'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.aggregation'
    name: aggregation
    fullName: aggregation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'aggregation?: MetricsAggregation[]'
      return:
        type:
          - '@azure/applicationinsights-query.MetricsAggregation[]'
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.filter'
    name: filter
    fullName: filter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'filter?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.interval'
    name: interval
    fullName: interval
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'interval?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: >-
      @azure/applicationinsights-query.MetricsGetOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.orderby'
    name: orderby
    fullName: orderby
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'orderby?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.segment'
    name: segment
    fullName: segment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'segment?: MetricsSegment[]'
      return:
        type:
          - '@azure/applicationinsights-query.MetricsSegment[]'
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.timespan'
    name: timespan
    fullName: timespan
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timespan?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/applicationinsights-query'
  - uid: '@azure/applicationinsights-query.MetricsGetOptionalParams.top'
    name: top
    fullName: top
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'top?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/applicationinsights-query'
references:
  - uid: '@azure/applicationinsights-query.MetricsAggregation[]'
    name: 'MetricsAggregation[]'
    spec.typeScript:
      - name: MetricsAggregation
        fullName: MetricsAggregation
        uid: '@azure/applicationinsights-query.MetricsAggregation'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/applicationinsights-query.MetricsSegment[]'
    name: 'MetricsSegment[]'
    spec.typeScript:
      - name: MetricsSegment
        fullName: MetricsSegment
        uid: '@azure/applicationinsights-query.MetricsSegment'
      - name: '[]'
        fullName: '[]'
