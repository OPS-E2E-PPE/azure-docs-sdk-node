### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.Images'
    name: Images
    fullName: Images
    children:
      - '@azure/arm-compute.Images.beginCreateOrUpdate'
      - '@azure/arm-compute.Images.beginDeleteMethod'
      - '@azure/arm-compute.Images.beginUpdate'
      - '@azure/arm-compute.Images.createOrUpdate'
      - '@azure/arm-compute.Images.deleteMethod'
      - '@azure/arm-compute.Images.get_2'
      - '@azure/arm-compute.Images.get'
      - '@azure/arm-compute.Images.get_1'
      - '@azure/arm-compute.Images.constructor'
      - '@azure/arm-compute.Images.list'
      - '@azure/arm-compute.Images.list_2'
      - '@azure/arm-compute.Images.list_1'
      - '@azure/arm-compute.Images.listByResourceGroup'
      - '@azure/arm-compute.Images.listByResourceGroup_2'
      - '@azure/arm-compute.Images.listByResourceGroup_1'
      - '@azure/arm-compute.Images.listByResourceGroupNext'
      - '@azure/arm-compute.Images.listByResourceGroupNext_2'
      - '@azure/arm-compute.Images.listByResourceGroupNext_1'
      - '@azure/arm-compute.Images.listNext'
      - '@azure/arm-compute.Images.listNext_2'
      - '@azure/arm-compute.Images.listNext_1'
      - '@azure/arm-compute.Images.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a Images.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Image, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: parameters
          type:
            - '@azure/arm-compute.Image'
          description: Parameters supplied to the Create Image operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, imageName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.beginUpdate'
    name: 'beginUpdate(string, string, ImageUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: parameters
          type:
            - '@azure/arm-compute.ImageUpdate'
          description: Parameters supplied to the Update Image operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.createOrUpdate'
    name: 'createOrUpdate(string, string, Image, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, imageName: string,
        parameters: Image, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: parameters
          type:
            - '@azure/arm-compute.Image'
          description: Parameters supplied to the Create Image operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesCreateOrUpdateResponse>
        description: Promise<Models.ImagesCreateOrUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, imageName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.get_2'
    name: 'get(string, string, ImagesGetOptionalParams, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options:
        ImagesGetOptionalParams, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: options
          type:
            - '@azure/arm-compute.ImagesGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.Image>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.get'
    name: 'get(string, string, Models.ImagesGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an image.
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options?:
        Models.ImagesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: options
          type:
            - Models.ImagesGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesGetResponse>
        description: Promise<Models.ImagesGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.get_1'
    name: 'get(string, string, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.Image>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.constructor'
    name: Images(ComputeManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Images.
    syntax:
      content: 'new Images(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-compute.ComputeManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the

      next page of Images. Do this till nextLink is null to fetch all the
      Images.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesListResponse>
        description: Promise<Models.ImagesListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.list_1'
    name: list(ServiceCallback<ImageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ImageListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesListByResourceGroupResponse>
        description: Promise<Models.ImagesListByResourceGroupResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ImageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesListByResourceGroupNextResponse>
        description: Promise<Models.ImagesListByResourceGroupNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ImageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the

      next page of Images. Do this till nextLink is null to fetch all the
      Images.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesListNextResponse>
        description: Promise<Models.ImagesListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.listNext_1'
    name: 'listNext(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.ImageListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.Images.update'
    name: 'update(string, string, ImageUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function update(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: imageName
          type:
            - string
          description: The name of the image.
        - id: parameters
          type:
            - '@azure/arm-compute.ImageUpdate'
          description: Parameters supplied to the Update Image operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImagesUpdateResponse>
        description: Promise<Models.ImagesUpdateResponse>
    package: '@azure/arm-compute'
references:
  - uid: '@azure/arm-compute.ComputeManagementClientContext'
    name: ComputeManagementClientContext
    spec.typeScript:
      - name: ComputeManagementClientContext
        fullName: ComputeManagementClientContext
        uid: '@azure/arm-compute.ComputeManagementClientContext'
  - uid: '@azure/arm-compute.Image'
    name: Image
    spec.typeScript:
      - name: Image
        fullName: Image
        uid: '@azure/arm-compute.Image'
  - uid: '@azure/arm-compute.ImageUpdate'
    name: ImageUpdate
    spec.typeScript:
      - name: ImageUpdate
        fullName: ImageUpdate
        uid: '@azure/arm-compute.ImageUpdate'
  - uid: ServiceCallback<@azure/arm-compute.Image>
    name: Image>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Image
        fullName: Image
        uid: '@azure/arm-compute.Image'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-compute.ImagesGetOptionalParams'
    name: ImagesGetOptionalParams
    spec.typeScript:
      - name: ImagesGetOptionalParams
        fullName: ImagesGetOptionalParams
        uid: '@azure/arm-compute.ImagesGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-compute.ImageListResult>
    name: ImageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageListResult
        fullName: ImageListResult
        uid: '@azure/arm-compute.ImageListResult'
      - name: '>'
        fullName: '>'
