### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.VirtualMachineScaleSets'
    name: VirtualMachineScaleSets
    fullName: VirtualMachineScaleSets
    children:
      - '@azure/arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginDeallocate'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginDeleteInstances'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginDeleteMethod'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginPerformMaintenance'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginPowerOff'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginRedeploy'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginReimage'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginReimageAll'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginRestart'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginStart'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginUpdate'
      - '@azure/arm-compute.VirtualMachineScaleSets.beginUpdateInstances'
      - '@azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup'
      - >-
        @azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup_2
      - >-
        @azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup_1
      - '@azure/arm-compute.VirtualMachineScaleSets.createOrUpdate'
      - '@azure/arm-compute.VirtualMachineScaleSets.deallocate'
      - '@azure/arm-compute.VirtualMachineScaleSets.deleteInstances'
      - '@azure/arm-compute.VirtualMachineScaleSets.deleteMethod'
      - >-
        @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk
      - >-
        @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_2
      - >-
        @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_1
      - '@azure/arm-compute.VirtualMachineScaleSets.get'
      - '@azure/arm-compute.VirtualMachineScaleSets.get_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.get_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView'
      - '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.list'
      - '@azure/arm-compute.VirtualMachineScaleSets.list_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.list_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAll'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAll_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAll_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAllNext'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAllNext_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.listAllNext_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.listNext'
      - '@azure/arm-compute.VirtualMachineScaleSets.listNext_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.listNext_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkus'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkus_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkus_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext_2'
      - '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext_1'
      - '@azure/arm-compute.VirtualMachineScaleSets.performMaintenance'
      - '@azure/arm-compute.VirtualMachineScaleSets.powerOff'
      - '@azure/arm-compute.VirtualMachineScaleSets.redeploy'
      - '@azure/arm-compute.VirtualMachineScaleSets.reimage'
      - '@azure/arm-compute.VirtualMachineScaleSets.reimageAll'
      - '@azure/arm-compute.VirtualMachineScaleSets.restart'
      - '@azure/arm-compute.VirtualMachineScaleSets.start'
      - '@azure/arm-compute.VirtualMachineScaleSets.update'
      - '@azure/arm-compute.VirtualMachineScaleSets.updateInstances'
      - '@azure/arm-compute.VirtualMachineScaleSets.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a VirtualMachineScaleSets.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachineScaleSet,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSet'
          description: The scale set object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginDeallocate'
    name: >-
      beginDeallocate(string, string,
      Models.VirtualMachineScaleSetsBeginDeallocateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the
      virtual machines and

      releases the compute resources. You are not billed for the compute
      resources that this virtual

      machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, options?:
        Models.VirtualMachineScaleSetsBeginDeallocateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginDeallocateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginDeleteInstances'
    name: >-
      beginDeleteInstances(string, string,
      VirtualMachineScaleSetVMInstanceRequiredIDs, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: vmInstanceIDs
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
          description: A list of virtual machine instance IDs from the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginPerformMaintenance'
    name: >-
      beginPerformMaintenance(string, string,
      Models.VirtualMachineScaleSetsBeginPerformMaintenanceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.
      Operation on instances

      which are not eligible for perform maintenance will be failed. Please
      refer to best practices

      for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, options?:
        Models.VirtualMachineScaleSetsBeginPerformMaintenanceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - >-
              Models.VirtualMachineScaleSetsBeginPerformMaintenanceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginPowerOff'
    name: >-
      beginPowerOff(string, string,
      Models.VirtualMachineScaleSetsBeginPowerOffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that
      resources are still

      attached and you are getting charged for the resources. Instead, use
      deallocate to release

      resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, options?:
        Models.VirtualMachineScaleSetsBeginPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginRedeploy'
    name: >-
      beginRedeploy(string, string,
      Models.VirtualMachineScaleSetsBeginRedeployOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down all the virtual machines in the virtual machine scale set,
      moves them to a new node,

      and powers them back on.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, options?:
        Models.VirtualMachineScaleSetsBeginRedeployOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginRedeployOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginReimage'
    name: >-
      beginReimage(string, string,
      Models.VirtualMachineScaleSetsBeginReimageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM scale set which

      don't have a ephemeral OS disk, for virtual machines who have a ephemeral
      OS disk the virtual

      machine is reset to initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsBeginReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginReimageAll'
    name: >-
      beginReimageAll(string, string,
      Models.VirtualMachineScaleSetsBeginReimageAllOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a VM scale set. This

      operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, options?:
        Models.VirtualMachineScaleSetsBeginReimageAllOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginReimageAllOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginRestart'
    name: >-
      beginRestart(string, string,
      Models.VirtualMachineScaleSetsBeginRestartOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsBeginRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginStart'
    name: >-
      beginStart(string, string,
      Models.VirtualMachineScaleSetsBeginStartOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsBeginStartOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsBeginStartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginUpdate'
    name: >-
      beginUpdate(string, string, VirtualMachineScaleSetUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetUpdate'
          description: The scale set object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.beginUpdateInstances'
    name: >-
      beginUpdateInstances(string, string,
      VirtualMachineScaleSetVMInstanceRequiredIDs, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: vmInstanceIDs
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
          description: A list of virtual machine instance IDs from the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup'
    name: >-
      convertToSinglePlacementGroup(string, string,
      VMScaleSetConvertToSinglePlacementGroupInput, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Converts SinglePlacementGroup property to false for a existing virtual
      machine scale set.
    syntax:
      content: >-
        function convertToSinglePlacementGroup(resourceGroupName: string,
        vmScaleSetName: string, parameters:
        VMScaleSetConvertToSinglePlacementGroupInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the virtual machine scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VMScaleSetConvertToSinglePlacementGroupInput'
          description: The input object for ConvertToSinglePlacementGroup API.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup_2'
    name: >-
      convertToSinglePlacementGroup(string, string,
      VMScaleSetConvertToSinglePlacementGroupInput, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function convertToSinglePlacementGroup(resourceGroupName: string,
        vmScaleSetName: string, parameters:
        VMScaleSetConvertToSinglePlacementGroupInput, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the virtual machine scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VMScaleSetConvertToSinglePlacementGroupInput'
          description: The input object for ConvertToSinglePlacementGroup API.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.convertToSinglePlacementGroup_1'
    name: >-
      convertToSinglePlacementGroup(string, string,
      VMScaleSetConvertToSinglePlacementGroupInput, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function convertToSinglePlacementGroup(resourceGroupName: string,
        vmScaleSetName: string, parameters:
        VMScaleSetConvertToSinglePlacementGroupInput, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the virtual machine scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VMScaleSetConvertToSinglePlacementGroupInput'
          description: The input object for ConvertToSinglePlacementGroup API.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.createOrUpdate'
    name: >-
      createOrUpdate(string, string, VirtualMachineScaleSet,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSet'
          description: The scale set object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsCreateOrUpdateResponse>
        description: Promise<Models.VirtualMachineScaleSetsCreateOrUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.deallocate'
    name: >-
      deallocate(string, string,
      Models.VirtualMachineScaleSetsDeallocateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the
      virtual machines and

      releases the compute resources. You are not billed for the compute
      resources that this virtual

      machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsDeallocateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsDeallocateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.deleteInstances'
    name: >-
      deleteInstances(string, string,
      VirtualMachineScaleSetVMInstanceRequiredIDs, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: vmInstanceIDs
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
          description: A list of virtual machine instance IDs from the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: >-
      @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Manual platform update domain walk to update virtual machines in a service
      fabric virtual

      machine scale set.
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: platformUpdateDomain
          type:
            - number
          description: |-
            The platform update domain for which a manual recovery walk is
            requested
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse>
        description: >-
          Promise<Models.VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse>
    package: '@azure/arm-compute'
  - uid: >-
      @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_2
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      RequestOptionsBase, ServiceCallback<RecoveryWalkResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, options:
        RequestOptionsBase, callback: ServiceCallback<RecoveryWalkResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: platformUpdateDomain
          type:
            - number
          description: |-
            The platform update domain for which a manual recovery walk is
            requested
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.RecoveryWalkResponse>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: >-
      @azure/arm-compute.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_1
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      ServiceCallback<RecoveryWalkResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, callback:
        ServiceCallback<RecoveryWalkResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: platformUpdateDomain
          type:
            - number
          description: |-
            The platform update domain for which a manual recovery walk is
            requested
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.RecoveryWalkResponse>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsGetResponse>
        description: Promise<Models.VirtualMachineScaleSetsGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string, options:
        RequestOptionsBase, callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineScaleSet>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.get_1'
    name: 'get(string, string, ServiceCallback<VirtualMachineScaleSet>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineScaleSet>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView'
    name: 'getInstanceView(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsGetInstanceViewResponse>
        description: Promise<Models.VirtualMachineScaleSetsGetInstanceViewResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView_2'
    name: >-
      getInstanceView(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getInstanceView_1'
    name: >-
      getInstanceView(string, string,
      ServiceCallback<VirtualMachineScaleSetInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory'
    name: 'getOSUpgradeHistory(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsGetOSUpgradeHistoryResponse>
        description: Promise<Models.VirtualMachineScaleSetsGetOSUpgradeHistoryResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory_2'
    name: >-
      getOSUpgradeHistory(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistory_1'
    name: >-
      getOSUpgradeHistory(string, string,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext'
    name: 'getOSUpgradeHistoryNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistoryNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse>
        description: Promise<Models.VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext_2'
    name: >-
      getOSUpgradeHistoryNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOSUpgradeHistoryNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.getOSUpgradeHistoryNext_1'
    name: >-
      getOSUpgradeHistoryNext(string,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOSUpgradeHistoryNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListResponse>
        description: Promise<Models.VirtualMachineScaleSetsListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.list_2'
    name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.list_1'
    name: 'list(string, ServiceCallback<VirtualMachineScaleSetListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAll'
    name: listAll(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the
      associated resource

      group. Use nextLink property in the response to get the next page of VM
      Scale Sets. Do this till

      nextLink is null to fetch all the VM Scale Sets.
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListAllResponse>
        description: Promise<Models.VirtualMachineScaleSetsListAllResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAll_2'
    name: >-
      listAll(RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAll_1'
    name: listAll(ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAllNext'
    name: 'listAllNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the
      associated resource

      group. Use nextLink property in the response to get the next page of VM
      Scale Sets. Do this till

      nextLink is null to fetch all the VM Scale Sets.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListAllNextResponse>
        description: Promise<Models.VirtualMachineScaleSetsListAllNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAllNext_2'
    name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listAllNext_1'
    name: >-
      listAllNext(string,
      ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListNextResponse>
        description: Promise<Models.VirtualMachineScaleSetsListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listNext_1'
    name: 'listNext(string, ServiceCallback<VirtualMachineScaleSetListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkus'
    name: 'listSkus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM

      instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListSkusResponse>
        description: Promise<Models.VirtualMachineScaleSetsListSkusResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkus_2'
    name: >-
      listSkus(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListSkusResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkus_1'
    name: >-
      listSkus(string, string,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListSkusResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext'
    name: 'listSkusNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM

      instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsListSkusNextResponse>
        description: Promise<Models.VirtualMachineScaleSetsListSkusNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext_2'
    name: >-
      listSkusNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListSkusResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.listSkusNext_1'
    name: >-
      listSkusNext(string,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListSkusResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.performMaintenance'
    name: >-
      performMaintenance(string, string,
      Models.VirtualMachineScaleSetsPerformMaintenanceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.
      Operation on instances

      which are not eligible for perform maintenance will be failed. Please
      refer to best practices

      for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, options?:
        Models.VirtualMachineScaleSetsPerformMaintenanceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsPerformMaintenanceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.powerOff'
    name: >-
      powerOff(string, string,
      Models.VirtualMachineScaleSetsPowerOffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that
      resources are still

      attached and you are getting charged for the resources. Instead, use
      deallocate to release

      resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.redeploy'
    name: >-
      redeploy(string, string,
      Models.VirtualMachineScaleSetsRedeployOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down all the virtual machines in the virtual machine scale set,
      moves them to a new node,

      and powers them back on.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsRedeployOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsRedeployOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.reimage'
    name: >-
      reimage(string, string,
      Models.VirtualMachineScaleSetsReimageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM scale set which

      don't have a ephemeral OS disk, for virtual machines who have a ephemeral
      OS disk the virtual

      machine is reset to initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.reimageAll'
    name: >-
      reimageAll(string, string,
      Models.VirtualMachineScaleSetsReimageAllOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a VM scale set. This

      operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsReimageAllOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsReimageAllOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.restart'
    name: >-
      restart(string, string,
      Models.VirtualMachineScaleSetsRestartOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.start'
    name: 'start(string, string, Models.VirtualMachineScaleSetsStartOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        options?: Models.VirtualMachineScaleSetsStartOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetsStartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.update'
    name: >-
      update(string, string, VirtualMachineScaleSetUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set to create or update.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetUpdate'
          description: The scale set object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetsUpdateResponse>
        description: Promise<Models.VirtualMachineScaleSetsUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.updateInstances'
    name: >-
      updateInstances(string, string,
      VirtualMachineScaleSetVMInstanceRequiredIDs, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: vmInstanceIDs
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
          description: A list of virtual machine instance IDs from the VM scale set.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSets.constructor'
    name: VirtualMachineScaleSets(ComputeManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a VirtualMachineScaleSets.
    syntax:
      content: 'new VirtualMachineScaleSets(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-compute.ComputeManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-compute'
references:
  - uid: '@azure/arm-compute.ComputeManagementClientContext'
    name: ComputeManagementClientContext
    spec.typeScript:
      - name: ComputeManagementClientContext
        fullName: ComputeManagementClientContext
        uid: '@azure/arm-compute.ComputeManagementClientContext'
  - uid: '@azure/arm-compute.VirtualMachineScaleSet'
    name: VirtualMachineScaleSet
    spec.typeScript:
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: '@azure/arm-compute.VirtualMachineScaleSet'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
    name: VirtualMachineScaleSetVMInstanceRequiredIDs
    spec.typeScript:
      - name: VirtualMachineScaleSetVMInstanceRequiredIDs
        fullName: VirtualMachineScaleSetVMInstanceRequiredIDs
        uid: '@azure/arm-compute.VirtualMachineScaleSetVMInstanceRequiredIDs'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetUpdate'
    name: VirtualMachineScaleSetUpdate
    spec.typeScript:
      - name: VirtualMachineScaleSetUpdate
        fullName: VirtualMachineScaleSetUpdate
        uid: '@azure/arm-compute.VirtualMachineScaleSetUpdate'
  - uid: '@azure/arm-compute.VMScaleSetConvertToSinglePlacementGroupInput'
    name: VMScaleSetConvertToSinglePlacementGroupInput
    spec.typeScript:
      - name: VMScaleSetConvertToSinglePlacementGroupInput
        fullName: VMScaleSetConvertToSinglePlacementGroupInput
        uid: '@azure/arm-compute.VMScaleSetConvertToSinglePlacementGroupInput'
  - uid: ServiceCallback<@azure/arm-compute.RecoveryWalkResponse>
    name: RecoveryWalkResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecoveryWalkResponse
        fullName: RecoveryWalkResponse
        uid: '@azure/arm-compute.RecoveryWalkResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSet>
    name: VirtualMachineScaleSet>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: '@azure/arm-compute.VirtualMachineScaleSet'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetInstanceView>
    name: VirtualMachineScaleSetInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetInstanceView
        fullName: VirtualMachineScaleSetInstanceView
        uid: '@azure/arm-compute.VirtualMachineScaleSetInstanceView'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory>
    name: VirtualMachineScaleSetListOSUpgradeHistory>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListOSUpgradeHistory
        fullName: VirtualMachineScaleSetListOSUpgradeHistory
        uid: '@azure/arm-compute.VirtualMachineScaleSetListOSUpgradeHistory'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListResult>
    name: VirtualMachineScaleSetListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListResult
        fullName: VirtualMachineScaleSetListResult
        uid: '@azure/arm-compute.VirtualMachineScaleSetListResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult>
    name: VirtualMachineScaleSetListWithLinkResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListWithLinkResult
        fullName: VirtualMachineScaleSetListWithLinkResult
        uid: '@azure/arm-compute.VirtualMachineScaleSetListWithLinkResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetListSkusResult>
    name: VirtualMachineScaleSetListSkusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListSkusResult
        fullName: VirtualMachineScaleSetListSkusResult
        uid: '@azure/arm-compute.VirtualMachineScaleSetListSkusResult'
      - name: '>'
        fullName: '>'
