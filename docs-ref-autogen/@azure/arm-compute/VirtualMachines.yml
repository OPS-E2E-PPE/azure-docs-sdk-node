### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.VirtualMachines'
    name: VirtualMachines
    fullName: VirtualMachines
    children:
      - '@azure/arm-compute.VirtualMachines.beginCapture'
      - '@azure/arm-compute.VirtualMachines.beginConvertToManagedDisks'
      - '@azure/arm-compute.VirtualMachines.beginCreateOrUpdate'
      - '@azure/arm-compute.VirtualMachines.beginDeallocate'
      - '@azure/arm-compute.VirtualMachines.beginDeleteMethod'
      - '@azure/arm-compute.VirtualMachines.beginPerformMaintenance'
      - '@azure/arm-compute.VirtualMachines.beginPowerOff'
      - '@azure/arm-compute.VirtualMachines.beginReapply'
      - '@azure/arm-compute.VirtualMachines.beginRedeploy'
      - '@azure/arm-compute.VirtualMachines.beginReimage'
      - '@azure/arm-compute.VirtualMachines.beginRestart'
      - '@azure/arm-compute.VirtualMachines.beginRunCommand'
      - '@azure/arm-compute.VirtualMachines.beginStart'
      - '@azure/arm-compute.VirtualMachines.beginUpdate'
      - '@azure/arm-compute.VirtualMachines.capture'
      - '@azure/arm-compute.VirtualMachines.convertToManagedDisks'
      - '@azure/arm-compute.VirtualMachines.createOrUpdate'
      - '@azure/arm-compute.VirtualMachines.deallocate'
      - '@azure/arm-compute.VirtualMachines.deleteMethod'
      - '@azure/arm-compute.VirtualMachines.generalize'
      - '@azure/arm-compute.VirtualMachines.generalize_2'
      - '@azure/arm-compute.VirtualMachines.generalize_1'
      - '@azure/arm-compute.VirtualMachines.get'
      - '@azure/arm-compute.VirtualMachines.get_1'
      - '@azure/arm-compute.VirtualMachines.get_2'
      - '@azure/arm-compute.VirtualMachines.instanceView'
      - '@azure/arm-compute.VirtualMachines.instanceView_2'
      - '@azure/arm-compute.VirtualMachines.instanceView_1'
      - '@azure/arm-compute.VirtualMachines.list'
      - '@azure/arm-compute.VirtualMachines.list_2'
      - '@azure/arm-compute.VirtualMachines.list_1'
      - '@azure/arm-compute.VirtualMachines.listAll'
      - '@azure/arm-compute.VirtualMachines.listAll_1'
      - '@azure/arm-compute.VirtualMachines.listAll_2'
      - '@azure/arm-compute.VirtualMachines.listAllNext'
      - '@azure/arm-compute.VirtualMachines.listAllNext_2'
      - '@azure/arm-compute.VirtualMachines.listAllNext_1'
      - '@azure/arm-compute.VirtualMachines.listAvailableSizes'
      - '@azure/arm-compute.VirtualMachines.listAvailableSizes_2'
      - '@azure/arm-compute.VirtualMachines.listAvailableSizes_1'
      - '@azure/arm-compute.VirtualMachines.listByLocation'
      - '@azure/arm-compute.VirtualMachines.listByLocation_2'
      - '@azure/arm-compute.VirtualMachines.listByLocation_1'
      - '@azure/arm-compute.VirtualMachines.listByLocationNext'
      - '@azure/arm-compute.VirtualMachines.listByLocationNext_2'
      - '@azure/arm-compute.VirtualMachines.listByLocationNext_1'
      - '@azure/arm-compute.VirtualMachines.listNext'
      - '@azure/arm-compute.VirtualMachines.listNext_2'
      - '@azure/arm-compute.VirtualMachines.listNext_1'
      - '@azure/arm-compute.VirtualMachines.performMaintenance'
      - '@azure/arm-compute.VirtualMachines.powerOff'
      - '@azure/arm-compute.VirtualMachines.reapply'
      - '@azure/arm-compute.VirtualMachines.redeploy'
      - '@azure/arm-compute.VirtualMachines.reimage'
      - '@azure/arm-compute.VirtualMachines.restart'
      - '@azure/arm-compute.VirtualMachines.runCommand'
      - '@azure/arm-compute.VirtualMachines.start'
      - '@azure/arm-compute.VirtualMachines.update'
      - '@azure/arm-compute.VirtualMachines.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a VirtualMachines.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginCapture'
    name: >-
      beginCapture(string, string, VirtualMachineCaptureParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used

      to create similar VMs.
    syntax:
      content: >-
        function beginCapture(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineCaptureParameters'
          description: Parameters supplied to the Capture Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginConvertToManagedDisks'
    name: 'beginConvertToManagedDisks(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be

      stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function beginConvertToManagedDisks(resourceGroupName: string, vmName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachine,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to create or update a virtual machine. Please note some
      properties can be set only

      during virtual machine creation.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: Parameters supplied to the Create Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginDeallocate'
    name: 'beginDeallocate(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the

      compute resources that this virtual machine uses.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginPerformMaintenance'
    name: 'beginPerformMaintenance(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string, vmName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginPowerOff'
    name: >-
      beginPowerOff(string, string,
      Models.VirtualMachinesBeginPowerOffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can be restarted with

      the same provisioned resources. You are still charged for this virtual
      machine.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmName: string,
        options?: Models.VirtualMachinesBeginPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachinesBeginPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginReapply'
    name: 'beginReapply(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to reapply a virtual machine's state.
    syntax:
      content: >-
        function beginReapply(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginRedeploy'
    name: 'beginRedeploy(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine, moves it to a new node, and powers it back
      on.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginReimage'
    name: >-
      beginReimage(string, string,
      Models.VirtualMachinesBeginReimageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmName: string,
        options?: Models.VirtualMachinesBeginReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachinesBeginReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginRestart'
    name: 'beginRestart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginRunCommand'
    name: >-
      beginRunCommand(string, string, RunCommandInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.RunCommandInput'
          description: Parameters supplied to the Run command operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginStart'
    name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.beginUpdate'
    name: >-
      beginUpdate(string, string, VirtualMachineUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineUpdate'
          description: Parameters supplied to the Update Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.capture'
    name: >-
      capture(string, string, VirtualMachineCaptureParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used

      to create similar VMs.
    syntax:
      content: >-
        function capture(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineCaptureParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineCaptureParameters'
          description: Parameters supplied to the Capture Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesCaptureResponse>
        description: Promise<Models.VirtualMachinesCaptureResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.convertToManagedDisks'
    name: 'convertToManagedDisks(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be

      stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function convertToManagedDisks(resourceGroupName: string, vmName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.createOrUpdate'
    name: 'createOrUpdate(string, string, VirtualMachine, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to create or update a virtual machine. Please note some
      properties can be set only

      during virtual machine creation.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: Parameters supplied to the Create Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesCreateOrUpdateResponse>
        description: Promise<Models.VirtualMachinesCreateOrUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.deallocate'
    name: 'deallocate(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the

      compute resources that this virtual machine uses.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.generalize'
    name: 'generalize(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the OS state of the virtual machine to generalized. It is recommended
      to sysprep the

      virtual machine before performing this operation. <br>For Windows, please
      refer to [Create a

      managed image of a generalized VM in

      Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/capture-image-resource).<br>For

      Linux, please refer to [How to create an image of a virtual machine or

      VHD](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/capture-image).
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.generalize_2'
    name: 'generalize(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.generalize_1'
    name: 'generalize(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.get'
    name: 'get(string, string, Models.VirtualMachinesGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual machine.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, options?:
        Models.VirtualMachinesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachinesGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesGetResponse>
        description: Promise<Models.VirtualMachinesGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.get_1'
    name: 'get(string, string, ServiceCallback<VirtualMachine>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachine>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.get_2'
    name: >-
      get(string, string, VirtualMachinesGetOptionalParams,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, options:
        VirtualMachinesGetOptionalParams, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - '@azure/arm-compute.VirtualMachinesGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachine>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.instanceView'
    name: 'instanceView(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about the run-time state of a virtual machine.
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesInstanceViewResponse>
        description: Promise<Models.VirtualMachinesInstanceViewResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.instanceView_2'
    name: >-
      instanceView(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.instanceView_1'
    name: 'instanceView(string, string, ServiceCallback<VirtualMachineInstanceView>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<VirtualMachineInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the
      nextLink property in

      the response to get the next page of virtual machines.
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListResponse>
        description: Promise<Models.VirtualMachinesListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.list_2'
    name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.list_1'
    name: 'list(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAll'
    name: listAll(Models.VirtualMachinesListAllOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the
      nextLink property in

      the response to get the next page of virtual machines.
    syntax:
      content: 'function listAll(options?: Models.VirtualMachinesListAllOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.VirtualMachinesListAllOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListAllResponse>
        description: Promise<Models.VirtualMachinesListAllResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAll_1'
    name: listAll(ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAll(callback: ServiceCallback<VirtualMachineListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAll_2'
    name: >-
      listAll(VirtualMachinesListAllOptionalParams,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: VirtualMachinesListAllOptionalParams,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-compute.VirtualMachinesListAllOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAllNext'
    name: 'listAllNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the
      nextLink property in

      the response to get the next page of virtual machines.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListAllNextResponse>
        description: Promise<Models.VirtualMachinesListAllNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAllNext_2'
    name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAllNext_1'
    name: 'listAllNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAvailableSizes'
    name: 'listAvailableSizes(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListAvailableSizesResponse>
        description: Promise<Models.VirtualMachinesListAvailableSizesResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAvailableSizes_2'
    name: >-
      listAvailableSizes(string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineSizeListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineSizeListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineSizeListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listAvailableSizes_1'
    name: >-
      listAvailableSizes(string, string,
      ServiceCallback<VirtualMachineSizeListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<VirtualMachineSizeListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineSizeListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocation'
    name: 'listByLocation(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocation(location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: location
          type:
            - string
          description: >-
            The location for which virtual machines under the subscription are
            queried.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListByLocationResponse>
        description: Promise<Models.VirtualMachinesListByLocationResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocation_2'
    name: >-
      listByLocation(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByLocation(location: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: location
          type:
            - string
          description: >-
            The location for which virtual machines under the subscription are
            queried.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocation_1'
    name: 'listByLocation(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByLocation(location: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: location
          type:
            - string
          description: >-
            The location for which virtual machines under the subscription are
            queried.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocationNext'
    name: 'listByLocationNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListByLocationNextResponse>
        description: Promise<Models.VirtualMachinesListByLocationNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocationNext_2'
    name: >-
      listByLocationNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listByLocationNext_1'
    name: 'listByLocationNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the
      nextLink property in

      the response to get the next page of virtual machines.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesListNextResponse>
        description: Promise<Models.VirtualMachinesListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.listNext_1'
    name: 'listNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.performMaintenance'
    name: 'performMaintenance(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.powerOff'
    name: 'powerOff(string, string, Models.VirtualMachinesPowerOffOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can be restarted with

      the same provisioned resources. You are still charged for this virtual
      machine.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmName: string, options?:
        Models.VirtualMachinesPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachinesPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.reapply'
    name: 'reapply(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to reapply a virtual machine's state.
    syntax:
      content: >-
        function reapply(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.redeploy'
    name: 'redeploy(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine, moves it to a new node, and powers it back
      on.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.reimage'
    name: 'reimage(string, string, Models.VirtualMachinesReimageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmName: string, options?:
        Models.VirtualMachinesReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachinesReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.restart'
    name: 'restart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.runCommand'
    name: 'runCommand(string, string, RunCommandInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.RunCommandInput'
          description: Parameters supplied to the Run command operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesRunCommandResponse>
        description: Promise<Models.VirtualMachinesRunCommandResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.start'
    name: 'start(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.update'
    name: 'update(string, string, VirtualMachineUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmName
          type:
            - string
          description: The name of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineUpdate'
          description: Parameters supplied to the Update Virtual Machine operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachinesUpdateResponse>
        description: Promise<Models.VirtualMachinesUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachines.constructor'
    name: VirtualMachines(ComputeManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a VirtualMachines.
    syntax:
      content: 'new VirtualMachines(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-compute.ComputeManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-compute'
references:
  - uid: '@azure/arm-compute.ComputeManagementClientContext'
    name: ComputeManagementClientContext
    spec.typeScript:
      - name: ComputeManagementClientContext
        fullName: ComputeManagementClientContext
        uid: '@azure/arm-compute.ComputeManagementClientContext'
  - uid: '@azure/arm-compute.VirtualMachineCaptureParameters'
    name: VirtualMachineCaptureParameters
    spec.typeScript:
      - name: VirtualMachineCaptureParameters
        fullName: VirtualMachineCaptureParameters
        uid: '@azure/arm-compute.VirtualMachineCaptureParameters'
  - uid: '@azure/arm-compute.VirtualMachine'
    name: VirtualMachine
    spec.typeScript:
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
  - uid: '@azure/arm-compute.RunCommandInput'
    name: RunCommandInput
    spec.typeScript:
      - name: RunCommandInput
        fullName: RunCommandInput
        uid: '@azure/arm-compute.RunCommandInput'
  - uid: '@azure/arm-compute.VirtualMachineUpdate'
    name: VirtualMachineUpdate
    spec.typeScript:
      - name: VirtualMachineUpdate
        fullName: VirtualMachineUpdate
        uid: '@azure/arm-compute.VirtualMachineUpdate'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachine>
    name: VirtualMachine>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-compute.VirtualMachinesGetOptionalParams'
    name: VirtualMachinesGetOptionalParams
    spec.typeScript:
      - name: VirtualMachinesGetOptionalParams
        fullName: VirtualMachinesGetOptionalParams
        uid: '@azure/arm-compute.VirtualMachinesGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineInstanceView>
    name: VirtualMachineInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineInstanceView
        fullName: VirtualMachineInstanceView
        uid: '@azure/arm-compute.VirtualMachineInstanceView'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineListResult>
    name: VirtualMachineListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineListResult
        fullName: VirtualMachineListResult
        uid: '@azure/arm-compute.VirtualMachineListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-compute.VirtualMachinesListAllOptionalParams'
    name: VirtualMachinesListAllOptionalParams
    spec.typeScript:
      - name: VirtualMachinesListAllOptionalParams
        fullName: VirtualMachinesListAllOptionalParams
        uid: '@azure/arm-compute.VirtualMachinesListAllOptionalParams'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineSizeListResult>
    name: VirtualMachineSizeListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineSizeListResult
        fullName: VirtualMachineSizeListResult
        uid: '@azure/arm-compute.VirtualMachineSizeListResult'
      - name: '>'
        fullName: '>'
