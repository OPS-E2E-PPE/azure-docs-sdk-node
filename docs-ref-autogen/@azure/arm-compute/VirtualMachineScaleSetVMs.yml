### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs'
    name: VirtualMachineScaleSetVMs
    fullName: VirtualMachineScaleSetVMs
    children:
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginDeallocate'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginDeleteMethod'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginPerformMaintenance'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginPowerOff'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRedeploy'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginReimage'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginReimageAll'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRestart'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRunCommand'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginStart'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.beginUpdate'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.deallocate'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.deleteMethod'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.get'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.get_1'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.get_2'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView_2'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView_1'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.list'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.list_1'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.list_2'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext_2'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext_1'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.performMaintenance'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.powerOff'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.redeploy'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.reimage'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.reimageAll'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.restart'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.runCommand'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.start'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.update'
      - '@azure/arm-compute.VirtualMachineScaleSetVMs.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a VirtualMachineScaleSetVMs.
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginDeallocate'
    name: 'beginDeallocate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and

      releases the compute resources it uses. You are not billed for the compute
      resources of this

      virtual machine once it is deallocated.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginPerformMaintenance'
    name: 'beginPerformMaintenance(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginPowerOff'
    name: >-
      beginPowerOff(string, string, string,
      Models.VirtualMachineScaleSetVMsBeginPowerOffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and

      you are getting charged for the resources. Instead, use deallocate to
      release resources and

      avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?:
        Models.VirtualMachineScaleSetVMsBeginPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsBeginPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRedeploy'
    name: 'beginRedeploy(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine in the virtual machine scale set, moves it
      to a new node, and

      powers it back on.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginReimage'
    name: >-
      beginReimage(string, string, string,
      Models.VirtualMachineScaleSetVMsBeginReimageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?:
        Models.VirtualMachineScaleSetVMsBeginReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsBeginReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginReimageAll'
    name: 'beginReimageAll(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance.

      This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRestart'
    name: 'beginRestart(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginRunCommand'
    name: >-
      beginRunCommand(string, string, string, RunCommandInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, parameters: RunCommandInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.RunCommandInput'
          description: Parameters supplied to the Run command operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginStart'
    name: 'beginStart(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.beginUpdate'
    name: >-
      beginUpdate(string, string, string, VirtualMachineScaleSetVM,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set where the extension should be create or
            updated.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVM'
          description: >-
            Parameters supplied to the Update Virtual Machine Scale Sets VM
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.deallocate'
    name: 'deallocate(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and

      releases the compute resources it uses. You are not billed for the compute
      resources of this

      virtual machine once it is deallocated.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.get'
    name: >-
      get(string, string, string,
      Models.VirtualMachineScaleSetVMsGetOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a virtual machine from a VM scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?:
        Models.VirtualMachineScaleSetVMsGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsGetResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsGetResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.get_1'
    name: 'get(string, string, string, ServiceCallback<VirtualMachineScaleSetVM>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVM>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.get_2'
    name: >-
      get(string, string, string, VirtualMachineScaleSetVMsGetOptionalParams,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: VirtualMachineScaleSetVMsGetOptionalParams,
        callback: ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMsGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVM>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView'
    name: 'getInstanceView(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsGetInstanceViewResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsGetInstanceViewResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView_2'
    name: >-
      getInstanceView(string, string, string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.getInstanceView_1'
    name: >-
      getInstanceView(string, string, string,
      ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback:
        ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMInstanceView>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.list'
    name: 'list(string, string, Models.VirtualMachineScaleSetVMsListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, options?: Models.VirtualMachineScaleSetVMsListOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: virtualMachineScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsListResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsListResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.list_1'
    name: 'list(string, string, ServiceCallback<VirtualMachineScaleSetVMListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, callback: ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: virtualMachineScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.list_2'
    name: >-
      list(string, string, VirtualMachineScaleSetVMsListOptionalParams,
      ServiceCallback<VirtualMachineScaleSetVMListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, options: VirtualMachineScaleSetVMsListOptionalParams, callback:
        ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: virtualMachineScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVMsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsListNextResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsListNextResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<VirtualMachineScaleSetVMListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.listNext_1'
    name: 'listNext(string, ServiceCallback<VirtualMachineScaleSetVMListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMListResult>
          description: |
            The callback
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.performMaintenance'
    name: 'performMaintenance(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.powerOff'
    name: >-
      powerOff(string, string, string,
      Models.VirtualMachineScaleSetVMsPowerOffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and

      you are getting charged for the resources. Instead, use deallocate to
      release resources and

      avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?:
        Models.VirtualMachineScaleSetVMsPowerOffOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsPowerOffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.redeploy'
    name: 'redeploy(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Shuts down the virtual machine in the virtual machine scale set, moves it
      to a new node, and

      powers it back on.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.reimage'
    name: >-
      reimage(string, string, string,
      Models.VirtualMachineScaleSetVMsReimageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?:
        Models.VirtualMachineScaleSetVMsReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - Models.VirtualMachineScaleSetVMsReimageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.reimageAll'
    name: 'reimageAll(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance.

      This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.restart'
    name: 'restart(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.runCommand'
    name: >-
      runCommand(string, string, string, RunCommandInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: RunCommandInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.RunCommandInput'
          description: Parameters supplied to the Run command operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsRunCommandResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsRunCommandResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.start'
    name: 'start(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.update'
    name: >-
      update(string, string, string, VirtualMachineScaleSetVM,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set where the extension should be create or
            updated.
        - id: instanceId
          type:
            - string
          description: The instance ID of the virtual machine.
        - id: parameters
          type:
            - '@azure/arm-compute.VirtualMachineScaleSetVM'
          description: >-
            Parameters supplied to the Update Virtual Machine Scale Sets VM
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VirtualMachineScaleSetVMsUpdateResponse>
        description: Promise<Models.VirtualMachineScaleSetVMsUpdateResponse>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMs.constructor'
    name: VirtualMachineScaleSetVMs(ComputeManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a VirtualMachineScaleSetVMs.
    syntax:
      content: 'new VirtualMachineScaleSetVMs(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-compute.ComputeManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-compute'
references:
  - uid: '@azure/arm-compute.ComputeManagementClientContext'
    name: ComputeManagementClientContext
    spec.typeScript:
      - name: ComputeManagementClientContext
        fullName: ComputeManagementClientContext
        uid: '@azure/arm-compute.ComputeManagementClientContext'
  - uid: '@azure/arm-compute.RunCommandInput'
    name: RunCommandInput
    spec.typeScript:
      - name: RunCommandInput
        fullName: RunCommandInput
        uid: '@azure/arm-compute.RunCommandInput'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVM'
    name: VirtualMachineScaleSetVM
    spec.typeScript:
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: '@azure/arm-compute.VirtualMachineScaleSetVM'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVM>
    name: VirtualMachineScaleSetVM>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: '@azure/arm-compute.VirtualMachineScaleSetVM'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMsGetOptionalParams'
    name: VirtualMachineScaleSetVMsGetOptionalParams
    spec.typeScript:
      - name: VirtualMachineScaleSetVMsGetOptionalParams
        fullName: VirtualMachineScaleSetVMsGetOptionalParams
        uid: '@azure/arm-compute.VirtualMachineScaleSetVMsGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMInstanceView>
    name: VirtualMachineScaleSetVMInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVMInstanceView
        fullName: VirtualMachineScaleSetVMInstanceView
        uid: '@azure/arm-compute.VirtualMachineScaleSetVMInstanceView'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-compute.VirtualMachineScaleSetVMListResult>
    name: VirtualMachineScaleSetVMListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVMListResult
        fullName: VirtualMachineScaleSetVMListResult
        uid: '@azure/arm-compute.VirtualMachineScaleSetVMListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-compute.VirtualMachineScaleSetVMsListOptionalParams'
    name: VirtualMachineScaleSetVMsListOptionalParams
    spec.typeScript:
      - name: VirtualMachineScaleSetVMsListOptionalParams
        fullName: VirtualMachineScaleSetVMsListOptionalParams
        uid: '@azure/arm-compute.VirtualMachineScaleSetVMsListOptionalParams'
