### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-webservices.WebServices'
    name: WebServices
    fullName: WebServices
    children:
      - '@azure/arm-webservices.WebServices.beginCreateOrUpdate'
      - '@azure/arm-webservices.WebServices.beginCreateRegionalProperties'
      - '@azure/arm-webservices.WebServices.beginPatch'
      - '@azure/arm-webservices.WebServices.beginRemove'
      - '@azure/arm-webservices.WebServices.createOrUpdate'
      - '@azure/arm-webservices.WebServices.createRegionalProperties'
      - '@azure/arm-webservices.WebServices.get'
      - '@azure/arm-webservices.WebServices.get_1'
      - '@azure/arm-webservices.WebServices.get_2'
      - '@azure/arm-webservices.WebServices.listByResourceGroup'
      - '@azure/arm-webservices.WebServices.listByResourceGroup_1'
      - '@azure/arm-webservices.WebServices.listByResourceGroup_2'
      - '@azure/arm-webservices.WebServices.listByResourceGroupNext'
      - '@azure/arm-webservices.WebServices.listByResourceGroupNext_2'
      - '@azure/arm-webservices.WebServices.listByResourceGroupNext_1'
      - '@azure/arm-webservices.WebServices.listBySubscriptionId'
      - '@azure/arm-webservices.WebServices.listBySubscriptionId_1'
      - '@azure/arm-webservices.WebServices.listBySubscriptionId_2'
      - '@azure/arm-webservices.WebServices.listBySubscriptionIdNext'
      - '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_2'
      - '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_1'
      - '@azure/arm-webservices.WebServices.listKeys'
      - '@azure/arm-webservices.WebServices.listKeys_2'
      - '@azure/arm-webservices.WebServices.listKeys_1'
      - '@azure/arm-webservices.WebServices.patch'
      - '@azure/arm-webservices.WebServices.remove'
      - '@azure/arm-webservices.WebServices.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a WebServices.
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, WebService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that

      there is no warning or confirmation. This is a nonrecoverable operation.
      If your intent is to

      create a new web service, call the Get operation first to verify that it
      does not exist.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, webServiceName:
        string, createOrUpdatePayload: WebService, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type:
            - '@azure/arm-webservices.WebService'
          description: The payload that is used to create or update the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.beginCreateRegionalProperties'
    name: >-
      beginCreateRegionalProperties(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in

      that region. You only need to do this before the first time that you get
      the web service in the

      new region.
    syntax:
      content: >-
        function beginCreateRegionalProperties(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: region
          type:
            - string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.beginPatch'
    name: 'beginPatch(string, string, WebService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    syntax:
      content: >-
        function beginPatch(resourceGroupName: string, webServiceName: string,
        patchPayload: WebService, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: patchPayload
          type:
            - '@azure/arm-webservices.WebService'
          description: The payload to use to patch the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.beginRemove'
    name: 'beginRemove(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified web service.
    syntax:
      content: >-
        function beginRemove(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.createOrUpdate'
    name: 'createOrUpdate(string, string, WebService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that

      there is no warning or confirmation. This is a nonrecoverable operation.
      If your intent is to

      create a new web service, call the Get operation first to verify that it
      does not exist.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, webServiceName:
        string, createOrUpdatePayload: WebService, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type:
            - '@azure/arm-webservices.WebService'
          description: The payload that is used to create or update the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesCreateOrUpdateResponse>
        description: Promise<Models.WebServicesCreateOrUpdateResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.createRegionalProperties'
    name: >-
      createRegionalProperties(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in

      that region. You only need to do this before the first time that you get
      the web service in the

      new region.
    syntax:
      content: >-
        function createRegionalProperties(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: region
          type:
            - string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesCreateRegionalPropertiesResponse>
        description: Promise<Models.WebServicesCreateRegionalPropertiesResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.get'
    name: 'get(string, string, Models.WebServicesGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Web Service Definition as specified by a subscription, resource
      group, and name. Note

      that the storage credentials and web service keys are not returned by this
      call. To get the web

      service access keys, call List Keys.
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string,
        options?: Models.WebServicesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - Models.WebServicesGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesGetResponse>
        description: Promise<Models.WebServicesGetResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.get_1'
    name: 'get(string, string, ServiceCallback<WebService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string,
        callback: ServiceCallback<WebService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.WebService>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.get_2'
    name: >-
      get(string, string, WebServicesGetOptionalParams,
      ServiceCallback<WebService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string, options:
        WebServicesGetOptionalParams, callback: ServiceCallback<WebService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - '@azure/arm-webservices.WebServicesGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.WebService>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.WebServicesListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the web services in the specified resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.WebServicesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: options
          type:
            - Models.WebServicesListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesListByResourceGroupResponse>
        description: Promise<Models.WebServicesListByResourceGroupResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<PaginatedWebServicesList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, WebServicesListByResourceGroupOptionalParams,
      ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        WebServicesListByResourceGroupOptionalParams, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: options
          type:
            - >-
              @azure/arm-webservices.WebServicesListByResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the web services in the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesListByResourceGroupNextResponse>
        description: Promise<Models.WebServicesListByResourceGroupNextResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<PaginatedWebServicesList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionId'
    name: listBySubscriptionId(Models.WebServicesListBySubscriptionIdOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the web services in the specified subscription.
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        Models.WebServicesListBySubscriptionIdOptionalParams)
      parameters:
        - id: options
          type:
            - Models.WebServicesListBySubscriptionIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesListBySubscriptionIdResponse>
        description: Promise<Models.WebServicesListBySubscriptionIdResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionId_1'
    name: listBySubscriptionId(ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionId(callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionId_2'
    name: >-
      listBySubscriptionId(WebServicesListBySubscriptionIdOptionalParams,
      ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionId(options:
        WebServicesListBySubscriptionIdOptionalParams, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-webservices.WebServicesListBySubscriptionIdOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext'
    name: 'listBySubscriptionIdNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the web services in the specified subscription.
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesListBySubscriptionIdNextResponse>
        description: Promise<Models.WebServicesListBySubscriptionIdNextResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_2'
    name: >-
      listBySubscriptionIdNext(string, RequestOptionsBase,
      ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_1'
    name: >-
      listBySubscriptionIdNext(string,
      ServiceCallback<PaginatedWebServicesList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the access keys for the specified web service.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesListKeysResponse>
        description: Promise<Models.WebServicesListKeysResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listKeys_2'
    name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<WebServiceKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<WebServiceKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.WebServiceKeys>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<WebServiceKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        callback: ServiceCallback<WebServiceKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-webservices.WebServiceKeys>
          description: |
            The callback
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.patch'
    name: 'patch(string, string, WebService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    syntax:
      content: >-
        function patch(resourceGroupName: string, webServiceName: string,
        patchPayload: WebService, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: patchPayload
          type:
            - '@azure/arm-webservices.WebService'
          description: The payload to use to patch the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WebServicesPatchResponse>
        description: Promise<Models.WebServicesPatchResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.remove'
    name: 'remove(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified web service.
    syntax:
      content: >-
        function remove(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type:
            - string
          description: The name of the web service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-webservices'
  - uid: '@azure/arm-webservices.WebServices.constructor'
    name: WebServices(AzureMLWebServicesManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a WebServices.
    syntax:
      content: 'new WebServices(client: AzureMLWebServicesManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-webservices.AzureMLWebServicesManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-webservices'
references:
  - uid: '@azure/arm-webservices.AzureMLWebServicesManagementClientContext'
    name: AzureMLWebServicesManagementClientContext
    spec.typeScript:
      - name: AzureMLWebServicesManagementClientContext
        fullName: AzureMLWebServicesManagementClientContext
        uid: '@azure/arm-webservices.AzureMLWebServicesManagementClientContext'
  - uid: '@azure/arm-webservices.WebService'
    name: WebService
    spec.typeScript:
      - name: WebService
        fullName: WebService
        uid: '@azure/arm-webservices.WebService'
  - uid: ServiceCallback<@azure/arm-webservices.WebService>
    name: WebService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebService
        fullName: WebService
        uid: '@azure/arm-webservices.WebService'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-webservices.WebServicesGetOptionalParams'
    name: WebServicesGetOptionalParams
    spec.typeScript:
      - name: WebServicesGetOptionalParams
        fullName: WebServicesGetOptionalParams
        uid: '@azure/arm-webservices.WebServicesGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-webservices.PaginatedWebServicesList>
    name: PaginatedWebServicesList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PaginatedWebServicesList
        fullName: PaginatedWebServicesList
        uid: '@azure/arm-webservices.PaginatedWebServicesList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-webservices.WebServicesListByResourceGroupOptionalParams'
    name: WebServicesListByResourceGroupOptionalParams
    spec.typeScript:
      - name: WebServicesListByResourceGroupOptionalParams
        fullName: WebServicesListByResourceGroupOptionalParams
        uid: '@azure/arm-webservices.WebServicesListByResourceGroupOptionalParams'
  - uid: '@azure/arm-webservices.WebServicesListBySubscriptionIdOptionalParams'
    name: WebServicesListBySubscriptionIdOptionalParams
    spec.typeScript:
      - name: WebServicesListBySubscriptionIdOptionalParams
        fullName: WebServicesListBySubscriptionIdOptionalParams
        uid: '@azure/arm-webservices.WebServicesListBySubscriptionIdOptionalParams'
  - uid: ServiceCallback<@azure/arm-webservices.WebServiceKeys>
    name: WebServiceKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WebServiceKeys
        fullName: WebServiceKeys
        uid: '@azure/arm-webservices.WebServiceKeys'
      - name: '>'
        fullName: '>'
