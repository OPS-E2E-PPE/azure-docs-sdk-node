### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-azurestack.CustomerSubscriptions'
    name: CustomerSubscriptions
    fullName: CustomerSubscriptions
    children:
      - '@azure/arm-azurestack.CustomerSubscriptions.create'
      - '@azure/arm-azurestack.CustomerSubscriptions.create_2'
      - '@azure/arm-azurestack.CustomerSubscriptions.create_1'
      - '@azure/arm-azurestack.CustomerSubscriptions.constructor'
      - '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod'
      - '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod_2'
      - '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod_1'
      - '@azure/arm-azurestack.CustomerSubscriptions.get'
      - '@azure/arm-azurestack.CustomerSubscriptions.get_2'
      - '@azure/arm-azurestack.CustomerSubscriptions.get_1'
      - '@azure/arm-azurestack.CustomerSubscriptions.list'
      - '@azure/arm-azurestack.CustomerSubscriptions.list_2'
      - '@azure/arm-azurestack.CustomerSubscriptions.list_1'
      - '@azure/arm-azurestack.CustomerSubscriptions.listNext'
      - '@azure/arm-azurestack.CustomerSubscriptions.listNext_2'
      - '@azure/arm-azurestack.CustomerSubscriptions.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a CustomerSubscriptions.
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.create'
    name: >-
      create(string, string, string, CustomerSubscription,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new customer subscription under a registration.
    syntax:
      content: >-
        function create(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, customerCreationParameters:
        CustomerSubscription, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: customerCreationParameters
          type:
            - '@azure/arm-azurestack.CustomerSubscription'
          description: Parameters use to create a customer subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CustomerSubscriptionsCreateResponse>
        description: Promise<Models.CustomerSubscriptionsCreateResponse>
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.create_2'
    name: >-
      create(string, string, string, CustomerSubscription, RequestOptionsBase,
      ServiceCallback<CustomerSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, customerCreationParameters:
        CustomerSubscription, options: RequestOptionsBase, callback:
        ServiceCallback<CustomerSubscription>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: customerCreationParameters
          type:
            - '@azure/arm-azurestack.CustomerSubscription'
          description: Parameters use to create a customer subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscription>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.create_1'
    name: >-
      create(string, string, string, CustomerSubscription,
      ServiceCallback<CustomerSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, customerCreationParameters:
        CustomerSubscription, callback: ServiceCallback<CustomerSubscription>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: customerCreationParameters
          type:
            - '@azure/arm-azurestack.CustomerSubscription'
          description: Parameters use to create a customer subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscription>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.constructor'
    name: CustomerSubscriptions(AzureStackManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a CustomerSubscriptions.
    syntax:
      content: 'new CustomerSubscriptions(client: AzureStackManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-azurestack.AzureStackManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a customer subscription under a registration.
    syntax:
      content: >-
        function deleteMethod(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the specified product.
    syntax:
      content: >-
        function get(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CustomerSubscriptionsGetResponse>
        description: Promise<Models.CustomerSubscriptionsGetResponse>
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<CustomerSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CustomerSubscription>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscription>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.get_1'
    name: 'get(string, string, string, ServiceCallback<CustomerSubscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroup: string, registrationName: string,
        customerSubscriptionName: string, callback:
        ServiceCallback<CustomerSubscription>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: customerSubscriptionName
          type:
            - string
          description: Name of the product.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscription>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of products.
    syntax:
      content: >-
        function list(resourceGroup: string, registrationName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CustomerSubscriptionsListResponse>
        description: Promise<Models.CustomerSubscriptionsListResponse>
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.list_2'
    name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<CustomerSubscriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroup: string, registrationName: string, options:
        RequestOptionsBase, callback: ServiceCallback<CustomerSubscriptionList>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscriptionList>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.list_1'
    name: 'list(string, string, ServiceCallback<CustomerSubscriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroup: string, registrationName: string, callback:
        ServiceCallback<CustomerSubscriptionList>)
      parameters:
        - id: resourceGroup
          type:
            - string
          description: Name of the resource group.
        - id: registrationName
          type:
            - string
          description: Name of the Azure Stack registration.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscriptionList>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of products.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CustomerSubscriptionsListNextResponse>
        description: Promise<Models.CustomerSubscriptionsListNextResponse>
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<CustomerSubscriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<CustomerSubscriptionList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscriptionList>
          description: |
            The callback
    package: '@azure/arm-azurestack'
  - uid: '@azure/arm-azurestack.CustomerSubscriptions.listNext_1'
    name: 'listNext(string, ServiceCallback<CustomerSubscriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CustomerSubscriptionList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-azurestack.CustomerSubscriptionList>
          description: |
            The callback
    package: '@azure/arm-azurestack'
references:
  - uid: '@azure/arm-azurestack.AzureStackManagementClientContext'
    name: AzureStackManagementClientContext
    spec.typeScript:
      - name: AzureStackManagementClientContext
        fullName: AzureStackManagementClientContext
        uid: '@azure/arm-azurestack.AzureStackManagementClientContext'
  - uid: '@azure/arm-azurestack.CustomerSubscription'
    name: CustomerSubscription
    spec.typeScript:
      - name: CustomerSubscription
        fullName: CustomerSubscription
        uid: '@azure/arm-azurestack.CustomerSubscription'
  - uid: ServiceCallback<@azure/arm-azurestack.CustomerSubscription>
    name: CustomerSubscription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CustomerSubscription
        fullName: CustomerSubscription
        uid: '@azure/arm-azurestack.CustomerSubscription'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-azurestack.CustomerSubscriptionList>
    name: CustomerSubscriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CustomerSubscriptionList
        fullName: CustomerSubscriptionList
        uid: '@azure/arm-azurestack.CustomerSubscriptionList'
      - name: '>'
        fullName: '>'
