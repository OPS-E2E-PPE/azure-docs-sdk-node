### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService'
    name: AmazonMWSLinkedService
    fullName: AmazonMWSLinkedService
    children:
      - '@azure/arm-datafactory.AmazonMWSLinkedService.accessKeyId'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.annotations'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.connectVia'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.description'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.encryptedCredential'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.endpoint'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.marketplaceID'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.mwsAuthToken'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.parameters'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.secretKey'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.sellerID'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.type'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.useEncryptedEndpoints'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.useHostVerification'
      - '@azure/arm-datafactory.AmazonMWSLinkedService.usePeerVerification'
    langs:
      - typeScript
    type: interface
    summary: Amazon Marketplace Web Service linked service.
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.accessKeyId'
    name: accessKeyId
    fullName: accessKeyId
    children: []
    langs:
      - typeScript
    type: property
    summary: The access key id used to access data.
    syntax:
      content: 'accessKeyId: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.annotations'
    name: annotations
    fullName: annotations
    children: []
    langs:
      - typeScript
    type: property
    summary: List of tags that can be used for describing the linked service.
    optional: true
    syntax:
      content: 'annotations?: any[]'
      return:
        type:
          - 'any[]'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.connectVia'
    name: connectVia
    fullName: connectVia
    children: []
    langs:
      - typeScript
    type: property
    summary: The integration runtime reference.
    optional: true
    syntax:
      content: 'connectVia?: IntegrationRuntimeReference'
      return:
        type:
          - '@azure/arm-datafactory.IntegrationRuntimeReference'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: Linked service description.
    optional: true
    syntax:
      content: 'description?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.encryptedCredential'
    name: encryptedCredential
    fullName: encryptedCredential
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The encrypted credential used for authentication. Credentials are
      encrypted using the

      integration runtime credential manager. Type: string (or Expression with
      resultType string).
    optional: true
    syntax:
      content: 'encryptedCredential?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)'
    syntax:
      content: 'endpoint: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.marketplaceID'
    name: marketplaceID
    fullName: marketplaceID
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The Amazon Marketplace ID you want to retrieve data from. To retrieve data
      from multiple

      Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
    syntax:
      content: 'marketplaceID: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.mwsAuthToken'
    name: mwsAuthToken
    fullName: mwsAuthToken
    children: []
    langs:
      - typeScript
    type: property
    summary: The Amazon MWS authentication token.
    optional: true
    syntax:
      content: 'mwsAuthToken?: SecretBaseUnion'
      return:
        type:
          - '@azure/arm-datafactory.SecretBaseUnion'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.parameters'
    name: parameters
    fullName: parameters
    children: []
    langs:
      - typeScript
    type: property
    summary: Parameters for linked service.
    optional: true
    syntax:
      content: 'parameters?: undefined | [key: string]: ParameterSpecification'
      return:
        type:
          - >-
            undefined | [key: string]:
            @azure/arm-datafactory.ParameterSpecification
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.secretKey'
    name: secretKey
    fullName: secretKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The secret key used to access data.
    optional: true
    syntax:
      content: 'secretKey?: SecretBaseUnion'
      return:
        type:
          - '@azure/arm-datafactory.SecretBaseUnion'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.sellerID'
    name: sellerID
    fullName: sellerID
    children: []
    langs:
      - typeScript
    type: property
    summary: The Amazon seller ID.
    syntax:
      content: 'sellerID: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'type: "AmazonMWS"'
      return:
        type:
          - '"AmazonMWS"'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.useEncryptedEndpoints'
    name: useEncryptedEndpoints
    fullName: useEncryptedEndpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether the data source endpoints are encrypted using HTTPS. The
      default value is

      true.
    optional: true
    syntax:
      content: 'useEncryptedEndpoints?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.useHostVerification'
    name: useHostVerification
    fullName: useHostVerification
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether to require the host name in the server's certificate to
      match the host name

      of the server when connecting over SSL. The default value is true.
    optional: true
    syntax:
      content: 'useHostVerification?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.AmazonMWSLinkedService.usePeerVerification'
    name: usePeerVerification
    fullName: usePeerVerification
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether to verify the identity of the server when connecting
      over SSL. The default

      value is true.
    optional: true
    syntax:
      content: 'usePeerVerification?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
references:
  - uid: '@azure/arm-datafactory.IntegrationRuntimeReference'
    name: IntegrationRuntimeReference
    spec.typeScript:
      - name: IntegrationRuntimeReference
        fullName: IntegrationRuntimeReference
        uid: '@azure/arm-datafactory.IntegrationRuntimeReference'
  - uid: '@azure/arm-datafactory.SecretBaseUnion'
    name: SecretBaseUnion
    spec.typeScript:
      - name: SecretBaseUnion
        fullName: SecretBaseUnion
        uid: '@azure/arm-datafactory.SecretBaseUnion'
  - uid: 'undefined | [key: string]: @azure/arm-datafactory.ParameterSpecification'
    name: ParameterSpecification
    spec.typeScript:
      - name: 'undefined | [key: string]: '
        fullName: 'undefined | [key: string]: '
      - name: ParameterSpecification
        fullName: ParameterSpecification
        uid: '@azure/arm-datafactory.ParameterSpecification'
