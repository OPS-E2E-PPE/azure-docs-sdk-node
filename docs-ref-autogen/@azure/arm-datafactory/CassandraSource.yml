### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-datafactory.CassandraSource'
    name: CassandraSource
    fullName: CassandraSource
    children:
      - '@azure/arm-datafactory.CassandraSource.additionalColumns'
      - '@azure/arm-datafactory.CassandraSource.consistencyLevel'
      - '@azure/arm-datafactory.CassandraSource.maxConcurrentConnections'
      - '@azure/arm-datafactory.CassandraSource.query'
      - '@azure/arm-datafactory.CassandraSource.queryTimeout'
      - '@azure/arm-datafactory.CassandraSource.sourceRetryCount'
      - '@azure/arm-datafactory.CassandraSource.sourceRetryWait'
      - '@azure/arm-datafactory.CassandraSource.type'
    langs:
      - typeScript
    type: interface
    summary: A copy activity source for a Cassandra database.
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.additionalColumns'
    name: additionalColumns
    fullName: additionalColumns
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the additional columns to be added to source data. Type: array
      of objects (or

      Expression with resultType array of objects).
    optional: true
    syntax:
      content: 'additionalColumns?: AdditionalColumns[]'
      return:
        type:
          - '@azure/arm-datafactory.AdditionalColumns[]'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.consistencyLevel'
    name: consistencyLevel
    fullName: consistencyLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The consistency level specifies how many Cassandra servers must respond to
      a read request

      before returning data to the client application. Cassandra checks the
      specified number of

      Cassandra servers for data to satisfy the read request. Must be one of

      cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is
      case-insensitive.

      Possible values include: 'ALL', 'EACH_QUORUM', 'QUORUM', 'LOCAL_QUORUM',
      'ONE', 'TWO',

      'THREE', 'LOCAL_ONE', 'SERIAL', 'LOCAL_SERIAL'
    optional: true
    syntax:
      content: 'consistencyLevel?: CassandraSourceReadConsistencyLevels'
      return:
        type:
          - '@azure/arm-datafactory.CassandraSourceReadConsistencyLevels'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.maxConcurrentConnections'
    name: maxConcurrentConnections
    fullName: maxConcurrentConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum concurrent connection count for the source data store. Type:
      integer (or

      Expression with resultType integer).
    optional: true
    syntax:
      content: 'maxConcurrentConnections?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.query'
    name: query
    fullName: query
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Database query. Should be a SQL-92 query expression or Cassandra Query
      Language (CQL) command.

      Type: string (or Expression with resultType string).
    optional: true
    syntax:
      content: 'query?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.queryTimeout'
    name: queryTimeout
    fullName: queryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Query timeout. Type: string (or Expression with resultType string),
      pattern:

      ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
    optional: true
    syntax:
      content: 'queryTimeout?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.sourceRetryCount'
    name: sourceRetryCount
    fullName: sourceRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Source retry count. Type: integer (or Expression with resultType integer).'
    optional: true
    syntax:
      content: 'sourceRetryCount?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.sourceRetryWait'
    name: sourceRetryWait
    fullName: sourceRetryWait
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Source retry wait. Type: string (or Expression with resultType string),
      pattern:

      ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
    optional: true
    syntax:
      content: 'sourceRetryWait?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.CassandraSource.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'type: "CassandraSource"'
      return:
        type:
          - '"CassandraSource"'
        description: ''
    package: '@azure/arm-datafactory'
references:
  - uid: '@azure/arm-datafactory.AdditionalColumns[]'
    name: 'AdditionalColumns[]'
    spec.typeScript:
      - name: AdditionalColumns
        fullName: AdditionalColumns
        uid: '@azure/arm-datafactory.AdditionalColumns'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-datafactory.CassandraSourceReadConsistencyLevels'
    name: CassandraSourceReadConsistencyLevels
    spec.typeScript:
      - name: CassandraSourceReadConsistencyLevels
        fullName: CassandraSourceReadConsistencyLevels
        uid: '@azure/arm-datafactory.CassandraSourceReadConsistencyLevels'
