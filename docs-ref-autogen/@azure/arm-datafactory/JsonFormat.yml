### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-datafactory.JsonFormat'
    name: JsonFormat
    fullName: JsonFormat
    children:
      - '@azure/arm-datafactory.JsonFormat.deserializer'
      - '@azure/arm-datafactory.JsonFormat.encodingName'
      - '@azure/arm-datafactory.JsonFormat.filePattern'
      - '@azure/arm-datafactory.JsonFormat.jsonNodeReference'
      - '@azure/arm-datafactory.JsonFormat.jsonPathDefinition'
      - '@azure/arm-datafactory.JsonFormat.nestingSeparator'
      - '@azure/arm-datafactory.JsonFormat.serializer'
      - '@azure/arm-datafactory.JsonFormat.type'
    langs:
      - typeScript
    type: interface
    summary: The data stored in JSON format.
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.deserializer'
    name: deserializer
    fullName: deserializer
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Deserializer. Type: string (or Expression with resultType string).'
    optional: true
    syntax:
      content: 'deserializer?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.encodingName'
    name: encodingName
    fullName: encodingName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The code page name of the preferred encoding. If not provided, the default
      value is 'utf-8',

      unless the byte order mark (BOM) denotes another Unicode encoding. The
      full list of supported

      values can be found in the 'Name' column of the table of encodings in the
      following reference:

      https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or
      Expression with resultType

      string).
    optional: true
    syntax:
      content: 'encodingName?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.filePattern'
    name: filePattern
    fullName: filePattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      File pattern of JSON. To be more specific, the way of separating a
      collection of JSON objects.

      The default value is 'setOfObjects'. It is case-sensitive.
    optional: true
    syntax:
      content: 'filePattern?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.jsonNodeReference'
    name: jsonNodeReference
    fullName: jsonNodeReference
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The JSONPath of the JSON array element to be flattened. Example:
      "$.ArrayPath". Type: string

      (or Expression with resultType string).
    optional: true
    syntax:
      content: 'jsonNodeReference?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.jsonPathDefinition'
    name: jsonPathDefinition
    fullName: jsonPathDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The JSONPath definition for each column mapping with a customized column
      name to extract data

      from JSON file. For fields under root object, start with "$"; for fields
      inside the array

      chosen by jsonNodeReference property, start from the array element.
      Example: {"Column1":

      "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or
      Expression with resultType

      object).
    optional: true
    syntax:
      content: 'jsonPathDefinition?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.nestingSeparator'
    name: nestingSeparator
    fullName: nestingSeparator
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The character used to separate nesting levels. Default value is '.' (dot).
      Type: string (or

      Expression with resultType string).
    optional: true
    syntax:
      content: 'nestingSeparator?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.serializer'
    name: serializer
    fullName: serializer
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Serializer. Type: string (or Expression with resultType string).'
    optional: true
    syntax:
      content: 'serializer?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.JsonFormat.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'type: "JsonFormat"'
      return:
        type:
          - '"JsonFormat"'
        description: ''
    package: '@azure/arm-datafactory'
