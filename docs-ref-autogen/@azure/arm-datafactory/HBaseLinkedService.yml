### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-datafactory.HBaseLinkedService'
    name: HBaseLinkedService
    fullName: HBaseLinkedService
    children:
      - '@azure/arm-datafactory.HBaseLinkedService.allowHostNameCNMismatch'
      - '@azure/arm-datafactory.HBaseLinkedService.allowSelfSignedServerCert'
      - '@azure/arm-datafactory.HBaseLinkedService.annotations'
      - '@azure/arm-datafactory.HBaseLinkedService.authenticationType'
      - '@azure/arm-datafactory.HBaseLinkedService.connectVia'
      - '@azure/arm-datafactory.HBaseLinkedService.description'
      - '@azure/arm-datafactory.HBaseLinkedService.enableSsl'
      - '@azure/arm-datafactory.HBaseLinkedService.encryptedCredential'
      - '@azure/arm-datafactory.HBaseLinkedService.host'
      - '@azure/arm-datafactory.HBaseLinkedService.httpPath'
      - '@azure/arm-datafactory.HBaseLinkedService.parameters'
      - '@azure/arm-datafactory.HBaseLinkedService.password'
      - '@azure/arm-datafactory.HBaseLinkedService.port'
      - '@azure/arm-datafactory.HBaseLinkedService.trustedCertPath'
      - '@azure/arm-datafactory.HBaseLinkedService.type'
      - '@azure/arm-datafactory.HBaseLinkedService.username'
    langs:
      - typeScript
    type: interface
    summary: HBase server linked service.
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.allowHostNameCNMismatch'
    name: allowHostNameCNMismatch
    fullName: allowHostNameCNMismatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether to require a CA-issued SSL certificate name to match the
      host name of the

      server when connecting over SSL. The default value is false.
    optional: true
    syntax:
      content: 'allowHostNameCNMismatch?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.allowSelfSignedServerCert'
    name: allowSelfSignedServerCert
    fullName: allowSelfSignedServerCert
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether to allow self-signed certificates from the server. The
      default value is

      false.
    optional: true
    syntax:
      content: 'allowSelfSignedServerCert?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.annotations'
    name: annotations
    fullName: annotations
    children: []
    langs:
      - typeScript
    type: property
    summary: List of tags that can be used for describing the linked service.
    optional: true
    syntax:
      content: 'annotations?: any[]'
      return:
        type:
          - 'any[]'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.authenticationType'
    name: authenticationType
    fullName: authenticationType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The authentication mechanism to use to connect to the HBase server.
      Possible values include:

      'Anonymous', 'Basic'
    syntax:
      content: 'authenticationType: HBaseAuthenticationType'
      return:
        type:
          - '@azure/arm-datafactory.HBaseAuthenticationType'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.connectVia'
    name: connectVia
    fullName: connectVia
    children: []
    langs:
      - typeScript
    type: property
    summary: The integration runtime reference.
    optional: true
    syntax:
      content: 'connectVia?: IntegrationRuntimeReference'
      return:
        type:
          - '@azure/arm-datafactory.IntegrationRuntimeReference'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: Linked service description.
    optional: true
    syntax:
      content: 'description?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.enableSsl'
    name: enableSsl
    fullName: enableSsl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether the connections to the server are encrypted using SSL.
      The default value is

      false.
    optional: true
    syntax:
      content: 'enableSsl?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.encryptedCredential'
    name: encryptedCredential
    fullName: encryptedCredential
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The encrypted credential used for authentication. Credentials are
      encrypted using the

      integration runtime credential manager. Type: string (or Expression with
      resultType string).
    optional: true
    syntax:
      content: 'encryptedCredential?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.host'
    name: host
    fullName: host
    children: []
    langs:
      - typeScript
    type: property
    summary: The IP address or host name of the HBase server. (i.e. 192.168.222.160)
    syntax:
      content: 'host: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.httpPath'
    name: httpPath
    fullName: httpPath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The partial URL corresponding to the HBase server. (i.e.
      /gateway/sandbox/hbase/version)
    optional: true
    syntax:
      content: 'httpPath?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.parameters'
    name: parameters
    fullName: parameters
    children: []
    langs:
      - typeScript
    type: property
    summary: Parameters for linked service.
    optional: true
    syntax:
      content: 'parameters?: undefined | [key: string]: ParameterSpecification'
      return:
        type:
          - >-
            undefined | [key: string]:
            @azure/arm-datafactory.ParameterSpecification
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.password'
    name: password
    fullName: password
    children: []
    langs:
      - typeScript
    type: property
    summary: The password corresponding to the user name.
    optional: true
    syntax:
      content: 'password?: SecretBaseUnion'
      return:
        type:
          - '@azure/arm-datafactory.SecretBaseUnion'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.port'
    name: port
    fullName: port
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The TCP port that the HBase instance uses to listen for client
      connections. The default value

      is 9090.
    optional: true
    syntax:
      content: 'port?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.trustedCertPath'
    name: trustedCertPath
    fullName: trustedCertPath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The full path of the .pem file containing trusted CA certificates for
      verifying the server

      when connecting over SSL. This property can only be set when using SSL on
      self-hosted IR. The

      default value is the cacerts.pem file installed with the IR.
    optional: true
    syntax:
      content: 'trustedCertPath?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'type: "HBase"'
      return:
        type:
          - '"HBase"'
        description: ''
    package: '@azure/arm-datafactory'
  - uid: '@azure/arm-datafactory.HBaseLinkedService.username'
    name: username
    fullName: username
    children: []
    langs:
      - typeScript
    type: property
    summary: The user name used to connect to the HBase instance.
    optional: true
    syntax:
      content: 'username?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/arm-datafactory'
references:
  - uid: '@azure/arm-datafactory.HBaseAuthenticationType'
    name: HBaseAuthenticationType
    spec.typeScript:
      - name: HBaseAuthenticationType
        fullName: HBaseAuthenticationType
        uid: '@azure/arm-datafactory.HBaseAuthenticationType'
  - uid: '@azure/arm-datafactory.IntegrationRuntimeReference'
    name: IntegrationRuntimeReference
    spec.typeScript:
      - name: IntegrationRuntimeReference
        fullName: IntegrationRuntimeReference
        uid: '@azure/arm-datafactory.IntegrationRuntimeReference'
  - uid: 'undefined | [key: string]: @azure/arm-datafactory.ParameterSpecification'
    name: ParameterSpecification
    spec.typeScript:
      - name: 'undefined | [key: string]: '
        fullName: 'undefined | [key: string]: '
      - name: ParameterSpecification
        fullName: ParameterSpecification
        uid: '@azure/arm-datafactory.ParameterSpecification'
  - uid: '@azure/arm-datafactory.SecretBaseUnion'
    name: SecretBaseUnion
    spec.typeScript:
      - name: SecretBaseUnion
        fullName: SecretBaseUnion
        uid: '@azure/arm-datafactory.SecretBaseUnion'
