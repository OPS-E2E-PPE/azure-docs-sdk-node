### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventDataBatch'
    name: EventDataBatch
    fullName: EventDataBatch
    children:
      - '@azure/event-hubs.EventDataBatch.count'
      - '@azure/event-hubs.EventDataBatch.maxSizeInBytes'
      - '@azure/event-hubs.EventDataBatch.sizeInBytes'
      - '@azure/event-hubs.EventDataBatch.tryAdd'
    langs:
      - typeScript
    type: interface
    summary: >+
      An interface representing a batch of events which can be used to send
      events to Event Hub.

      To create the batch, use the `createBatch()` method on the
      `EventHubProducerClient`.

      To send the batch, use the `sendBatch()` method on the same client.

      To fill the batch, use the `tryAdd()` method on the batch itself.

    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventDataBatch.count'
    name: count
    fullName: count
    children: []
    langs:
      - typeScript
    type: property
    summary: Number of events added to the batch.
    syntax:
      content: 'count: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventDataBatch.maxSizeInBytes'
    name: maxSizeInBytes
    fullName: maxSizeInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum size of the batch, in bytes. The `tryAdd` function on the
      batch will return `false`

      if the event being added causes the size of the batch to exceed this
      limit. Use the `createBatch()` method on

      the `EventHubProducerClient` to set the maxSizeInBytes.
    syntax:
      content: 'maxSizeInBytes: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventDataBatch.sizeInBytes'
    name: sizeInBytes
    fullName: sizeInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Size of the batch in bytes after the events added to it have been encoded
      into a single AMQP

      message.
    syntax:
      content: 'sizeInBytes: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventDataBatch.tryAdd'
    name: 'tryAdd(EventData, TryAddOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds an event to the batch if permitted by the batch's size limit.

      **NOTE**: Always remember to check the return value of this method, before
      calling it again

      for the next event.
    syntax:
      content: 'function tryAdd(eventData: EventData, options?: TryAddOptions)'
      parameters:
        - id: eventData
          type:
            - '@azure/event-hubs.EventData'
          description: An individual event data object.
        - id: options
          type:
            - '@azure/event-hubs.TryAddOptions'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: >-
          A boolean value indicating if the event data has been added to the
          batch or not.
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventData'
    name: EventData
    spec.typeScript:
      - name: EventData
        fullName: EventData
        uid: '@azure/event-hubs.EventData'
  - uid: '@azure/event-hubs.TryAddOptions'
    name: TryAddOptions
    spec.typeScript:
      - name: TryAddOptions
        fullName: TryAddOptions
        uid: '@azure/event-hubs.TryAddOptions'
