### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventHubProducerClient'
    name: EventHubProducerClient
    fullName: EventHubProducerClient
    children:
      - '@azure/event-hubs.EventHubProducerClient.close'
      - '@azure/event-hubs.EventHubProducerClient.createBatch'
      - '@azure/event-hubs.EventHubProducerClient.eventHubName'
      - '@azure/event-hubs.EventHubProducerClient.constructor'
      - '@azure/event-hubs.EventHubProducerClient.constructor_1'
      - '@azure/event-hubs.EventHubProducerClient.constructor_2'
      - '@azure/event-hubs.EventHubProducerClient.fullyQualifiedNamespace'
      - '@azure/event-hubs.EventHubProducerClient.getEventHubProperties'
      - '@azure/event-hubs.EventHubProducerClient.getPartitionIds'
      - '@azure/event-hubs.EventHubProducerClient.getPartitionProperties'
      - '@azure/event-hubs.EventHubProducerClient.sendBatch'
    langs:
      - typeScript
    type: class
    summary: >+
      The `EventHubProducerClient` class is used to send events to an Event Hub.

      There are multiple ways to create an `EventHubProducerClient`

      - Use the connection string from the SAS policy created for your Event Hub
      instance.

      - Use the connection string from the SAS policy created for your Event Hub
      namespace,

      and the name of the Event Hub instance

      - Use the full namespace like `<yournamespace>.servicebus.windows.net`,
      and a credentials object.


      Optionally, you can also pass an options bag to configure the retry policy
      or proxy settings.

    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Closes the AMQP connection to the Event Hub instance,
      returning a promise that will be resolved when disconnection is completed.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
        description: Promise<void>
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.createBatch'
    name: createBatch(CreateBatchOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of `EventDataBatch` to which one can add events until
      the maximum supported size is reached.

      The batch can be passed to the <xref:sendBatch> method of the
      `EventHubProducerClient` to be sent to Azure Event Hubs.
    syntax:
      content: 'function createBatch(options?: CreateBatchOptions)'
      parameters:
        - id: options
          type:
            - '@azure/event-hubs.CreateBatchOptions'
          description: >-
            Configures the behavior of the batch.

            - `partitionKey`  : A value that is hashed and used by the Azure
            Event Hubs service to determine the partition to which

            the events need to be sent.

            - `partitionId`   : Id of the partition to which the batch of events
            need to be sent.

            - `maxSizeInBytes`: The upper limit for the size of batch. The
            `tryAdd` function will return `false` after this limit is reached.

            - `abortSignal`   : A signal the request to cancel the operation.
          optional: true
      return:
        type:
          - Promise<@azure/event-hubs.EventDataBatch>
        description: Promise<EventDataBatch>
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.eventHubName'
    name: eventHubName
    fullName: eventHubName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string eventHubName
      return:
        type:
          - string
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.constructor'
    name: 'EventHubProducerClient(string, EventHubClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new EventHubProducerClient(connectionString: string, options?:
        EventHubClientOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            The connection string to use for connecting to the Event Hub
            instance.

            It is expected that the shared key properties and the Event Hub path
            are contained in this connection string.

            e.g.
            'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.
        - id: options
          type:
            - '@azure/event-hubs.EventHubClientOptions'
          description: >
            A set of options to apply when configuring the client.

            - `retryOptions`   : Configures the retry policy for all the
            operations on the client.

            For example, `{ "maxRetries": 4 }` or `{ "maxRetries": 4,
            "retryDelayInMs": 30000 }`.

            - `webSocketOptions`: Configures the channelling of the AMQP
            connection over Web Sockets.

            - `userAgent`      : A string to append to the built in user agent
            string that is passed to the service.
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.constructor_1'
    name: 'EventHubProducerClient(string, string, EventHubClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new EventHubProducerClient(connectionString: string, eventHubName:
        string, options?: EventHubClientOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            The connection string to use for connecting to the Event Hub
            instance.

            It is expected that the shared key properties and the Event Hub path
            are contained in this connection string.

            e.g.
            'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.
        - id: eventHubName
          type:
            - string
          description: The name of the specific Event Hub to connect the client to.
        - id: options
          type:
            - '@azure/event-hubs.EventHubClientOptions'
          description: >
            A set of options to apply when configuring the client.

            - `retryOptions`   : Configures the retry policy for all the
            operations on the client.

            For example, `{ "maxRetries": 4 }` or `{ "maxRetries": 4,
            "retryDelayInMs": 30000 }`.

            - `webSocketOptions`: Configures the channelling of the AMQP
            connection over Web Sockets.

            - `userAgent`      : A string to append to the built in user agent
            string that is passed to the service.
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.constructor_2'
    name: >-
      EventHubProducerClient(string, string, TokenCredential,
      EventHubClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new EventHubProducerClient(fullyQualifiedNamespace: string,
        eventHubName: string, credential: TokenCredential, options?:
        EventHubClientOptions)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: |-
            The full namespace which is likely to be similar to
            <yournamespace>.servicebus.windows.net
        - id: eventHubName
          type:
            - string
          description: The name of the specific Event Hub to connect the client to.
        - id: credential
          type:
            - TokenCredential
          description: >-
            An credential object used by the client to get the token to
            authenticate the connection

            with the Azure Event Hubs service. See &commat;azure/identity for
            creating the credentials.
        - id: options
          type:
            - '@azure/event-hubs.EventHubClientOptions'
          description: >
            A set of options to apply when configuring the client.

            - `retryOptions`   : Configures the retry policy for all the
            operations on the client.

            For example, `{ "maxRetries": 4 }` or `{ "maxRetries": 4,
            "retryDelayInMs": 30000 }`.

            - `webSocketOptions`: Configures the channelling of the AMQP
            connection over Web Sockets.

            - `userAgent`      : A string to append to the built in user agent
            string that is passed to the service.
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.fullyQualifiedNamespace'
    name: fullyQualifiedNamespace
    fullName: fullyQualifiedNamespace
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string fullyQualifiedNamespace
      return:
        type:
          - string
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.getEventHubProperties'
    name: getEventHubProperties(GetEventHubPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Provides the Event Hub runtime information.
    syntax:
      content: 'function getEventHubProperties(options: GetEventHubPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/event-hubs.GetEventHubPropertiesOptions'
          description: The set of options to apply to the operation call.
      return:
        type:
          - Promise<@azure/event-hubs.EventHubProperties>
        description: A promise that resolves with information about the Event Hub instance.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.getPartitionIds'
    name: getPartitionIds(GetPartitionIdsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Provides the id for each partition associated with the Event Hub.
    syntax:
      content: 'function getPartitionIds(options: GetPartitionIdsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/event-hubs.GetPartitionIdsOptions'
          description: The set of options to apply to the operation call.
      return:
        type:
          - Promise<Array<string>>
        description: >-
          A promise that resolves with an Array of strings representing the id
          for

          each partition associated with the Event Hub.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.getPartitionProperties'
    name: 'getPartitionProperties(string, GetPartitionPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Provides information about the state of the specified partition.
    syntax:
      content: >-
        function getPartitionProperties(partitionId: string, options:
        GetPartitionPropertiesOptions)
      parameters:
        - id: partitionId
          type:
            - string
          description: The id of the partition for which information is required.
        - id: options
          type:
            - '@azure/event-hubs.GetPartitionPropertiesOptions'
          description: The set of options to apply to the operation call.
      return:
        type:
          - Promise<@azure/event-hubs.PartitionProperties>
        description: >-
          A promise that resolves with information about the state of the
          partition .
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventHubProducerClient.sendBatch'
    name: 'sendBatch(EventDataBatch, SendBatchOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends a batch of events to the associated Event Hub.
    syntax:
      content: 'function sendBatch(batch: EventDataBatch, options?: SendBatchOptions)'
      parameters:
        - id: batch
          type:
            - '@azure/event-hubs.EventDataBatch'
          description: >-
            A batch of events that you can create using the <xref:createBatch>
            method.
        - id: options
          type:
            - '@azure/event-hubs.SendBatchOptions'
          description: >
            A set of options that can be specified to influence the way in which

            events are sent to the associated Event Hub.

            - `abortSignal`  : A signal the request to cancel the send
            operation.
          optional: true
      return:
        type:
          - Promise<void>
        description: Promise<void>
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventHubClientOptions'
    name: EventHubClientOptions
    spec.typeScript:
      - name: EventHubClientOptions
        fullName: EventHubClientOptions
        uid: '@azure/event-hubs.EventHubClientOptions'
  - uid: '@azure/event-hubs.CreateBatchOptions'
    name: CreateBatchOptions
    spec.typeScript:
      - name: CreateBatchOptions
        fullName: CreateBatchOptions
        uid: '@azure/event-hubs.CreateBatchOptions'
  - uid: Promise<@azure/event-hubs.EventDataBatch>
    name: EventDataBatch>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventDataBatch
        fullName: EventDataBatch
        uid: '@azure/event-hubs.EventDataBatch'
      - name: '>'
        fullName: '>'
  - uid: '@azure/event-hubs.GetEventHubPropertiesOptions'
    name: GetEventHubPropertiesOptions
    spec.typeScript:
      - name: GetEventHubPropertiesOptions
        fullName: GetEventHubPropertiesOptions
        uid: '@azure/event-hubs.GetEventHubPropertiesOptions'
  - uid: Promise<@azure/event-hubs.EventHubProperties>
    name: EventHubProperties>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventHubProperties
        fullName: EventHubProperties
        uid: '@azure/event-hubs.EventHubProperties'
      - name: '>'
        fullName: '>'
  - uid: '@azure/event-hubs.GetPartitionIdsOptions'
    name: GetPartitionIdsOptions
    spec.typeScript:
      - name: GetPartitionIdsOptions
        fullName: GetPartitionIdsOptions
        uid: '@azure/event-hubs.GetPartitionIdsOptions'
  - uid: '@azure/event-hubs.GetPartitionPropertiesOptions'
    name: GetPartitionPropertiesOptions
    spec.typeScript:
      - name: GetPartitionPropertiesOptions
        fullName: GetPartitionPropertiesOptions
        uid: '@azure/event-hubs.GetPartitionPropertiesOptions'
  - uid: Promise<@azure/event-hubs.PartitionProperties>
    name: PartitionProperties>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionProperties
        fullName: PartitionProperties
        uid: '@azure/event-hubs.PartitionProperties'
      - name: '>'
        fullName: '>'
  - uid: '@azure/event-hubs.EventDataBatch'
    name: EventDataBatch
    spec.typeScript:
      - name: EventDataBatch
        fullName: EventDataBatch
        uid: '@azure/event-hubs.EventDataBatch'
  - uid: '@azure/event-hubs.SendBatchOptions'
    name: SendBatchOptions
    spec.typeScript:
      - name: SendBatchOptions
        fullName: SendBatchOptions
        uid: '@azure/event-hubs.SendBatchOptions'
