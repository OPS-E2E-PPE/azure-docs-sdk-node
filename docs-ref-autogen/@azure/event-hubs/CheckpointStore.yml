### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.CheckpointStore'
    name: CheckpointStore
    fullName: CheckpointStore
    children:
      - '@azure/event-hubs.CheckpointStore.claimOwnership'
      - '@azure/event-hubs.CheckpointStore.listCheckpoints'
      - '@azure/event-hubs.CheckpointStore.listOwnership'
      - '@azure/event-hubs.CheckpointStore.updateCheckpoint'
    langs:
      - typeScript
    type: interface
    summary: >
      A checkpoint store stores and retrieves partition ownership information
      and checkpoint details

      for each partition in a given consumer group of an event hub instance.

      Users are not meant to implement an `CheckpointStore`.

      Users are expected to choose existing implementations of this interface,
      instantiate it, and pass

      it to the `EventHubConsumerClient` class constructor when instantiating a
      client.

      Users are not expected to use any of the methods on a checkpoint store,
      these are used internally by

      the client.


      Implementations of `CheckpointStore` can be found on npm by searching for
      packages with the prefix &commat;azure/eventhub-checkpointstore-.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.CheckpointStore.claimOwnership'
    name: 'claimOwnership(PartitionOwnership[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called to claim ownership of a list of partitions. This will return the
      list of partitions that were owned

      successfully.
    syntax:
      content: 'function claimOwnership(partitionOwnership: PartitionOwnership[])'
      parameters:
        - id: partitionOwnership
          type:
            - '@azure/event-hubs.PartitionOwnership[]'
          description: The list of partition ownership this instance is claiming to own.
      return:
        type:
          - 'Promise<@azure/event-hubs.PartitionOwnership[]>'
        description: A list of partitions this instance successfully claimed ownership.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.CheckpointStore.listCheckpoints'
    name: 'listCheckpoints(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the checkpoints in a data store for a given namespace, eventhub
      and consumer group.
    syntax:
      content: >-
        function listCheckpoints(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type:
            - string
          description: The event hub name.
        - id: consumerGroup
          type:
            - string
          description: |
            The consumer group name.
      return:
        type:
          - 'Promise<@azure/event-hubs.Checkpoint[]>'
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.CheckpointStore.listOwnership'
    name: 'listOwnership(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called to get the list of all existing partition ownership from the
      underlying data store. Could return empty

      results if there are is no existing ownership information.
    syntax:
      content: >-
        function listOwnership(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type:
            - string
          description: The event hub name.
        - id: consumerGroup
          type:
            - string
          description: The consumer group name.
      return:
        type:
          - 'Promise<@azure/event-hubs.PartitionOwnership[]>'
        description: >-
          A list of partition ownership details of all the partitions that
          have/had an owner.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.CheckpointStore.updateCheckpoint'
    name: updateCheckpoint(Checkpoint)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the checkpoint in the data store for a partition.
    syntax:
      content: 'function updateCheckpoint(checkpoint: Checkpoint)'
      parameters:
        - id: checkpoint
          type:
            - '@azure/event-hubs.Checkpoint'
          description: |
            The checkpoint.
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.PartitionOwnership[]'
    name: 'PartitionOwnership[]'
    spec.typeScript:
      - name: PartitionOwnership
        fullName: PartitionOwnership
        uid: '@azure/event-hubs.PartitionOwnership'
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<@azure/event-hubs.PartitionOwnership[]>'
    name: 'PartitionOwnership[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionOwnership
        fullName: PartitionOwnership
        uid: '@azure/event-hubs.PartitionOwnership'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/event-hubs.Checkpoint[]>'
    name: 'Checkpoint[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Checkpoint
        fullName: Checkpoint
        uid: '@azure/event-hubs.Checkpoint'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/event-hubs.Checkpoint'
    name: Checkpoint
    spec.typeScript:
      - name: Checkpoint
        fullName: Checkpoint
        uid: '@azure/event-hubs.Checkpoint'
