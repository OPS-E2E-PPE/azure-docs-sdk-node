### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.SubscribeOptions'
    name: SubscribeOptions
    fullName: SubscribeOptions
    children:
      - '@azure/event-hubs.SubscribeOptions.maxBatchSize'
      - '@azure/event-hubs.SubscribeOptions.maxWaitTimeInSeconds'
      - '@azure/event-hubs.SubscribeOptions.ownerLevel'
      - '@azure/event-hubs.SubscribeOptions.startPosition'
      - '@azure/event-hubs.SubscribeOptions.tracingOptions'
      - '@azure/event-hubs.SubscribeOptions.trackLastEnqueuedEventProperties'
    langs:
      - typeScript
    type: interface
    summary: >-
      Options to configure the `subscribe` method on the
      `EventHubConsumerClient`.

      For example, `{ maxBatchSize: 20, maxWaitTimeInSeconds: 120,
      startPosition: { sequenceNumber: 123 } }
    extends:
      name: '@azure/event-hubs.TracingOptions'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.maxBatchSize'
    name: maxBatchSize
    fullName: maxBatchSize
    children: []
    langs:
      - typeScript
    type: property
    summary: The number of events to request per batch
    optional: true
    syntax:
      content: 'maxBatchSize?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.maxWaitTimeInSeconds'
    name: maxWaitTimeInSeconds
    fullName: maxWaitTimeInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum amount of time to wait to build up the requested message count
      before

      passing the data to user code for processing. If not provided, it defaults
      to 60 seconds.
    optional: true
    syntax:
      content: 'maxWaitTimeInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.ownerLevel'
    name: ownerLevel
    fullName: ownerLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: The owner level to use as this subscription subscribes to partitions.
    optional: true
    syntax:
      content: 'ownerLevel?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.startPosition'
    name: startPosition
    fullName: startPosition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The event position in a partition to start receiving events from if no
      checkpoint is found.

      Pass a map of partition id to position if you would like to use different
      starting

      position for each partition.
    optional: true
    syntax:
      content: 'startPosition?: EventPosition | [key: string]: EventPosition'
      return:
        type:
          - >-
            @azure/event-hubs.EventPosition | [key: string]:
            @azure/event-hubs.EventPosition
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options for configuring tracing.
    optional: true
    syntax:
      content: 'tracingOptions?: undefined | Object'
      return:
        type:
          - undefined | Object
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscribeOptions.trackLastEnqueuedEventProperties'
    name: trackLastEnqueuedEventProperties
    fullName: trackLastEnqueuedEventProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether or not the consumer should request information on the
      last enqueued event on its

      associated partition, and track that information as events are received.


      When information about the partition's last enqueued event is being
      tracked, each event received

      from the Event Hubs service will carry metadata about the partition that
      it otherwise would not. This results in a small amount of

      additional network bandwidth consumption that is generally a favorable
      trade-off when considered

      against periodically making requests for partition properties using the
      Event Hub client.
    optional: true
    syntax:
      content: 'trackLastEnqueuedEventProperties?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.TracingOptions'
    name: TracingOptions
    spec.typeScript:
      - name: TracingOptions
        fullName: TracingOptions
        uid: '@azure/event-hubs.TracingOptions'
  - uid: >-
      @azure/event-hubs.EventPosition | [key: string]:
      @azure/event-hubs.EventPosition
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'
      - name: ' | [key: string]: '
        fullName: ' | [key: string]: '
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'
