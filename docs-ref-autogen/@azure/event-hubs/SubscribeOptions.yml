### YamlMime:TSType
name: SubscribeOptions
uid: '@azure/event-hubs.SubscribeOptions'
package: '@azure/event-hubs'
summary: >-
  Options to configure the `subscribe` method on the `EventHubConsumerClient`.

  For example, `{ maxBatchSize: 20, maxWaitTimeInSeconds: 120, startPosition: {
  sequenceNumber: 123 } }`
fullName: SubscribeOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: maxBatchSize
    uid: '@azure/event-hubs.SubscribeOptions.maxBatchSize'
    package: '@azure/event-hubs'
    summary: The number of events to request per batch
    fullName: maxBatchSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxBatchSize?: number'
      return:
        type: number
        description: ''
  - name: maxWaitTimeInSeconds
    uid: '@azure/event-hubs.SubscribeOptions.maxWaitTimeInSeconds'
    package: '@azure/event-hubs'
    summary: >-
      The maximum amount of time to wait to build up the requested message count
      before

      passing the data to user code for processing. If not provided, it defaults
      to 60 seconds.
    fullName: maxWaitTimeInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxWaitTimeInSeconds?: number'
      return:
        type: number
        description: ''
  - name: ownerLevel
    uid: '@azure/event-hubs.SubscribeOptions.ownerLevel'
    package: '@azure/event-hubs'
    summary: The owner level to use as this subscription subscribes to partitions.
    fullName: ownerLevel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ownerLevel?: number'
      return:
        type: number
        description: ''
  - name: startPosition
    uid: '@azure/event-hubs.SubscribeOptions.startPosition'
    package: '@azure/event-hubs'
    summary: >-
      The event position in a partition to start receiving events from if no
      checkpoint is found.

      Pass a map of partition id to position if you would like to use different
      starting

      position for each partition.
    fullName: startPosition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'startPosition?: EventPosition | [key: string]: EventPosition'
      return:
        type: >-
          <xref uid="@azure/event-hubs.EventPosition" /> | [key: string]: <xref
          uid="@azure/event-hubs.EventPosition" />
        description: ''
  - name: tracingOptions
    uid: '@azure/event-hubs.SubscribeOptions.tracingOptions'
    package: '@azure/event-hubs'
    summary: Options for configuring tracing.
    fullName: tracingOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type: OperationTracingOptions
        description: ''
  - name: trackLastEnqueuedEventProperties
    uid: '@azure/event-hubs.SubscribeOptions.trackLastEnqueuedEventProperties'
    package: '@azure/event-hubs'
    summary: >
      Indicates whether or not the consumer should request information on the
      last enqueued event on its

      associated partition, and track that information as events are received.

      When information about the partition's last enqueued event is being
      tracked, each event received

      from the Event Hubs service will carry metadata about the partition that
      it otherwise would not. This results in a small amount of

      additional network bandwidth consumption that is generally a favorable
      trade-off when considered

      against periodically making requests for partition properties using the
      Event Hub client.
    fullName: trackLastEnqueuedEventProperties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'trackLastEnqueuedEventProperties?: boolean'
      return:
        type: boolean
        description: ''
