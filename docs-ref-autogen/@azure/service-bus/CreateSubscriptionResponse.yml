### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.CreateSubscriptionResponse'
    name: CreateSubscriptionResponse
    fullName: CreateSubscriptionResponse
    children:
      - '@azure/service-bus.CreateSubscriptionResponse.accessedOn'
      - '@azure/service-bus.CreateSubscriptionResponse.autoDeleteOnIdle'
      - '@azure/service-bus.CreateSubscriptionResponse.createdOn'
      - >-
        @azure/service-bus.CreateSubscriptionResponse.deadLetteringOnFilterEvaluationExceptions
      - >-
        @azure/service-bus.CreateSubscriptionResponse.deadLetteringOnMessageExpiration
      - '@azure/service-bus.CreateSubscriptionResponse.defaultMessageTtl'
      - '@azure/service-bus.CreateSubscriptionResponse.defaultRuleDescription'
      - '@azure/service-bus.CreateSubscriptionResponse.enableBatchedOperations'
      - '@azure/service-bus.CreateSubscriptionResponse.enablePartitioning'
      - '@azure/service-bus.CreateSubscriptionResponse.entityAvailabilityStatus'
      - >-
        @azure/service-bus.CreateSubscriptionResponse.forwardDeadLetteredMessagesTo
      - '@azure/service-bus.CreateSubscriptionResponse.forwardTo'
      - '@azure/service-bus.CreateSubscriptionResponse.lockDuration'
      - '@azure/service-bus.CreateSubscriptionResponse.maxDeliveryCount'
      - '@azure/service-bus.CreateSubscriptionResponse.maxSizeInMegabytes'
      - '@azure/service-bus.CreateSubscriptionResponse.messageCount'
      - '@azure/service-bus.CreateSubscriptionResponse.messageCountDetails'
      - '@azure/service-bus.CreateSubscriptionResponse.requiresSession'
      - '@azure/service-bus.CreateSubscriptionResponse.sizeInBytes'
      - '@azure/service-bus.CreateSubscriptionResponse.status'
      - '@azure/service-bus.CreateSubscriptionResponse.subscriptionName'
      - '@azure/service-bus.CreateSubscriptionResponse.topicName'
      - '@azure/service-bus.CreateSubscriptionResponse.updatedOn'
      - '@azure/service-bus.CreateSubscriptionResponse.userMetadata'
    langs:
      - typeScript
    type: interface
    summary: Create Subscription response
    extends:
      name: '@azure/service-bus.SubscriptionDetails'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.accessedOn'
    name: accessedOn
    fullName: accessedOn
    children: []
    langs:
      - typeScript
    type: property
    summary: Accessed at timestamp
    optional: true
    syntax:
      content: 'accessedOn?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.autoDeleteOnIdle'
    name: autoDeleteOnIdle
    fullName: autoDeleteOnIdle
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Max idle time before entity is deleted.
      This is to be specified in ISO-8601 duration format
      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    syntax:
      content: 'autoDeleteOnIdle: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.createdOn'
    name: createdOn
    fullName: createdOn
    children: []
    langs:
      - typeScript
    type: property
    summary: Created at timestamp
    syntax:
      content: 'createdOn: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.CreateSubscriptionResponse.deadLetteringOnFilterEvaluationExceptions
    name: deadLetteringOnFilterEvaluationExceptions
    fullName: deadLetteringOnFilterEvaluationExceptions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines how the Service Bus handles a message that causes an exception

      during a subscription’s filter evaluation. If the value is set to true,

      the message that caused the exception will be moved to the subscription’s

      dead-letter sub-queue. Otherwise, it will be discarded. By default this

      parameter is set to true, allowing the user a chance to investigate the

      cause of the exception. It can occur from a malformed message or some

      incorrect assumptions being made in the filter about the form of the
      message.

      Settable only at topic creation time.
    syntax:
      content: 'deadLetteringOnFilterEvaluationExceptions: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.CreateSubscriptionResponse.deadLetteringOnMessageExpiration
    name: deadLetteringOnMessageExpiration
    fullName: deadLetteringOnMessageExpiration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If it is enabled and a message expires, the Service Bus moves the message
      from

      the queue into the subscription’s dead-letter sub-queue. If disabled,
      message

      will be permanently deleted from the subscription’s main queue. Settable
      only

      at subscription creation time.
    syntax:
      content: 'deadLetteringOnMessageExpiration: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.defaultMessageTtl'
    name: defaultMessageTtl
    fullName: defaultMessageTtl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines how long a message lives in the subscription. Based on whether

      dead-lettering is enabled, a message whose TTL has expired will either be
      moved

      to the subscription’s associated dead-letter sub-queue or permanently
      deleted.

      This is to be specified in ISO-8601 duration format

      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    optional: true
    syntax:
      content: 'defaultMessageTtl?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.defaultRuleDescription'
    name: defaultRuleDescription
    fullName: defaultRuleDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates the default rule description.
    optional: true
    syntax:
      content: 'defaultRuleDescription?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.enableBatchedOperations'
    name: enableBatchedOperations
    fullName: enableBatchedOperations
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies if batched operations should be allowed.
    syntax:
      content: 'enableBatchedOperations: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.enablePartitioning'
    name: enablePartitioning
    fullName: enablePartitioning
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies whether the topic should be partitioned
    optional: true
    syntax:
      content: 'enablePartitioning?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.entityAvailabilityStatus'
    name: entityAvailabilityStatus
    fullName: entityAvailabilityStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: Entity availability status
    syntax:
      content: 'entityAvailabilityStatus: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.CreateSubscriptionResponse.forwardDeadLetteredMessagesTo
    name: forwardDeadLetteredMessagesTo
    fullName: forwardDeadLetteredMessagesTo
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Absolute URL or the name of the queue or topic the dead-lettered
      messages are to be forwarded to.
      For example, an absolute URL input would be of the form
      `sb://<your-service-bus-namespace-endpoint>/<queue-or-topic-name>`
    optional: true
    syntax:
      content: 'forwardDeadLetteredMessagesTo?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.forwardTo'
    name: forwardTo
    fullName: forwardTo
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Absolute URL or the name of the queue or topic the
      messages are to be forwarded to.
      For example, an absolute URL input would be of the form
      `sb://<your-service-bus-namespace-endpoint>/<queue-or-topic-name>`
    optional: true
    syntax:
      content: 'forwardTo?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.lockDuration'
    name: lockDuration
    fullName: lockDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The default lock duration is applied to subscriptions that do not define a
      lock duration.
      Settable only at subscription creation time.
      This is specified in ISO-8601 duration format
      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    syntax:
      content: 'lockDuration: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.maxDeliveryCount'
    name: maxDeliveryCount
    fullName: maxDeliveryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum delivery count of messages after which if it is still not
      settled,

      gets moved to the dead-letter sub-queue.
    syntax:
      content: 'maxDeliveryCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.maxSizeInMegabytes'
    name: maxSizeInMegabytes
    fullName: maxSizeInMegabytes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the maximum topic size in megabytes. Any attempt to enqueue a
      message

      that will cause the topic to exceed this value will fail. All messages
      that are

      stored in the topic or any of its subscriptions count towards this value.

      Multiple copies of a message that reside in one or multiple subscriptions

      count as a single messages. For example, if message m exists once in
      subscription

      s1 and twice in subscription s2, m is counted as a single message.
    optional: true
    syntax:
      content: 'maxSizeInMegabytes?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.messageCount'
    name: messageCount
    fullName: messageCount
    children: []
    langs:
      - typeScript
    type: property
    summary: The entity's message count.
    syntax:
      content: 'messageCount: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.messageCountDetails'
    name: messageCountDetails
    fullName: messageCountDetails
    children: []
    langs:
      - typeScript
    type: property
    summary: Message count details
    optional: true
    syntax:
      content: 'messageCountDetails?: MessageCountDetails'
      return:
        type:
          - '@azure/service-bus.MessageCountDetails'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.requiresSession'
    name: requiresSession
    fullName: requiresSession
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If set to true, the subscription will be session-aware and only
      SessionReceiver

      will be supported. Session-aware subscription are not supported through
      REST.

      Settable only at subscription creation time.
    syntax:
      content: 'requiresSession: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.sizeInBytes'
    name: sizeInBytes
    fullName: sizeInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: The entity's size in bytes.
    optional: true
    syntax:
      content: 'sizeInBytes?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: Status of the messaging entity.
    optional: true
    syntax:
      content: 'status?: EntityStatus'
      return:
        type:
          - '@azure/service-bus.EntityStatus'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of the subscription
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of the topic
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.updatedOn'
    name: updatedOn
    fullName: updatedOn
    children: []
    langs:
      - typeScript
    type: property
    summary: Updated at timestamp
    syntax:
      content: 'updatedOn: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateSubscriptionResponse.userMetadata'
    name: userMetadata
    fullName: userMetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The user provided metadata information associated with the subscription
      description.

      Used to specify textual content such as tags, labels, etc.

      Value must not exceed 1024 bytes encoded in utf-8.
    optional: true
    syntax:
      content: 'userMetadata?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SubscriptionDetails'
    name: SubscriptionDetails
    spec.typeScript:
      - name: SubscriptionDetails
        fullName: SubscriptionDetails
        uid: '@azure/service-bus.SubscriptionDetails'
  - uid: '@azure/service-bus.MessageCountDetails'
    name: MessageCountDetails
    spec.typeScript:
      - name: MessageCountDetails
        fullName: MessageCountDetails
        uid: '@azure/service-bus.MessageCountDetails'
  - uid: '@azure/service-bus.EntityStatus'
    name: EntityStatus
    spec.typeScript:
      - name: EntityStatus
        fullName: EntityStatus
        uid: '@azure/service-bus.EntityStatus'
