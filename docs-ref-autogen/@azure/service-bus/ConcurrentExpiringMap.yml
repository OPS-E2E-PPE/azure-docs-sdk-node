### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ConcurrentExpiringMap'
    name: ConcurrentExpiringMap
    fullName: ConcurrentExpiringMap<TKey>
    children:
      - '@azure/service-bus.ConcurrentExpiringMap.clear'
      - '@azure/service-bus.ConcurrentExpiringMap.constructor'
      - '@azure/service-bus.ConcurrentExpiringMap.delete'
      - '@azure/service-bus.ConcurrentExpiringMap.has'
      - '@azure/service-bus.ConcurrentExpiringMap.set'
    langs:
      - typeScript
    type: class
    summary: >-
      Describes a map that ensures, deleting a an entry from the map is
      concurrency safe.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConcurrentExpiringMap.clear'
    name: clear()
    children: []
    type: method
    langs:
      - typeScript
    summary: Clears all the entries from the underlying map.
    syntax:
      content: function clear()
      parameters: []
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConcurrentExpiringMap.constructor'
    name: ConcurrentExpiringMap(undefined | Object)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ConcurrentExpiringMap(options?: undefined | Object)'
      parameters:
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConcurrentExpiringMap.delete'
    name: delete(TKey)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes an entry from the the map if present
    syntax:
      content: 'function delete(key: TKey)'
      parameters:
        - id: key
          type:
            - TKey
          description: The key which needs to be removed from the map.
      return:
        type:
          - boolean
        description: 'True if the key was found and removed from the map, False otherwise'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConcurrentExpiringMap.has'
    name: has(TKey)
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether the key is present in the map.
    syntax:
      content: 'function has(key: TKey)'
      parameters:
        - id: key
          type:
            - TKey
          description: The key whose presence in the map needs to be checked.
      return:
        type:
          - boolean
        description: boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConcurrentExpiringMap.set'
    name: 'set(TKey, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the key and it's expiration time as the value in the map.
    syntax:
      content: 'function set(key: TKey, expiration: Date)'
      parameters:
        - id: key
          type:
            - TKey
          description: The key to be set.
        - id: expiration
          type:
            - Date
          description: Expiration time for the key.
    package: '@azure/service-bus'
