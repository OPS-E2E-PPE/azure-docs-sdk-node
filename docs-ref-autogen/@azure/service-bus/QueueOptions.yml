### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueOptions'
    name: QueueOptions
    fullName: QueueOptions
    children:
      - '@azure/service-bus.QueueOptions.authorizationRules'
      - '@azure/service-bus.QueueOptions.autoDeleteOnIdle'
      - '@azure/service-bus.QueueOptions.deadLetteringOnMessageExpiration'
      - '@azure/service-bus.QueueOptions.defaultMessageTtl'
      - '@azure/service-bus.QueueOptions.duplicateDetectionHistoryTimeWindow'
      - '@azure/service-bus.QueueOptions.enableBatchedOperations'
      - '@azure/service-bus.QueueOptions.enablePartitioning'
      - '@azure/service-bus.QueueOptions.forwardDeadLetteredMessagesTo'
      - '@azure/service-bus.QueueOptions.forwardTo'
      - '@azure/service-bus.QueueOptions.lockDuration'
      - '@azure/service-bus.QueueOptions.maxDeliveryCount'
      - '@azure/service-bus.QueueOptions.maxSizeInMegabytes'
      - '@azure/service-bus.QueueOptions.requiresDuplicateDetection'
      - '@azure/service-bus.QueueOptions.requiresSession'
      - '@azure/service-bus.QueueOptions.status'
      - '@azure/service-bus.QueueOptions.userMetadata'
    langs:
      - typeScript
    type: interface
    summary: Represents settable options on a queue
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.authorizationRules'
    name: authorizationRules
    fullName: authorizationRules
    children: []
    langs:
      - typeScript
    type: property
    summary: Authorization rules on the queue
    optional: true
    syntax:
      content: 'authorizationRules?: AuthorizationRule[]'
      return:
        type:
          - '@azure/service-bus.AuthorizationRule[]'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.autoDeleteOnIdle'
    name: autoDeleteOnIdle
    fullName: autoDeleteOnIdle
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Max idle time before entity is deleted.
      This is to be specified in ISO-8601 duration format
      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    optional: true
    syntax:
      content: 'autoDeleteOnIdle?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.deadLetteringOnMessageExpiration'
    name: deadLetteringOnMessageExpiration
    fullName: deadLetteringOnMessageExpiration
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If it is enabled and a message expires, the Service Bus moves the message
      from the queue into the queueâ€™s dead-letter sub-queue. If disabled,
      message will be permanently deleted from the queue.
      Settable only at queue creation time.
    optional: true
    syntax:
      content: 'deadLetteringOnMessageExpiration?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.defaultMessageTtl'
    name: defaultMessageTtl
    fullName: defaultMessageTtl
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Depending on whether DeadLettering is enabled, a message is automatically
      moved to the dead-letter sub-queue or deleted if it has been stored in the
      queue for longer than the specified time.
      This value is overwritten by a TTL specified on the message
      if and only if the message TTL is smaller than the TTL set on the queue.
      This value is immutable after the Queue has been created.
      This is to be specified in ISO-8601 duration format
      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    optional: true
    syntax:
      content: 'defaultMessageTtl?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.duplicateDetectionHistoryTimeWindow'
    name: duplicateDetectionHistoryTimeWindow
    fullName: duplicateDetectionHistoryTimeWindow
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the time span during which the Service Bus detects message
      duplication.

      This is to be specified in ISO-8601 duration format

      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    optional: true
    syntax:
      content: 'duplicateDetectionHistoryTimeWindow?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.enableBatchedOperations'
    name: enableBatchedOperations
    fullName: enableBatchedOperations
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies if batched operations should be allowed.
    optional: true
    syntax:
      content: 'enableBatchedOperations?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.enablePartitioning'
    name: enablePartitioning
    fullName: enablePartitioning
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies whether the queue should be partitioned.
    optional: true
    syntax:
      content: 'enablePartitioning?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.forwardDeadLetteredMessagesTo'
    name: forwardDeadLetteredMessagesTo
    fullName: forwardDeadLetteredMessagesTo
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Absolute URL or the name of the queue or topic the dead-lettered
      messages are to be forwarded to.
      For example, an absolute URL input would be of the form
      `sb://<your-service-bus-namespace-endpoint>/<queue-or-topic-name>`
    optional: true
    syntax:
      content: 'forwardDeadLetteredMessagesTo?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.forwardTo'
    name: forwardTo
    fullName: forwardTo
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Absolute URL or the name of the queue or topic the
      messages are to be forwarded to.
      For example, an absolute URL input would be of the form
      `sb://<your-service-bus-namespace-endpoint>/<queue-or-topic-name>`
    optional: true
    syntax:
      content: 'forwardTo?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.lockDuration'
    name: lockDuration
    fullName: lockDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines the amount of time in seconds in which a message should be
      locked for

      processing by a receiver. After this period, the message is unlocked and
      available

      for consumption by the next receiver. Settable only at queue creation
      time.

      This is to be specified in ISO-8601 duration format

      such as "PT1M" for 1 minute, "PT5S" for 5 seconds.
    optional: true
    syntax:
      content: 'lockDuration?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.maxDeliveryCount'
    name: maxDeliveryCount
    fullName: maxDeliveryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum delivery count of messages after which if it is still not
      settled,

      gets moved to the dead-letter sub-queue.
    optional: true
    syntax:
      content: 'maxDeliveryCount?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.maxSizeInMegabytes'
    name: maxSizeInMegabytes
    fullName: maxSizeInMegabytes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the maximum queue size in megabytes. Any attempt to enqueue a
      message that

      will cause the queue to exceed this value will fail.
    optional: true
    syntax:
      content: 'maxSizeInMegabytes?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.requiresDuplicateDetection'
    name: requiresDuplicateDetection
    fullName: requiresDuplicateDetection
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If enabled, the topic will detect duplicate messages within the time
      span specified by the DuplicateDetectionHistoryTimeWindow property.
      Settable only at queue creation time.
    optional: true
    syntax:
      content: 'requiresDuplicateDetection?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.requiresSession'
    name: requiresSession
    fullName: requiresSession
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If set to true, the queue will be session-aware and only SessionReceiver
      will be supported. Session-aware queues are not supported through REST.
      Settable only at queue creation time.
    optional: true
    syntax:
      content: 'requiresSession?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: Status of the messaging entity.
    optional: true
    syntax:
      content: 'status?: EntityStatus'
      return:
        type:
          - '@azure/service-bus.EntityStatus'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueOptions.userMetadata'
    name: userMetadata
    fullName: userMetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The user provided metadata information associated with the queue
      description.

      Used to specify textual content such as tags, labels, etc.

      Value must not exceed 1024 bytes encoded in utf-8.
    optional: true
    syntax:
      content: 'userMetadata?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.AuthorizationRule[]'
    name: 'AuthorizationRule[]'
    spec.typeScript:
      - name: AuthorizationRule
        fullName: AuthorizationRule
        uid: '@azure/service-bus.AuthorizationRule'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/service-bus.EntityStatus'
    name: EntityStatus
    spec.typeScript:
      - name: EntityStatus
        fullName: EntityStatus
        uid: '@azure/service-bus.EntityStatus'
