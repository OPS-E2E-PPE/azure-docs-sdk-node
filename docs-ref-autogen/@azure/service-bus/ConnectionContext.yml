### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ConnectionContext'
    name: ConnectionContext
    langs:
      - typeScript
    fullName: ConnectionContext
    children:
      - '@azure/service-bus.ConnectionContext.cbsSession'
      - '@azure/service-bus.ConnectionContext.clientContexts'
      - '@azure/service-bus.ConnectionContext.config'
      - '@azure/service-bus.ConnectionContext.connection'
      - '@azure/service-bus.ConnectionContext.connectionId'
      - '@azure/service-bus.ConnectionContext.connectionLock'
      - '@azure/service-bus.ConnectionContext.create'
      - '@azure/service-bus.ConnectionContext.dataTransformer'
      - '@azure/service-bus.ConnectionContext.negotiateClaimLock'
      - '@azure/service-bus.ConnectionContext.tokenProvider'
      - '@azure/service-bus.ConnectionContext.wasConnectionCloseCalled'
    type: module
    summary: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.cbsSession'
    name: cbsSession
    fullName: cbsSession
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {CbsClient} cbsSession A reference to the cbs session ($cbs endpoint) on
      the

      underlying AMQP connection for the EventHub Client.
    syntax:
      content: 'cbsSession: CbsClient'
      return:
        type:
          - CbsClient
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.clientContexts'
    name: clientContexts
    fullName: clientContexts
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A dictionary of ClientEntityContext
      objects for each of the client in the `clients` dictionary
    syntax:
      content: 'clientContexts: Dictionary<ClientEntityContext>'
      return:
        type:
          - Dictionary<@azure/service-bus.ClientEntityContext>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.config'
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {ConnectionConfig} config The EventHub connection config that is created
      after

      parsing the connection string.
    syntax:
      content: 'config: ConnectionConfig'
      return:
        type:
          - ConnectionConfig
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.connection'
    name: connection
    fullName: connection
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Connection} connection The underlying AMQP connection.'
    syntax:
      content: 'connection: Connection'
      return:
        type:
          - Connection
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.connectionId'
    name: connectionId
    fullName: connectionId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {string} connectionId The amqp connection id that uniquely identifies the
      connection within a process.
    syntax:
      content: 'connectionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.connectionLock'
    name: connectionLock
    fullName: connectionLock
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} connectionLock The unqiue lock name per connection that is used
      to

      acquire the lock for establishing an aqmp connection per client if one
      does not exist.
    syntax:
      content: 'connectionLock: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.create'
    name: create(CreateConnectionContextBaseParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates the base connection context.
    syntax:
      content: 'function create(parameters: CreateConnectionContextBaseParameters)'
      parameters:
        - id: parameters
          type:
            - CreateConnectionContextBaseParameters
          description: |
            Parameters to be provided to create
            the base connection context.
      return:
        type:
          - ConnectionContextBase
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.dataTransformer'
    name: dataTransformer
    fullName: dataTransformer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {DataTransformer} dataTransformer A DataTransformer object that has
      methods named

      - encode Responsible for encoding the AMQP message before sending it on
      the wire.

      - decode Responsible for decoding the received AMQP message before passing
      it to the customer.
    syntax:
      content: 'dataTransformer: DataTransformer'
      return:
        type:
          - DataTransformer
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.negotiateClaimLock'
    name: negotiateClaimLock
    fullName: negotiateClaimLock
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} negotiateClaimLock The unqiue lock name per connection that is
      used to

      acquire the lock for negotiating cbs claim by an entity on that
      connection.
    syntax:
      content: 'negotiateClaimLock: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.tokenProvider'
    name: tokenProvider
    fullName: tokenProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {TokenProvider} tokenProvider The TokenProvider to be used for getting
      tokens

      for authentication for the EventHub client.
    syntax:
      content: 'tokenProvider: TokenProvider'
      return:
        type:
          - TokenProvider
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ConnectionContext.wasConnectionCloseCalled'
    name: wasConnectionCloseCalled
    fullName: wasConnectionCloseCalled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {boolean} wasConnectionCloseCalled Indicates whether the close() method
      was

      called on the connection object.
    syntax:
      content: 'wasConnectionCloseCalled: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
references:
  - uid: Dictionary<@azure/service-bus.ClientEntityContext>
    name: ClientEntityContext>
    spec.typeScript:
      - name: Dictionary<
        fullName: Dictionary<
      - name: ClientEntityContext
        fullName: ClientEntityContext
        uid: '@azure/service-bus.ClientEntityContext'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.ConnectionContext.cbsSession'
    name: cbsSession
  - uid: '@azure/service-bus.ConnectionContext.clientContexts'
    name: clientContexts
  - uid: '@azure/service-bus.ConnectionContext.config'
    name: config
  - uid: '@azure/service-bus.ConnectionContext.connection'
    name: connection
  - uid: '@azure/service-bus.ConnectionContext.connectionId'
    name: connectionId
  - uid: '@azure/service-bus.ConnectionContext.connectionLock'
    name: connectionLock
  - uid: '@azure/service-bus.ConnectionContext.create'
    name: create
  - uid: '@azure/service-bus.ConnectionContext.dataTransformer'
    name: dataTransformer
  - uid: '@azure/service-bus.ConnectionContext.negotiateClaimLock'
    name: negotiateClaimLock
  - uid: '@azure/service-bus.ConnectionContext.tokenProvider'
    name: tokenProvider
  - uid: '@azure/service-bus.ConnectionContext.wasConnectionCloseCalled'
    name: wasConnectionCloseCalled
