### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ClientEntityContext'
    name: ClientEntityContext
    langs:
      - typeScript
    fullName: ClientEntityContext
    children:
      - '@azure/service-bus.ClientEntityContext.batchingReceiver'
      - '@azure/service-bus.ClientEntityContext.clientId'
      - '@azure/service-bus.ClientEntityContext.clientType'
      - '@azure/service-bus.ClientEntityContext.close'
      - '@azure/service-bus.ClientEntityContext.create'
      - '@azure/service-bus.ClientEntityContext.entityPath'
      - '@azure/service-bus.ClientEntityContext.expiredMessageSessions'
      - '@azure/service-bus.ClientEntityContext.getReceiver'
      - '@azure/service-bus.ClientEntityContext.isClosed'
      - '@azure/service-bus.ClientEntityContext.isSessionEnabled'
      - '@azure/service-bus.ClientEntityContext.managementClient'
      - '@azure/service-bus.ClientEntityContext.messageSessions'
      - '@azure/service-bus.ClientEntityContext.namespace'
      - '@azure/service-bus.ClientEntityContext.onDetached'
      - '@azure/service-bus.ClientEntityContext.requestResponseLockedMessages'
      - '@azure/service-bus.ClientEntityContext.sender'
      - '@azure/service-bus.ClientEntityContext.sessionManager'
      - '@azure/service-bus.ClientEntityContext.streamingReceiver'
    type: module
    summary: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.batchingReceiver'
    name: batchingReceiver
    fullName: batchingReceiver
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {BatchingReceiver} [batchingReceiver] The ServiceBus receiver associated
      with the

      client entity for receiving a batch of messages.
    optional: true
    syntax:
      content: 'batchingReceiver?: BatchingReceiver'
      return:
        type:
          - '@azure/service-bus.BatchingReceiver'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.clientId'
    name: clientId
    fullName: clientId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [clientId] Unique Id of the client for which this context is
      created
    syntax:
      content: 'clientId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.clientType'
    name: clientType
    fullName: clientType
    children: []
    langs:
      - typeScript
    type: property
    summary: '{ClientType} [clientType] Type of the client, used mostly for logging'
    syntax:
      content: 'clientType: ClientType'
      return:
        type:
          - '@azure/service-bus.ClientType'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.create'
    name: >-
      create(string, ClientType, ConnectionContext, string,
      ClientEntityContextOptions)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(entityPath: string, clientType: ClientType, context:
        ConnectionContext, clientId: string, options?:
        ClientEntityContextOptions)
      parameters:
        - id: entityPath
          type:
            - string
          description: ''
        - id: clientType
          type:
            - '@azure/service-bus.ClientType'
          description: ''
        - id: context
          type:
            - '@azure/service-bus.ConnectionContext'
          description: ''
        - id: clientId
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.ClientEntityContextOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/service-bus.ClientEntityContext'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} entityPath - The name/path of the entity
      (queue/topic/subscription) to which

      the connection needs to happen.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.expiredMessageSessions'
    name: expiredMessageSessions
    fullName: expiredMessageSessions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Dictionary<MessageSession>} expiredMessageSessions A dictionary that
      stores expired message sessions IDs.
    syntax:
      content: 'expiredMessageSessions: Dictionary<boolean>'
      return:
        type:
          - Dictionary<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.getReceiver'
    name: 'getReceiver(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReceiver(name: string, sessionId?: undefined | string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: sessionId
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - >-
            @azure/service-bus.MessageReceiver |
            @azure/service-bus.MessageSession | undefined
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: '{boolean} [isClosed] Denotes if close() was called on this client.'
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.isSessionEnabled'
    name: isSessionEnabled
    fullName: isSessionEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {boolean} [isSessionEnabled] Indicates whether the client entity is
      session enabled.

      Default: `false`.
    optional: true
    syntax:
      content: 'isSessionEnabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.managementClient'
    name: managementClient
    fullName: managementClient
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {ManagementClient} [managementClient] A reference to the management client

      ($management endpoint) on the underlying amqp connection for the
      ServiceBus Client.
    optional: true
    syntax:
      content: 'managementClient?: ManagementClient'
      return:
        type:
          - '@azure/service-bus.ManagementClient'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.messageSessions'
    name: messageSessions
    fullName: messageSessions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Dictionary<MessageSession>} messageSessions A dictionary of the
      MessageSession

      objects associated with this client.
    syntax:
      content: 'messageSessions: Dictionary<MessageSession>'
      return:
        type:
          - Dictionary<@azure/service-bus.MessageSession>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.namespace'
    name: namespace
    fullName: namespace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {ConnectionContext} namespace Describes the context with common properties
      at

      the namespace level.
    syntax:
      content: 'namespace: ConnectionContext'
      return:
        type:
          - '@azure/service-bus.ConnectionContext'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.onDetached'
    name: onDetached(AmqpError | Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onDetached(error?: AmqpError | Error)'
      parameters:
        - id: error
          type:
            - AmqpError | Error
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.requestResponseLockedMessages'
    name: requestResponseLockedMessages
    fullName: requestResponseLockedMessages
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {ConcurrentExpiringMap<string>} [requestResponseLockedMessages] A map of
      locked

      messages received using the management client.
    syntax:
      content: 'requestResponseLockedMessages: ConcurrentExpiringMap<string>'
      return:
        type:
          - '@azure/service-bus.ConcurrentExpiringMap<string>'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.sender'
    name: sender
    fullName: sender
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {MessageSender} [sender] The ServiceBus sender associated with the client
      entity.
    optional: true
    syntax:
      content: 'sender?: MessageSender'
      return:
        type:
          - '@azure/service-bus.MessageSender'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.sessionManager'
    name: sessionManager
    fullName: sessionManager
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {SessionManager} [sessionManager] SessionManager is responsible for
      efficiently

      receiving messages from multiple message sessions.
    optional: true
    syntax:
      content: 'sessionManager?: SessionManager'
      return:
        type:
          - '@azure/service-bus.SessionManager'
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ClientEntityContext.streamingReceiver'
    name: streamingReceiver
    fullName: streamingReceiver
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {StreamingReceiver} [receiver] The ServiceBus receiver associated with the
      client entity for streaming messages.
    optional: true
    syntax:
      content: 'streamingReceiver?: StreamingReceiver'
      return:
        type:
          - '@azure/service-bus.StreamingReceiver'
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.BatchingReceiver'
    name: BatchingReceiver
    spec.typeScript:
      - name: BatchingReceiver
        fullName: BatchingReceiver
        uid: '@azure/service-bus.BatchingReceiver'
  - uid: '@azure/service-bus.ClientType'
    name: ClientType
    spec.typeScript:
      - name: ClientType
        fullName: ClientType
        uid: '@azure/service-bus.ClientType'
  - uid: '@azure/service-bus.ManagementClient'
    name: ManagementClient
    spec.typeScript:
      - name: ManagementClient
        fullName: ManagementClient
        uid: '@azure/service-bus.ManagementClient'
  - uid: Dictionary<@azure/service-bus.MessageSession>
    name: MessageSession>
    spec.typeScript:
      - name: Dictionary<
        fullName: Dictionary<
      - name: MessageSession
        fullName: MessageSession
        uid: '@azure/service-bus.MessageSession'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.ConnectionContext'
    name: ConnectionContext
    spec.typeScript:
      - name: ConnectionContext
        fullName: ConnectionContext
        uid: '@azure/service-bus.ConnectionContext'
  - uid: '@azure/service-bus.ConcurrentExpiringMap<string>'
    name: ConcurrentExpiringMap<string>
    spec.typeScript:
      - name: ConcurrentExpiringMap
        fullName: ConcurrentExpiringMap
        uid: '@azure/service-bus.ConcurrentExpiringMap'
      - name: <string>
        fullName: <string>
  - uid: '@azure/service-bus.MessageSender'
    name: MessageSender
    spec.typeScript:
      - name: MessageSender
        fullName: MessageSender
        uid: '@azure/service-bus.MessageSender'
  - uid: '@azure/service-bus.SessionManager'
    name: SessionManager
    spec.typeScript:
      - name: SessionManager
        fullName: SessionManager
        uid: '@azure/service-bus.SessionManager'
  - uid: '@azure/service-bus.StreamingReceiver'
    name: StreamingReceiver
    spec.typeScript:
      - name: StreamingReceiver
        fullName: StreamingReceiver
        uid: '@azure/service-bus.StreamingReceiver'
  - uid: '@azure/service-bus.ClientEntityContextOptions'
    name: ClientEntityContextOptions
    spec.typeScript:
      - name: ClientEntityContextOptions
        fullName: ClientEntityContextOptions
        uid: '@azure/service-bus.ClientEntityContextOptions'
  - uid: '@azure/service-bus.ClientEntityContext'
    name: ClientEntityContext
    spec.typeScript:
      - name: ClientEntityContext
        fullName: ClientEntityContext
        uid: '@azure/service-bus.ClientEntityContext'
  - uid: >-
      @azure/service-bus.MessageReceiver | @azure/service-bus.MessageSession |
      undefined
    name: MessageSession | undefined
    spec.typeScript:
      - name: MessageReceiver
        fullName: MessageReceiver
        uid: '@azure/service-bus.MessageReceiver'
      - name: ' | '
        fullName: ' | '
      - name: MessageSession
        fullName: MessageSession
        uid: '@azure/service-bus.MessageSession'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: '@azure/service-bus.ClientEntityContext.batchingReceiver'
    name: batchingReceiver
  - uid: '@azure/service-bus.ClientEntityContext.clientId'
    name: clientId
  - uid: '@azure/service-bus.ClientEntityContext.clientType'
    name: clientType
  - uid: '@azure/service-bus.ClientEntityContext.close'
    name: close
  - uid: '@azure/service-bus.ClientEntityContext.create'
    name: create
  - uid: '@azure/service-bus.ClientEntityContext.entityPath'
    name: entityPath
  - uid: '@azure/service-bus.ClientEntityContext.expiredMessageSessions'
    name: expiredMessageSessions
  - uid: '@azure/service-bus.ClientEntityContext.getReceiver'
    name: getReceiver
  - uid: '@azure/service-bus.ClientEntityContext.isClosed'
    name: isClosed
  - uid: '@azure/service-bus.ClientEntityContext.isSessionEnabled'
    name: isSessionEnabled
  - uid: '@azure/service-bus.ClientEntityContext.managementClient'
    name: managementClient
  - uid: '@azure/service-bus.ClientEntityContext.messageSessions'
    name: messageSessions
  - uid: '@azure/service-bus.ClientEntityContext.namespace'
    name: namespace
  - uid: '@azure/service-bus.ClientEntityContext.onDetached'
    name: onDetached
  - uid: '@azure/service-bus.ClientEntityContext.requestResponseLockedMessages'
    name: requestResponseLockedMessages
  - uid: '@azure/service-bus.ClientEntityContext.sender'
    name: sender
  - uid: '@azure/service-bus.ClientEntityContext.sessionManager'
    name: sessionManager
  - uid: '@azure/service-bus.ClientEntityContext.streamingReceiver'
    name: streamingReceiver
