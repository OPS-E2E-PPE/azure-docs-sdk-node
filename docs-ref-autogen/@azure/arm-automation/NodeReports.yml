### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-automation.NodeReports'
    name: NodeReports
    fullName: NodeReports
    children:
      - '@azure/arm-automation.NodeReports.get'
      - '@azure/arm-automation.NodeReports.get_2'
      - '@azure/arm-automation.NodeReports.get_1'
      - '@azure/arm-automation.NodeReports.getContent'
      - '@azure/arm-automation.NodeReports.getContent_2'
      - '@azure/arm-automation.NodeReports.getContent_1'
      - '@azure/arm-automation.NodeReports.listByNode'
      - '@azure/arm-automation.NodeReports.listByNode_2'
      - '@azure/arm-automation.NodeReports.listByNode_1'
      - '@azure/arm-automation.NodeReports.listByNodeNext'
      - '@azure/arm-automation.NodeReports.listByNodeNext_2'
      - '@azure/arm-automation.NodeReports.listByNodeNext_1'
      - '@azure/arm-automation.NodeReports.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a NodeReports.
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.get'
    name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the Dsc node report data by node id and report id.
    syntax:
      content: >-
        function get(resourceGroupName: string, automationAccountName: string,
        nodeId: string, reportId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NodeReportsGetResponse>
        description: Promise<Models.NodeReportsGetResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.get_2'
    name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<DscNodeReport>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, automationAccountName: string,
        nodeId: string, reportId: string, options: RequestOptionsBase, callback:
        ServiceCallback<DscNodeReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReport>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.get_1'
    name: 'get(string, string, string, string, ServiceCallback<DscNodeReport>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, automationAccountName: string,
        nodeId: string, reportId: string, callback:
        ServiceCallback<DscNodeReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReport>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.getContent'
    name: 'getContent(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the Dsc node reports by node id and report id.
    syntax:
      content: >-
        function getContent(resourceGroupName: string, automationAccountName:
        string, nodeId: string, reportId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NodeReportsGetContentResponse>
        description: Promise<Models.NodeReportsGetContentResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.getContent_2'
    name: >-
      getContent(string, string, string, string, RequestOptionsBase,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContent(resourceGroupName: string, automationAccountName:
        string, nodeId: string, reportId: string, options: RequestOptionsBase,
        callback: ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.getContent_1'
    name: 'getContent(string, string, string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContent(resourceGroupName: string, automationAccountName:
        string, nodeId: string, reportId: string, callback:
        ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The Dsc node id.
        - id: reportId
          type:
            - string
          description: The report id.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNode'
    name: >-
      listByNode(string, string, string,
      Models.NodeReportsListByNodeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the Dsc node report list by node id.
    syntax:
      content: >-
        function listByNode(resourceGroupName: string, automationAccountName:
        string, nodeId: string, options?:
        Models.NodeReportsListByNodeOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The parameters supplied to the list operation.
        - id: options
          type:
            - Models.NodeReportsListByNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NodeReportsListByNodeResponse>
        description: Promise<Models.NodeReportsListByNodeResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNode_2'
    name: >-
      listByNode(string, string, string, NodeReportsListByNodeOptionalParams,
      ServiceCallback<DscNodeReportListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNode(resourceGroupName: string, automationAccountName:
        string, nodeId: string, options: NodeReportsListByNodeOptionalParams,
        callback: ServiceCallback<DscNodeReportListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The parameters supplied to the list operation.
        - id: options
          type:
            - '@azure/arm-automation.NodeReportsListByNodeOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReportListResult>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNode_1'
    name: >-
      listByNode(string, string, string,
      ServiceCallback<DscNodeReportListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNode(resourceGroupName: string, automationAccountName:
        string, nodeId: string, callback:
        ServiceCallback<DscNodeReportListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of an Azure Resource group.
        - id: automationAccountName
          type:
            - string
          description: The name of the automation account.
        - id: nodeId
          type:
            - string
          description: The parameters supplied to the list operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReportListResult>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNodeNext'
    name: 'listByNodeNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the Dsc node report list by node id.
    syntax:
      content: >-
        function listByNodeNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NodeReportsListByNodeNextResponse>
        description: Promise<Models.NodeReportsListByNodeNextResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNodeNext_2'
    name: >-
      listByNodeNext(string, RequestOptionsBase,
      ServiceCallback<DscNodeReportListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNodeNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DscNodeReportListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReportListResult>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.listByNodeNext_1'
    name: 'listByNodeNext(string, ServiceCallback<DscNodeReportListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNodeNext(nextPageLink: string, callback:
        ServiceCallback<DscNodeReportListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-automation.DscNodeReportListResult>
          description: |
            The callback
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.NodeReports.constructor'
    name: NodeReports(AutomationClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a NodeReports.
    syntax:
      content: 'new NodeReports(client: AutomationClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-automation.AutomationClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-automation'
references:
  - uid: '@azure/arm-automation.AutomationClientContext'
    name: AutomationClientContext
    spec.typeScript:
      - name: AutomationClientContext
        fullName: AutomationClientContext
        uid: '@azure/arm-automation.AutomationClientContext'
  - uid: ServiceCallback<@azure/arm-automation.DscNodeReport>
    name: DscNodeReport>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DscNodeReport
        fullName: DscNodeReport
        uid: '@azure/arm-automation.DscNodeReport'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-automation.DscNodeReportListResult>
    name: DscNodeReportListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DscNodeReportListResult
        fullName: DscNodeReportListResult
        uid: '@azure/arm-automation.DscNodeReportListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-automation.NodeReportsListByNodeOptionalParams'
    name: NodeReportsListByNodeOptionalParams
    spec.typeScript:
      - name: NodeReportsListByNodeOptionalParams
        fullName: NodeReportsListByNodeOptionalParams
        uid: '@azure/arm-automation.NodeReportsListByNodeOptionalParams'
