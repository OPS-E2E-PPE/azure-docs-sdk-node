### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-subscriptions.Subscriptions'
    name: Subscriptions
    fullName: Subscriptions
    children:
      - '@azure/arm-subscriptions.Subscriptions.cancel'
      - '@azure/arm-subscriptions.Subscriptions.cancel_2'
      - '@azure/arm-subscriptions.Subscriptions.cancel_1'
      - '@azure/arm-subscriptions.Subscriptions.get'
      - '@azure/arm-subscriptions.Subscriptions.get_2'
      - '@azure/arm-subscriptions.Subscriptions.get_1'
      - '@azure/arm-subscriptions.Subscriptions.list'
      - '@azure/arm-subscriptions.Subscriptions.list_2'
      - '@azure/arm-subscriptions.Subscriptions.list_1'
      - '@azure/arm-subscriptions.Subscriptions.listLocations'
      - '@azure/arm-subscriptions.Subscriptions.listLocations_2'
      - '@azure/arm-subscriptions.Subscriptions.listLocations_1'
      - '@azure/arm-subscriptions.Subscriptions.listNext'
      - '@azure/arm-subscriptions.Subscriptions.listNext_2'
      - '@azure/arm-subscriptions.Subscriptions.listNext_1'
      - '@azure/arm-subscriptions.Subscriptions.rename'
      - '@azure/arm-subscriptions.Subscriptions.rename_2'
      - '@azure/arm-subscriptions.Subscriptions.rename_1'
      - '@azure/arm-subscriptions.Subscriptions.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Subscriptions.
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.cancel'
    name: 'cancel(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to cancel a subscription
    syntax:
      content: >-
        function cancel(subscriptionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsCancelResponse>
        description: Promise<Models.SubscriptionsCancelResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.cancel_2'
    name: >-
      cancel(string, RequestOptionsBase,
      ServiceCallback<CanceledSubscriptionId>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancel(subscriptionId: string, options: RequestOptionsBase,
        callback: ServiceCallback<CanceledSubscriptionId>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.CanceledSubscriptionId>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.cancel_1'
    name: 'cancel(string, ServiceCallback<CanceledSubscriptionId>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancel(subscriptionId: string, callback:
        ServiceCallback<CanceledSubscriptionId>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.CanceledSubscriptionId>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets details about a specified subscription.
    syntax:
      content: >-
        function get(subscriptionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsGetResponse>
        description: Promise<Models.SubscriptionsGetResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Subscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(subscriptionId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Subscription>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.Subscription>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get_1'
    name: 'get(string, ServiceCallback<Subscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(subscriptionId: string, callback:
        ServiceCallback<Subscription>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.Subscription>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all subscriptions for a tenant.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListResponse>
        description: Promise<Models.SubscriptionsListResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<SubscriptionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<SubscriptionListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list_1'
    name: list(ServiceCallback<SubscriptionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<SubscriptionListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations'
    name: 'listLocations(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation provides all the locations that are available for resource
      providers; however,

      each resource provider may support a subset of this list.
    syntax:
      content: >-
        function listLocations(subscriptionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListLocationsResponse>
        description: Promise<Models.SubscriptionsListLocationsResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations_2'
    name: >-
      listLocations(string, RequestOptionsBase,
      ServiceCallback<LocationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listLocations(subscriptionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<LocationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.LocationListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations_1'
    name: 'listLocations(string, ServiceCallback<LocationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listLocations(subscriptionId: string, callback:
        ServiceCallback<LocationListResult>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.LocationListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all subscriptions for a tenant.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListNextResponse>
        description: Promise<Models.SubscriptionsListNextResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SubscriptionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SubscriptionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext_1'
    name: 'listNext(string, ServiceCallback<SubscriptionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SubscriptionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.rename'
    name: 'rename(string, SubscriptionName, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to rename a subscription
    syntax:
      content: >-
        function rename(subscriptionId: string, body: SubscriptionName,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: body
          type:
            - '@azure/arm-subscriptions.SubscriptionName'
          description: Subscription Name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsRenameResponse>
        description: Promise<Models.SubscriptionsRenameResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.rename_2'
    name: >-
      rename(string, SubscriptionName, RequestOptionsBase,
      ServiceCallback<RenamedSubscriptionId>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(subscriptionId: string, body: SubscriptionName, options:
        RequestOptionsBase, callback: ServiceCallback<RenamedSubscriptionId>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: body
          type:
            - '@azure/arm-subscriptions.SubscriptionName'
          description: Subscription Name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.RenamedSubscriptionId>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.rename_1'
    name: 'rename(string, SubscriptionName, ServiceCallback<RenamedSubscriptionId>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(subscriptionId: string, body: SubscriptionName,
        callback: ServiceCallback<RenamedSubscriptionId>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Subscription Id.
        - id: body
          type:
            - '@azure/arm-subscriptions.SubscriptionName'
          description: Subscription Name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.RenamedSubscriptionId>
          description: |
            The callback
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.constructor'
    name: Subscriptions(SubscriptionClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Subscriptions.
    syntax:
      content: 'new Subscriptions(client: SubscriptionClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-subscriptions.SubscriptionClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-subscriptions'
references:
  - uid: '@azure/arm-subscriptions.SubscriptionClientContext'
    name: SubscriptionClientContext
    spec.typeScript:
      - name: SubscriptionClientContext
        fullName: SubscriptionClientContext
        uid: '@azure/arm-subscriptions.SubscriptionClientContext'
  - uid: ServiceCallback<@azure/arm-subscriptions.CanceledSubscriptionId>
    name: CanceledSubscriptionId>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CanceledSubscriptionId
        fullName: CanceledSubscriptionId
        uid: '@azure/arm-subscriptions.CanceledSubscriptionId'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-subscriptions.Subscription>
    name: Subscription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Subscription
        fullName: Subscription
        uid: '@azure/arm-subscriptions.Subscription'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
    name: SubscriptionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SubscriptionListResult
        fullName: SubscriptionListResult
        uid: '@azure/arm-subscriptions.SubscriptionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-subscriptions.LocationListResult>
    name: LocationListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LocationListResult
        fullName: LocationListResult
        uid: '@azure/arm-subscriptions.LocationListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-subscriptions.SubscriptionName'
    name: SubscriptionName
    spec.typeScript:
      - name: SubscriptionName
        fullName: SubscriptionName
        uid: '@azure/arm-subscriptions.SubscriptionName'
  - uid: ServiceCallback<@azure/arm-subscriptions.RenamedSubscriptionId>
    name: RenamedSubscriptionId>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RenamedSubscriptionId
        fullName: RenamedSubscriptionId
        uid: '@azure/arm-subscriptions.RenamedSubscriptionId'
      - name: '>'
        fullName: '>'
