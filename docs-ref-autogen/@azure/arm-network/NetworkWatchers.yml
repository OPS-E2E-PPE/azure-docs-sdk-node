### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.NetworkWatchers'
    name: NetworkWatchers
    fullName: NetworkWatchers
    children:
      - '@azure/arm-network.NetworkWatchers.beginCheckConnectivity'
      - '@azure/arm-network.NetworkWatchers.beginDeleteMethod'
      - '@azure/arm-network.NetworkWatchers.beginGetAzureReachabilityReport'
      - '@azure/arm-network.NetworkWatchers.beginGetFlowLogStatus'
      - >-
        @azure/arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic
      - '@azure/arm-network.NetworkWatchers.beginGetNextHop'
      - '@azure/arm-network.NetworkWatchers.beginGetTroubleshooting'
      - '@azure/arm-network.NetworkWatchers.beginGetTroubleshootingResult'
      - '@azure/arm-network.NetworkWatchers.beginGetVMSecurityRules'
      - '@azure/arm-network.NetworkWatchers.beginListAvailableProviders'
      - '@azure/arm-network.NetworkWatchers.beginSetFlowLogConfiguration'
      - '@azure/arm-network.NetworkWatchers.beginVerifyIPFlow'
      - '@azure/arm-network.NetworkWatchers.checkConnectivity'
      - '@azure/arm-network.NetworkWatchers.createOrUpdate'
      - '@azure/arm-network.NetworkWatchers.createOrUpdate_2'
      - '@azure/arm-network.NetworkWatchers.createOrUpdate_1'
      - '@azure/arm-network.NetworkWatchers.deleteMethod'
      - '@azure/arm-network.NetworkWatchers.get'
      - '@azure/arm-network.NetworkWatchers.get_2'
      - '@azure/arm-network.NetworkWatchers.get_1'
      - '@azure/arm-network.NetworkWatchers.getAzureReachabilityReport'
      - '@azure/arm-network.NetworkWatchers.getFlowLogStatus'
      - '@azure/arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic'
      - '@azure/arm-network.NetworkWatchers.getNextHop'
      - '@azure/arm-network.NetworkWatchers.getTopology'
      - '@azure/arm-network.NetworkWatchers.getTopology_2'
      - '@azure/arm-network.NetworkWatchers.getTopology_1'
      - '@azure/arm-network.NetworkWatchers.getTroubleshooting'
      - '@azure/arm-network.NetworkWatchers.getTroubleshootingResult'
      - '@azure/arm-network.NetworkWatchers.getVMSecurityRules'
      - '@azure/arm-network.NetworkWatchers.list'
      - '@azure/arm-network.NetworkWatchers.list_2'
      - '@azure/arm-network.NetworkWatchers.list_1'
      - '@azure/arm-network.NetworkWatchers.listAll'
      - '@azure/arm-network.NetworkWatchers.listAll_2'
      - '@azure/arm-network.NetworkWatchers.listAll_1'
      - '@azure/arm-network.NetworkWatchers.listAvailableProviders'
      - '@azure/arm-network.NetworkWatchers.constructor'
      - '@azure/arm-network.NetworkWatchers.setFlowLogConfiguration'
      - '@azure/arm-network.NetworkWatchers.updateTags'
      - '@azure/arm-network.NetworkWatchers.updateTags_2'
      - '@azure/arm-network.NetworkWatchers.updateTags_1'
      - '@azure/arm-network.NetworkWatchers.verifyIPFlow'
    langs:
      - typeScript
    type: class
    summary: Class representing a NetworkWatchers.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginCheckConnectivity'
    name: >-
      beginCheckConnectivity(string, string, ConnectivityParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a

      given endpoint including another VM or an arbitrary remote server.
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.ConnectivityParameters'
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetAzureReachabilityReport'
    name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the relative latency score for internet service providers from a
      specified location to

      Azure regions.
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.AzureReachabilityReportParameters'
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetFlowLogStatus'
    name: >-
      beginGetFlowLogStatus(string, string, FlowLogStatusParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.FlowLogStatusParameters'
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics

            (optional) status.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic'
    name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network

      behavior. It provides detailed information on what security rules were
      applied to a specified

      traffic flow and the result of evaluating these rules. Customers must
      provide details of a flow

      like source, destination, protocol, etc. The API returns whether traffic
      was allowed or denied,

      the rules evaluated for the specified flow and the evaluation results.
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NetworkConfigurationDiagnosticParameters'
          description: Parameters to get network configuration diagnostic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetNextHop'
    name: >-
      beginGetNextHop(string, string, NextHopParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NextHopParameters'
          description: Parameters that define the source and destination endpoint.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshooting'
    name: >-
      beginGetTroubleshooting(string, string, TroubleshootingParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource.
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.TroubleshootingParameters'
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshootingResult'
    name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource.
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.QueryTroubleshootingParameters'
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginGetVMSecurityRules'
    name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.SecurityGroupViewParameters'
          description: Parameters that define the VM to check security groups for.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginListAvailableProviders'
    name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.AvailableProvidersListParameters'
          description: Parameters that scope the list of available providers.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginSetFlowLogConfiguration'
    name: >-
      beginSetFlowLogConfiguration(string, string, FlowLogInformation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.FlowLogInformation'
          description: Parameters that define the configuration of flow log.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.beginVerifyIPFlow'
    name: >-
      beginVerifyIPFlow(string, string, VerificationIPFlowParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.VerificationIPFlowParameters'
          description: Parameters that define the IP flow to be verified.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.checkConnectivity'
    name: >-
      checkConnectivity(string, string, ConnectivityParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a

      given endpoint including another VM or an arbitrary remote server.
    syntax:
      content: >-
        function checkConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.ConnectivityParameters'
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersCheckConnectivityResponse>
        description: Promise<Models.NetworkWatchersCheckConnectivityResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.createOrUpdate'
    name: 'createOrUpdate(string, string, NetworkWatcher, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a network watcher in the specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NetworkWatcher'
          description: Parameters that define the network watcher resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersCreateOrUpdateResponse>
        description: Promise<Models.NetworkWatchersCreateOrUpdateResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, NetworkWatcher, RequestOptionsBase,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NetworkWatcher'
          description: Parameters that define the network watcher resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, NetworkWatcher,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NetworkWatcher'
          description: Parameters that define the network watcher resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified network watcher by resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetResponse>
        description: Promise<Models.NetworkWatchersGetResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options: RequestOptionsBase, callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.get_1'
    name: 'get(string, string, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getAzureReachabilityReport'
    name: >-
      getAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the relative latency score for internet service providers from a
      specified location to

      Azure regions.
    syntax:
      content: >-
        function getAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.AzureReachabilityReportParameters'
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetAzureReachabilityReportResponse>
        description: Promise<Models.NetworkWatchersGetAzureReachabilityReportResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getFlowLogStatus'
    name: >-
      getFlowLogStatus(string, string, FlowLogStatusParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function getFlowLogStatus(resourceGroupName: string, networkWatcherName:
        string, parameters: FlowLogStatusParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.FlowLogStatusParameters'
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics

            (optional) status.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetFlowLogStatusResponse>
        description: Promise<Models.NetworkWatchersGetFlowLogStatusResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic'
    name: >-
      getNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network

      behavior. It provides detailed information on what security rules were
      applied to a specified

      traffic flow and the result of evaluating these rules. Customers must
      provide details of a flow

      like source, destination, protocol, etc. The API returns whether traffic
      was allowed or denied,

      the rules evaluated for the specified flow and the evaluation results.
    syntax:
      content: >-
        function getNetworkConfigurationDiagnostic(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NetworkConfigurationDiagnosticParameters'
          description: Parameters to get network configuration diagnostic.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.NetworkWatchersGetNetworkConfigurationDiagnosticResponse>
        description: >-
          Promise<Models.NetworkWatchersGetNetworkConfigurationDiagnosticResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getNextHop'
    name: 'getNextHop(string, string, NextHopParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function getNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.NextHopParameters'
          description: Parameters that define the source and destination endpoint.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetNextHopResponse>
        description: Promise<Models.NetworkWatchersGetNextHopResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getTopology'
    name: 'getTopology(string, string, TopologyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current network topology by resource group.
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TopologyParameters'
          description: Parameters that define the representation of topology.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetTopologyResponse>
        description: Promise<Models.NetworkWatchersGetTopologyResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getTopology_2'
    name: >-
      getTopology(string, string, TopologyParameters, RequestOptionsBase,
      ServiceCallback<Topology>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options: RequestOptionsBase,
        callback: ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TopologyParameters'
          description: Parameters that define the representation of topology.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.Topology>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getTopology_1'
    name: 'getTopology(string, string, TopologyParameters, ServiceCallback<Topology>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, callback:
        ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TopologyParameters'
          description: Parameters that define the representation of topology.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.Topology>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getTroubleshooting'
    name: >-
      getTroubleshooting(string, string, TroubleshootingParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource.
    syntax:
      content: >-
        function getTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.TroubleshootingParameters'
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetTroubleshootingResponse>
        description: Promise<Models.NetworkWatchersGetTroubleshootingResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getTroubleshootingResult'
    name: >-
      getTroubleshootingResult(string, string, QueryTroubleshootingParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource.
    syntax:
      content: >-
        function getTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.QueryTroubleshootingParameters'
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetTroubleshootingResultResponse>
        description: Promise<Models.NetworkWatchersGetTroubleshootingResultResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.getVMSecurityRules'
    name: >-
      getVMSecurityRules(string, string, SecurityGroupViewParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function getVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.SecurityGroupViewParameters'
          description: Parameters that define the VM to check security groups for.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersGetVMSecurityRulesResponse>
        description: Promise<Models.NetworkWatchersGetVMSecurityRulesResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersListResponse>
        description: Promise<Models.NetworkWatchersListResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.list_2'
    name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<NetworkWatcherListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcherListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.list_1'
    name: 'list(string, ServiceCallback<NetworkWatcherListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcherListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.listAll'
    name: listAll(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by subscription.
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersListAllResponse>
        description: Promise<Models.NetworkWatchersListAllResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.listAll_2'
    name: 'listAll(RequestOptionsBase, ServiceCallback<NetworkWatcherListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcherListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.listAll_1'
    name: listAll(ServiceCallback<NetworkWatcherListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAll(callback: ServiceCallback<NetworkWatcherListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcherListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.listAvailableProviders'
    name: >-
      listAvailableProviders(string, string, AvailableProvidersListParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function listAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.AvailableProvidersListParameters'
          description: Parameters that scope the list of available providers.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersListAvailableProvidersResponse>
        description: Promise<Models.NetworkWatchersListAvailableProvidersResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.constructor'
    name: NetworkWatchers(NetworkManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a NetworkWatchers.
    syntax:
      content: 'new NetworkWatchers(client: NetworkManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-network.NetworkManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.setFlowLogConfiguration'
    name: >-
      setFlowLogConfiguration(string, string, FlowLogInformation,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function setFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - '@azure/arm-network.FlowLogInformation'
          description: Parameters that define the configuration of flow log.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersSetFlowLogConfigurationResponse>
        description: Promise<Models.NetworkWatchersSetFlowLogConfigurationResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.updateTags'
    name: 'updateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a network watcher tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update network watcher tags.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersUpdateTagsResponse>
        description: Promise<Models.NetworkWatchersUpdateTagsResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.updateTags_2'
    name: >-
      updateTags(string, string, TagsObject, RequestOptionsBase,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update network watcher tags.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.updateTags_1'
    name: 'updateTags(string, string, TagsObject, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update network watcher tags.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.NetworkWatcher>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.NetworkWatchers.verifyIPFlow'
    name: >-
      verifyIPFlow(string, string, VerificationIPFlowParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function verifyIPFlow(resourceGroupName: string, networkWatcherName:
        string, parameters: VerificationIPFlowParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - '@azure/arm-network.VerificationIPFlowParameters'
          description: Parameters that define the IP flow to be verified.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NetworkWatchersVerifyIPFlowResponse>
        description: Promise<Models.NetworkWatchersVerifyIPFlowResponse>
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.NetworkManagementClientContext'
    name: NetworkManagementClientContext
    spec.typeScript:
      - name: NetworkManagementClientContext
        fullName: NetworkManagementClientContext
        uid: '@azure/arm-network.NetworkManagementClientContext'
  - uid: '@azure/arm-network.ConnectivityParameters'
    name: ConnectivityParameters
    spec.typeScript:
      - name: ConnectivityParameters
        fullName: ConnectivityParameters
        uid: '@azure/arm-network.ConnectivityParameters'
  - uid: '@azure/arm-network.AzureReachabilityReportParameters'
    name: AzureReachabilityReportParameters
    spec.typeScript:
      - name: AzureReachabilityReportParameters
        fullName: AzureReachabilityReportParameters
        uid: '@azure/arm-network.AzureReachabilityReportParameters'
  - uid: '@azure/arm-network.FlowLogStatusParameters'
    name: FlowLogStatusParameters
    spec.typeScript:
      - name: FlowLogStatusParameters
        fullName: FlowLogStatusParameters
        uid: '@azure/arm-network.FlowLogStatusParameters'
  - uid: '@azure/arm-network.NetworkConfigurationDiagnosticParameters'
    name: NetworkConfigurationDiagnosticParameters
    spec.typeScript:
      - name: NetworkConfigurationDiagnosticParameters
        fullName: NetworkConfigurationDiagnosticParameters
        uid: '@azure/arm-network.NetworkConfigurationDiagnosticParameters'
  - uid: '@azure/arm-network.NextHopParameters'
    name: NextHopParameters
    spec.typeScript:
      - name: NextHopParameters
        fullName: NextHopParameters
        uid: '@azure/arm-network.NextHopParameters'
  - uid: '@azure/arm-network.TroubleshootingParameters'
    name: TroubleshootingParameters
    spec.typeScript:
      - name: TroubleshootingParameters
        fullName: TroubleshootingParameters
        uid: '@azure/arm-network.TroubleshootingParameters'
  - uid: '@azure/arm-network.QueryTroubleshootingParameters'
    name: QueryTroubleshootingParameters
    spec.typeScript:
      - name: QueryTroubleshootingParameters
        fullName: QueryTroubleshootingParameters
        uid: '@azure/arm-network.QueryTroubleshootingParameters'
  - uid: '@azure/arm-network.SecurityGroupViewParameters'
    name: SecurityGroupViewParameters
    spec.typeScript:
      - name: SecurityGroupViewParameters
        fullName: SecurityGroupViewParameters
        uid: '@azure/arm-network.SecurityGroupViewParameters'
  - uid: '@azure/arm-network.AvailableProvidersListParameters'
    name: AvailableProvidersListParameters
    spec.typeScript:
      - name: AvailableProvidersListParameters
        fullName: AvailableProvidersListParameters
        uid: '@azure/arm-network.AvailableProvidersListParameters'
  - uid: '@azure/arm-network.FlowLogInformation'
    name: FlowLogInformation
    spec.typeScript:
      - name: FlowLogInformation
        fullName: FlowLogInformation
        uid: '@azure/arm-network.FlowLogInformation'
  - uid: '@azure/arm-network.VerificationIPFlowParameters'
    name: VerificationIPFlowParameters
    spec.typeScript:
      - name: VerificationIPFlowParameters
        fullName: VerificationIPFlowParameters
        uid: '@azure/arm-network.VerificationIPFlowParameters'
  - uid: '@azure/arm-network.NetworkWatcher'
    name: NetworkWatcher
    spec.typeScript:
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: '@azure/arm-network.NetworkWatcher'
  - uid: ServiceCallback<@azure/arm-network.NetworkWatcher>
    name: NetworkWatcher>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: '@azure/arm-network.NetworkWatcher'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-network.TopologyParameters'
    name: TopologyParameters
    spec.typeScript:
      - name: TopologyParameters
        fullName: TopologyParameters
        uid: '@azure/arm-network.TopologyParameters'
  - uid: ServiceCallback<@azure/arm-network.Topology>
    name: Topology>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Topology
        fullName: Topology
        uid: '@azure/arm-network.Topology'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-network.NetworkWatcherListResult>
    name: NetworkWatcherListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkWatcherListResult
        fullName: NetworkWatcherListResult
        uid: '@azure/arm-network.NetworkWatcherListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-network.TagsObject'
    name: TagsObject
    spec.typeScript:
      - name: TagsObject
        fullName: TagsObject
        uid: '@azure/arm-network.TagsObject'
