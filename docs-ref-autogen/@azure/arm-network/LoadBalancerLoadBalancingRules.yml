### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules'
    name: LoadBalancerLoadBalancingRules
    fullName: LoadBalancerLoadBalancingRules
    children:
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.get'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.get_2'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.get_1'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.list'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.list_2'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.list_1'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext_2'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext_1'
      - '@azure/arm-network.LoadBalancerLoadBalancingRules.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a LoadBalancerLoadBalancingRules.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified load balancer load balancing rule.
    syntax:
      content: >-
        function get(resourceGroupName: string, loadBalancerName: string,
        loadBalancingRuleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: loadBalancingRuleName
          type:
            - string
          description: The name of the load balancing rule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoadBalancerLoadBalancingRulesGetResponse>
        description: Promise<Models.LoadBalancerLoadBalancingRulesGetResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<LoadBalancingRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, loadBalancerName: string,
        loadBalancingRuleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<LoadBalancingRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: loadBalancingRuleName
          type:
            - string
          description: The name of the load balancing rule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.LoadBalancingRule>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.get_1'
    name: 'get(string, string, string, ServiceCallback<LoadBalancingRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, loadBalancerName: string,
        loadBalancingRuleName: string, callback:
        ServiceCallback<LoadBalancingRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: loadBalancingRuleName
          type:
            - string
          description: The name of the load balancing rule.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.LoadBalancingRule>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the load balancing rules in a load balancer.
    syntax:
      content: >-
        function list(resourceGroupName: string, loadBalancerName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoadBalancerLoadBalancingRulesListResponse>
        description: Promise<Models.LoadBalancerLoadBalancingRulesListResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.list_2'
    name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, loadBalancerName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.LoadBalancerLoadBalancingRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.list_1'
    name: >-
      list(string, string,
      ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, loadBalancerName: string,
        callback: ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.LoadBalancerLoadBalancingRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the load balancing rules in a load balancer.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoadBalancerLoadBalancingRulesListNextResponse>
        description: Promise<Models.LoadBalancerLoadBalancingRulesListNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.LoadBalancerLoadBalancingRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.listNext_1'
    name: 'listNext(string, ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<LoadBalancerLoadBalancingRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.LoadBalancerLoadBalancingRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.LoadBalancerLoadBalancingRules.constructor'
    name: LoadBalancerLoadBalancingRules(NetworkManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a LoadBalancerLoadBalancingRules.
    syntax:
      content: >-
        new LoadBalancerLoadBalancingRules(client:
        NetworkManagementClientContext)
      parameters:
        - id: client
          type:
            - '@azure/arm-network.NetworkManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.NetworkManagementClientContext'
    name: NetworkManagementClientContext
    spec.typeScript:
      - name: NetworkManagementClientContext
        fullName: NetworkManagementClientContext
        uid: '@azure/arm-network.NetworkManagementClientContext'
  - uid: ServiceCallback<@azure/arm-network.LoadBalancingRule>
    name: LoadBalancingRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoadBalancingRule
        fullName: LoadBalancingRule
        uid: '@azure/arm-network.LoadBalancingRule'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-network.LoadBalancerLoadBalancingRuleListResult>
    name: LoadBalancerLoadBalancingRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoadBalancerLoadBalancingRuleListResult
        fullName: LoadBalancerLoadBalancingRuleListResult
        uid: '@azure/arm-network.LoadBalancerLoadBalancingRuleListResult'
      - name: '>'
        fullName: '>'
