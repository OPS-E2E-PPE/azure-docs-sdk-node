### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.RouteFilterRules'
    name: RouteFilterRules
    fullName: RouteFilterRules
    children:
      - '@azure/arm-network.RouteFilterRules.beginCreateOrUpdate'
      - '@azure/arm-network.RouteFilterRules.beginDeleteMethod'
      - '@azure/arm-network.RouteFilterRules.createOrUpdate'
      - '@azure/arm-network.RouteFilterRules.deleteMethod'
      - '@azure/arm-network.RouteFilterRules.get'
      - '@azure/arm-network.RouteFilterRules.get_2'
      - '@azure/arm-network.RouteFilterRules.get_1'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilter'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilter_2'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilter_1'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilterNext'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilterNext_2'
      - '@azure/arm-network.RouteFilterRules.listByRouteFilterNext_1'
      - '@azure/arm-network.RouteFilterRules.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a RouteFilterRules.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, RouteFilterRule,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - '@azure/arm-network.RouteFilterRule'
          description: |-
            Parameters supplied to the create or update route filter rule
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the rule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, RouteFilterRule,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - '@azure/arm-network.RouteFilterRule'
          description: |-
            Parameters supplied to the create or update route filter rule
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFilterRulesCreateOrUpdateResponse>
        description: Promise<Models.RouteFilterRulesCreateOrUpdateResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the rule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified rule from a route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the rule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFilterRulesGetResponse>
        description: Promise<Models.RouteFilterRulesGetResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the rule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRule>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.get_1'
    name: 'get(string, string, string, ServiceCallback<RouteFilterRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: ruleName
          type:
            - string
          description: The name of the rule.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRule>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilter'
    name: 'listByRouteFilter(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFilterRulesListByRouteFilterResponse>
        description: Promise<Models.RouteFilterRulesListByRouteFilterResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilter_2'
    name: >-
      listByRouteFilter(string, string, RequestOptionsBase,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilter_1'
    name: >-
      listByRouteFilter(string, string,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, callback: ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilterNext'
    name: 'listByRouteFilterNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilterNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFilterRulesListByRouteFilterNextResponse>
        description: Promise<Models.RouteFilterRulesListByRouteFilterNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilterNext_2'
    name: >-
      listByRouteFilterNext(string, RequestOptionsBase,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByRouteFilterNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.listByRouteFilterNext_1'
    name: 'listByRouteFilterNext(string, ServiceCallback<RouteFilterRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByRouteFilterNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterRuleListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilterRules.constructor'
    name: RouteFilterRules(NetworkManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a RouteFilterRules.
    syntax:
      content: 'new RouteFilterRules(client: NetworkManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-network.NetworkManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.NetworkManagementClientContext'
    name: NetworkManagementClientContext
    spec.typeScript:
      - name: NetworkManagementClientContext
        fullName: NetworkManagementClientContext
        uid: '@azure/arm-network.NetworkManagementClientContext'
  - uid: '@azure/arm-network.RouteFilterRule'
    name: RouteFilterRule
    spec.typeScript:
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: '@azure/arm-network.RouteFilterRule'
  - uid: ServiceCallback<@azure/arm-network.RouteFilterRule>
    name: RouteFilterRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: '@azure/arm-network.RouteFilterRule'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-network.RouteFilterRuleListResult>
    name: RouteFilterRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterRuleListResult
        fullName: RouteFilterRuleListResult
        uid: '@azure/arm-network.RouteFilterRuleListResult'
      - name: '>'
        fullName: '>'
