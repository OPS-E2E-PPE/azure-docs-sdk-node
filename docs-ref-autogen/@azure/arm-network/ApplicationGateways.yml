### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.ApplicationGateways'
    name: ApplicationGateways
    fullName: ApplicationGateways
    children:
      - '@azure/arm-network.ApplicationGateways.constructor'
      - '@azure/arm-network.ApplicationGateways.backendHealth'
      - '@azure/arm-network.ApplicationGateways.backendHealthOnDemand'
      - '@azure/arm-network.ApplicationGateways.beginBackendHealth'
      - '@azure/arm-network.ApplicationGateways.beginBackendHealthOnDemand'
      - '@azure/arm-network.ApplicationGateways.beginCreateOrUpdate'
      - '@azure/arm-network.ApplicationGateways.beginDeleteMethod'
      - '@azure/arm-network.ApplicationGateways.beginStart'
      - '@azure/arm-network.ApplicationGateways.beginStop'
      - '@azure/arm-network.ApplicationGateways.createOrUpdate'
      - '@azure/arm-network.ApplicationGateways.deleteMethod'
      - '@azure/arm-network.ApplicationGateways.get'
      - '@azure/arm-network.ApplicationGateways.get_2'
      - '@azure/arm-network.ApplicationGateways.get_1'
      - '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy'
      - '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy_2'
      - '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy_1'
      - '@azure/arm-network.ApplicationGateways.list'
      - '@azure/arm-network.ApplicationGateways.list_2'
      - '@azure/arm-network.ApplicationGateways.list_1'
      - '@azure/arm-network.ApplicationGateways.listAll'
      - '@azure/arm-network.ApplicationGateways.listAll_2'
      - '@azure/arm-network.ApplicationGateways.listAll_1'
      - '@azure/arm-network.ApplicationGateways.listAllNext'
      - '@azure/arm-network.ApplicationGateways.listAllNext_2'
      - '@azure/arm-network.ApplicationGateways.listAllNext_1'
      - '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders'
      - '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders_2'
      - '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders_1'
      - '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders'
      - '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders_2'
      - '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders_1'
      - '@azure/arm-network.ApplicationGateways.listAvailableServerVariables'
      - '@azure/arm-network.ApplicationGateways.listAvailableServerVariables_2'
      - '@azure/arm-network.ApplicationGateways.listAvailableServerVariables_1'
      - '@azure/arm-network.ApplicationGateways.listAvailableSslOptions'
      - '@azure/arm-network.ApplicationGateways.listAvailableSslOptions_2'
      - '@azure/arm-network.ApplicationGateways.listAvailableSslOptions_1'
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies_2
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies_1
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext_2
      - >-
        @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext_1
      - '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets'
      - '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets_2'
      - '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets_1'
      - '@azure/arm-network.ApplicationGateways.listNext'
      - '@azure/arm-network.ApplicationGateways.listNext_2'
      - '@azure/arm-network.ApplicationGateways.listNext_1'
      - '@azure/arm-network.ApplicationGateways.start'
      - '@azure/arm-network.ApplicationGateways.stop'
      - '@azure/arm-network.ApplicationGateways.updateTags'
      - '@azure/arm-network.ApplicationGateways.updateTags_2'
      - '@azure/arm-network.ApplicationGateways.updateTags_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ApplicationGateways.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.constructor'
    name: ApplicationGateways(NetworkManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ApplicationGateways.
    syntax:
      content: 'new ApplicationGateways(client: NetworkManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-network.NetworkManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.backendHealth'
    name: >-
      backendHealth(string, string,
      Models.ApplicationGatewaysBackendHealthOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the backend health of the specified application gateway in a resource
      group.
    syntax:
      content: >-
        function backendHealth(resourceGroupName: string,
        applicationGatewayName: string, options?:
        Models.ApplicationGatewaysBackendHealthOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - Models.ApplicationGatewaysBackendHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysBackendHealthResponse>
        description: Promise<Models.ApplicationGatewaysBackendHealthResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.backendHealthOnDemand'
    name: >-
      backendHealthOnDemand(string, string, ApplicationGatewayOnDemandProbe,
      Models.ApplicationGatewaysBackendHealthOnDemandOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the backend health for given combination of backend pool and http
      setting of the specified

      application gateway in a resource group.
    syntax:
      content: >-
        function backendHealthOnDemand(resourceGroupName: string,
        applicationGatewayName: string, probeRequest:
        ApplicationGatewayOnDemandProbe, options?:
        Models.ApplicationGatewaysBackendHealthOnDemandOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: probeRequest
          type:
            - '@azure/arm-network.ApplicationGatewayOnDemandProbe'
          description: Request body for on-demand test probe operation.
        - id: options
          type:
            - Models.ApplicationGatewaysBackendHealthOnDemandOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysBackendHealthOnDemandResponse>
        description: Promise<Models.ApplicationGatewaysBackendHealthOnDemandResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginBackendHealth'
    name: >-
      beginBackendHealth(string, string,
      Models.ApplicationGatewaysBeginBackendHealthOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the backend health of the specified application gateway in a resource
      group.
    syntax:
      content: >-
        function beginBackendHealth(resourceGroupName: string,
        applicationGatewayName: string, options?:
        Models.ApplicationGatewaysBeginBackendHealthOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - Models.ApplicationGatewaysBeginBackendHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginBackendHealthOnDemand'
    name: >-
      beginBackendHealthOnDemand(string, string,
      ApplicationGatewayOnDemandProbe,
      Models.ApplicationGatewaysBeginBackendHealthOnDemandOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the backend health for given combination of backend pool and http
      setting of the specified

      application gateway in a resource group.
    syntax:
      content: >-
        function beginBackendHealthOnDemand(resourceGroupName: string,
        applicationGatewayName: string, probeRequest:
        ApplicationGatewayOnDemandProbe, options?:
        Models.ApplicationGatewaysBeginBackendHealthOnDemandOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: probeRequest
          type:
            - '@azure/arm-network.ApplicationGatewayOnDemandProbe'
          description: Request body for on-demand test probe operation.
        - id: options
          type:
            - Models.ApplicationGatewaysBeginBackendHealthOnDemandOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, ApplicationGateway,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates the specified application gateway.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        applicationGatewayName: string, parameters: ApplicationGateway,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: parameters
          type:
            - '@azure/arm-network.ApplicationGateway'
          description: >-
            Parameters supplied to the create or update application gateway
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified application gateway.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        applicationGatewayName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginStart'
    name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts the specified application gateway.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, applicationGatewayName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.beginStop'
    name: 'beginStop(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops the specified application gateway in a resource group.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, applicationGatewayName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.createOrUpdate'
    name: >-
      createOrUpdate(string, string, ApplicationGateway,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates the specified application gateway.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        applicationGatewayName: string, parameters: ApplicationGateway,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: parameters
          type:
            - '@azure/arm-network.ApplicationGateway'
          description: >-
            Parameters supplied to the create or update application gateway
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysCreateOrUpdateResponse>
        description: Promise<Models.ApplicationGatewaysCreateOrUpdateResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified application gateway.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, applicationGatewayName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified application gateway.
    syntax:
      content: >-
        function get(resourceGroupName: string, applicationGatewayName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysGetResponse>
        description: Promise<Models.ApplicationGatewaysGetResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<ApplicationGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, applicationGatewayName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGateway>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.get_1'
    name: 'get(string, string, ServiceCallback<ApplicationGateway>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, applicationGatewayName: string,
        callback: ServiceCallback<ApplicationGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGateway>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy'
    name: 'getSslPredefinedPolicy(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets Ssl predefined policy with the specified policy name.
    syntax:
      content: >-
        function getSslPredefinedPolicy(predefinedPolicyName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: predefinedPolicyName
          type:
            - string
          description: Name of Ssl predefined policy.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysGetSslPredefinedPolicyResponse>
        description: Promise<Models.ApplicationGatewaysGetSslPredefinedPolicyResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy_2'
    name: >-
      getSslPredefinedPolicy(string, RequestOptionsBase,
      ServiceCallback<ApplicationGatewaySslPredefinedPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSslPredefinedPolicy(predefinedPolicyName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ApplicationGatewaySslPredefinedPolicy>)
      parameters:
        - id: predefinedPolicyName
          type:
            - string
          description: Name of Ssl predefined policy.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewaySslPredefinedPolicy>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.getSslPredefinedPolicy_1'
    name: >-
      getSslPredefinedPolicy(string,
      ServiceCallback<ApplicationGatewaySslPredefinedPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSslPredefinedPolicy(predefinedPolicyName: string, callback:
        ServiceCallback<ApplicationGatewaySslPredefinedPolicy>)
      parameters:
        - id: predefinedPolicyName
          type:
            - string
          description: Name of Ssl predefined policy.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewaySslPredefinedPolicy>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all application gateways in a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListResponse>
        description: Promise<Models.ApplicationGatewaysListResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.list_2'
    name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<ApplicationGatewayListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.list_1'
    name: 'list(string, ServiceCallback<ApplicationGatewayListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAll'
    name: listAll(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the application gateways in a subscription.
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListAllResponse>
        description: Promise<Models.ApplicationGatewaysListAllResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAll_2'
    name: 'listAll(RequestOptionsBase, ServiceCallback<ApplicationGatewayListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAll_1'
    name: listAll(ServiceCallback<ApplicationGatewayListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(callback:
        ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAllNext'
    name: 'listAllNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the application gateways in a subscription.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListAllNextResponse>
        description: Promise<Models.ApplicationGatewaysListAllNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAllNext_2'
    name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<ApplicationGatewayListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAllNext_1'
    name: 'listAllNext(string, ServiceCallback<ApplicationGatewayListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders'
    name: listAvailableRequestHeaders(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all available request headers.
    syntax:
      content: >-
        function listAvailableRequestHeaders(options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ApplicationGatewaysListAvailableRequestHeadersResponse>
        description: Promise<Models.ApplicationGatewaysListAvailableRequestHeadersResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders_2'
    name: 'listAvailableRequestHeaders(RequestOptionsBase, ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableRequestHeaders(options: RequestOptionsBase,
        callback: ServiceCallback<string[]>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableRequestHeaders_1'
    name: 'listAvailableRequestHeaders(ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableRequestHeaders(callback:
        ServiceCallback<string[]>)
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders'
    name: listAvailableResponseHeaders(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all available response headers.
    syntax:
      content: >-
        function listAvailableResponseHeaders(options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ApplicationGatewaysListAvailableResponseHeadersResponse>
        description: >-
          Promise<Models.ApplicationGatewaysListAvailableResponseHeadersResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders_2'
    name: >-
      listAvailableResponseHeaders(RequestOptionsBase,
      ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableResponseHeaders(options: RequestOptionsBase,
        callback: ServiceCallback<string[]>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableResponseHeaders_1'
    name: 'listAvailableResponseHeaders(ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableResponseHeaders(callback:
        ServiceCallback<string[]>)
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableServerVariables'
    name: listAvailableServerVariables(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all available server variables.
    syntax:
      content: >-
        function listAvailableServerVariables(options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ApplicationGatewaysListAvailableServerVariablesResponse>
        description: >-
          Promise<Models.ApplicationGatewaysListAvailableServerVariablesResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableServerVariables_2'
    name: >-
      listAvailableServerVariables(RequestOptionsBase,
      ServiceCallback<string[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableServerVariables(options: RequestOptionsBase,
        callback: ServiceCallback<string[]>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableServerVariables_1'
    name: 'listAvailableServerVariables(ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableServerVariables(callback:
        ServiceCallback<string[]>)
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableSslOptions'
    name: listAvailableSslOptions(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists available Ssl options for configuring Ssl policy.
    syntax:
      content: 'function listAvailableSslOptions(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListAvailableSslOptionsResponse>
        description: Promise<Models.ApplicationGatewaysListAvailableSslOptionsResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableSslOptions_2'
    name: >-
      listAvailableSslOptions(RequestOptionsBase,
      ServiceCallback<ApplicationGatewayAvailableSslOptions>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslOptions(options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGatewayAvailableSslOptions>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslOptions>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableSslOptions_1'
    name: >-
      listAvailableSslOptions(ServiceCallback<ApplicationGatewayAvailableSslOptions>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslOptions(callback:
        ServiceCallback<ApplicationGatewayAvailableSslOptions>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslOptions>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies'
    name: listAvailableSslPredefinedPolicies(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all SSL predefined policies for configuring Ssl policy.
    syntax:
      content: >-
        function listAvailableSslPredefinedPolicies(options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ApplicationGatewaysListAvailableSslPredefinedPoliciesResponse>
        description: >-
          Promise<Models.ApplicationGatewaysListAvailableSslPredefinedPoliciesResponse>
    package: '@azure/arm-network'
  - uid: >-
      @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies_2
    name: >-
      listAvailableSslPredefinedPolicies(RequestOptionsBase,
      ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslPredefinedPolicies(options: RequestOptionsBase,
        callback:
        ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: >-
      @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPolicies_1
    name: >-
      listAvailableSslPredefinedPolicies(ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslPredefinedPolicies(callback:
        ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: >-
      @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext
    name: 'listAvailableSslPredefinedPoliciesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all SSL predefined policies for configuring Ssl policy.
    syntax:
      content: >-
        function listAvailableSslPredefinedPoliciesNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ApplicationGatewaysListAvailableSslPredefinedPoliciesNextResponse>
        description: >-
          Promise<Models.ApplicationGatewaysListAvailableSslPredefinedPoliciesNextResponse>
    package: '@azure/arm-network'
  - uid: >-
      @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext_2
    name: >-
      listAvailableSslPredefinedPoliciesNext(string, RequestOptionsBase,
      ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslPredefinedPoliciesNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: >-
      @azure/arm-network.ApplicationGateways.listAvailableSslPredefinedPoliciesNext_1
    name: >-
      listAvailableSslPredefinedPoliciesNext(string,
      ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSslPredefinedPoliciesNext(nextPageLink: string,
        callback:
        ServiceCallback<ApplicationGatewayAvailableSslPredefinedPolicies>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets'
    name: listAvailableWafRuleSets(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all available web application firewall rule sets.
    syntax:
      content: 'function listAvailableWafRuleSets(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListAvailableWafRuleSetsResponse>
        description: Promise<Models.ApplicationGatewaysListAvailableWafRuleSetsResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets_2'
    name: >-
      listAvailableWafRuleSets(RequestOptionsBase,
      ServiceCallback<ApplicationGatewayAvailableWafRuleSetsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableWafRuleSets(options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGatewayAvailableWafRuleSetsResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableWafRuleSetsResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listAvailableWafRuleSets_1'
    name: >-
      listAvailableWafRuleSets(ServiceCallback<ApplicationGatewayAvailableWafRuleSetsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableWafRuleSets(callback:
        ServiceCallback<ApplicationGatewayAvailableWafRuleSetsResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableWafRuleSetsResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all application gateways in a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysListNextResponse>
        description: Promise<Models.ApplicationGatewaysListNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ApplicationGatewayListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.listNext_1'
    name: 'listNext(string, ServiceCallback<ApplicationGatewayListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ApplicationGatewayListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.start'
    name: 'start(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts the specified application gateway.
    syntax:
      content: >-
        function start(resourceGroupName: string, applicationGatewayName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.stop'
    name: 'stop(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops the specified application gateway in a resource group.
    syntax:
      content: >-
        function stop(resourceGroupName: string, applicationGatewayName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.updateTags'
    name: 'updateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the specified application gateway tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, applicationGatewayName:
        string, parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update application gateway tags.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApplicationGatewaysUpdateTagsResponse>
        description: Promise<Models.ApplicationGatewaysUpdateTagsResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.updateTags_2'
    name: >-
      updateTags(string, string, TagsObject, RequestOptionsBase,
      ServiceCallback<ApplicationGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, applicationGatewayName:
        string, parameters: TagsObject, options: RequestOptionsBase, callback:
        ServiceCallback<ApplicationGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update application gateway tags.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGateway>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.ApplicationGateways.updateTags_1'
    name: >-
      updateTags(string, string, TagsObject,
      ServiceCallback<ApplicationGateway>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, applicationGatewayName:
        string, parameters: TagsObject, callback:
        ServiceCallback<ApplicationGateway>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: applicationGatewayName
          type:
            - string
          description: The name of the application gateway.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update application gateway tags.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.ApplicationGateway>
          description: |
            The callback
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.NetworkManagementClientContext'
    name: NetworkManagementClientContext
    spec.typeScript:
      - name: NetworkManagementClientContext
        fullName: NetworkManagementClientContext
        uid: '@azure/arm-network.NetworkManagementClientContext'
  - uid: '@azure/arm-network.ApplicationGatewayOnDemandProbe'
    name: ApplicationGatewayOnDemandProbe
    spec.typeScript:
      - name: ApplicationGatewayOnDemandProbe
        fullName: ApplicationGatewayOnDemandProbe
        uid: '@azure/arm-network.ApplicationGatewayOnDemandProbe'
  - uid: '@azure/arm-network.ApplicationGateway'
    name: ApplicationGateway
    spec.typeScript:
      - name: ApplicationGateway
        fullName: ApplicationGateway
        uid: '@azure/arm-network.ApplicationGateway'
  - uid: ServiceCallback<@azure/arm-network.ApplicationGateway>
    name: ApplicationGateway>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGateway
        fullName: ApplicationGateway
        uid: '@azure/arm-network.ApplicationGateway'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-network.ApplicationGatewaySslPredefinedPolicy>
    name: ApplicationGatewaySslPredefinedPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGatewaySslPredefinedPolicy
        fullName: ApplicationGatewaySslPredefinedPolicy
        uid: '@azure/arm-network.ApplicationGatewaySslPredefinedPolicy'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-network.ApplicationGatewayListResult>
    name: ApplicationGatewayListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGatewayListResult
        fullName: ApplicationGatewayListResult
        uid: '@azure/arm-network.ApplicationGatewayListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslOptions>
    name: ApplicationGatewayAvailableSslOptions>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGatewayAvailableSslOptions
        fullName: ApplicationGatewayAvailableSslOptions
        uid: '@azure/arm-network.ApplicationGatewayAvailableSslOptions'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies>
    name: ApplicationGatewayAvailableSslPredefinedPolicies>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGatewayAvailableSslPredefinedPolicies
        fullName: ApplicationGatewayAvailableSslPredefinedPolicies
        uid: '@azure/arm-network.ApplicationGatewayAvailableSslPredefinedPolicies'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-network.ApplicationGatewayAvailableWafRuleSetsResult>
    name: ApplicationGatewayAvailableWafRuleSetsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationGatewayAvailableWafRuleSetsResult
        fullName: ApplicationGatewayAvailableWafRuleSetsResult
        uid: '@azure/arm-network.ApplicationGatewayAvailableWafRuleSetsResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-network.TagsObject'
    name: TagsObject
    spec.typeScript:
      - name: TagsObject
        fullName: TagsObject
        uid: '@azure/arm-network.TagsObject'
