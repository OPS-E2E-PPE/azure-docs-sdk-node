### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.RouteFilters'
    name: RouteFilters
    fullName: RouteFilters
    children:
      - '@azure/arm-network.RouteFilters.beginCreateOrUpdate'
      - '@azure/arm-network.RouteFilters.beginDeleteMethod'
      - '@azure/arm-network.RouteFilters.createOrUpdate'
      - '@azure/arm-network.RouteFilters.deleteMethod'
      - '@azure/arm-network.RouteFilters.get'
      - '@azure/arm-network.RouteFilters.get_2'
      - '@azure/arm-network.RouteFilters.get_1'
      - '@azure/arm-network.RouteFilters.list'
      - '@azure/arm-network.RouteFilters.list_2'
      - '@azure/arm-network.RouteFilters.list_1'
      - '@azure/arm-network.RouteFilters.listByResourceGroup'
      - '@azure/arm-network.RouteFilters.listByResourceGroup_2'
      - '@azure/arm-network.RouteFilters.listByResourceGroup_1'
      - '@azure/arm-network.RouteFilters.listByResourceGroupNext'
      - '@azure/arm-network.RouteFilters.listByResourceGroupNext_2'
      - '@azure/arm-network.RouteFilters.listByResourceGroupNext_1'
      - '@azure/arm-network.RouteFilters.listNext'
      - '@azure/arm-network.RouteFilters.listNext_2'
      - '@azure/arm-network.RouteFilters.listNext_1'
      - '@azure/arm-network.RouteFilters.constructor'
      - '@azure/arm-network.RouteFilters.updateTags'
      - '@azure/arm-network.RouteFilters.updateTags_2'
      - '@azure/arm-network.RouteFilters.updateTags_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a RouteFilters.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, RouteFilter,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: routeFilterParameters
          type:
            - '@azure/arm-network.RouteFilter'
          description: Parameters supplied to the create or update route filter operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.createOrUpdate'
    name: 'createOrUpdate(string, string, RouteFilter, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: routeFilterParameters
          type:
            - '@azure/arm-network.RouteFilter'
          description: Parameters supplied to the create or update route filter operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersCreateOrUpdateResponse>
        description: Promise<Models.RouteFiltersCreateOrUpdateResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.get'
    name: 'get(string, string, Models.RouteFiltersGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        options?: Models.RouteFiltersGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - Models.RouteFiltersGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersGetResponse>
        description: Promise<Models.RouteFiltersGetResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.get_2'
    name: >-
      get(string, string, RouteFiltersGetOptionalParams,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        options: RouteFiltersGetOptionalParams, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: options
          type:
            - '@azure/arm-network.RouteFiltersGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilter>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.get_1'
    name: 'get(string, string, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        callback: ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilter>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersListResponse>
        description: Promise<Models.RouteFiltersListResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.list_1'
    name: list(ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<RouteFilterListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersListByResourceGroupResponse>
        description: Promise<Models.RouteFiltersListByResourceGroupResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersListByResourceGroupNextResponse>
        description: Promise<Models.RouteFiltersListByResourceGroupNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersListNextResponse>
        description: Promise<Models.RouteFiltersListNextResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.listNext_1'
    name: 'listNext(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilterListResult>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.constructor'
    name: RouteFilters(NetworkManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a RouteFilters.
    syntax:
      content: 'new RouteFilters(client: NetworkManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-network.NetworkManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.updateTags'
    name: 'updateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates tags of a route filter.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, routeFilterName: string,
        parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update route filter tags.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RouteFiltersUpdateTagsResponse>
        description: Promise<Models.RouteFiltersUpdateTagsResponse>
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.updateTags_2'
    name: >-
      updateTags(string, string, TagsObject, RequestOptionsBase,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, routeFilterName: string,
        parameters: TagsObject, options: RequestOptionsBase, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update route filter tags.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilter>
          description: |
            The callback
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilters.updateTags_1'
    name: 'updateTags(string, string, TagsObject, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, routeFilterName: string,
        parameters: TagsObject, callback: ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: The name of the route filter.
        - id: parameters
          type:
            - '@azure/arm-network.TagsObject'
          description: Parameters supplied to update route filter tags.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-network.RouteFilter>
          description: |
            The callback
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.NetworkManagementClientContext'
    name: NetworkManagementClientContext
    spec.typeScript:
      - name: NetworkManagementClientContext
        fullName: NetworkManagementClientContext
        uid: '@azure/arm-network.NetworkManagementClientContext'
  - uid: '@azure/arm-network.RouteFilter'
    name: RouteFilter
    spec.typeScript:
      - name: RouteFilter
        fullName: RouteFilter
        uid: '@azure/arm-network.RouteFilter'
  - uid: ServiceCallback<@azure/arm-network.RouteFilter>
    name: RouteFilter>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilter
        fullName: RouteFilter
        uid: '@azure/arm-network.RouteFilter'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-network.RouteFiltersGetOptionalParams'
    name: RouteFiltersGetOptionalParams
    spec.typeScript:
      - name: RouteFiltersGetOptionalParams
        fullName: RouteFiltersGetOptionalParams
        uid: '@azure/arm-network.RouteFiltersGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-network.RouteFilterListResult>
    name: RouteFilterListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterListResult
        fullName: RouteFilterListResult
        uid: '@azure/arm-network.RouteFilterListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-network.TagsObject'
    name: TagsObject
    spec.typeScript:
      - name: TagsObject
        fullName: TagsObject
        uid: '@azure/arm-network.TagsObject'
