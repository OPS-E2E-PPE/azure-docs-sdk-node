### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-resources.Resources'
    name: Resources
    fullName: Resources
    children:
      - '@azure/arm-resources.Resources.beginCreateOrUpdate'
      - '@azure/arm-resources.Resources.beginCreateOrUpdateById'
      - '@azure/arm-resources.Resources.beginDeleteById'
      - '@azure/arm-resources.Resources.beginDeleteMethod'
      - '@azure/arm-resources.Resources.beginMoveResources'
      - '@azure/arm-resources.Resources.beginUpdate'
      - '@azure/arm-resources.Resources.beginUpdateById'
      - '@azure/arm-resources.Resources.beginValidateMoveResources'
      - '@azure/arm-resources.Resources.checkExistence'
      - '@azure/arm-resources.Resources.checkExistence_2'
      - '@azure/arm-resources.Resources.checkExistence_1'
      - '@azure/arm-resources.Resources.checkExistenceById'
      - '@azure/arm-resources.Resources.checkExistenceById_2'
      - '@azure/arm-resources.Resources.checkExistenceById_1'
      - '@azure/arm-resources.Resources.createOrUpdate'
      - '@azure/arm-resources.Resources.createOrUpdateById'
      - '@azure/arm-resources.Resources.deleteById'
      - '@azure/arm-resources.Resources.deleteMethod'
      - '@azure/arm-resources.Resources.get'
      - '@azure/arm-resources.Resources.get_2'
      - '@azure/arm-resources.Resources.get_1'
      - '@azure/arm-resources.Resources.getById'
      - '@azure/arm-resources.Resources.getById_2'
      - '@azure/arm-resources.Resources.getById_1'
      - '@azure/arm-resources.Resources.list'
      - '@azure/arm-resources.Resources.list_2'
      - '@azure/arm-resources.Resources.list_1'
      - '@azure/arm-resources.Resources.listByResourceGroup'
      - '@azure/arm-resources.Resources.listByResourceGroup_2'
      - '@azure/arm-resources.Resources.listByResourceGroup_1'
      - '@azure/arm-resources.Resources.listByResourceGroupNext'
      - '@azure/arm-resources.Resources.listByResourceGroupNext_2'
      - '@azure/arm-resources.Resources.listByResourceGroupNext_1'
      - '@azure/arm-resources.Resources.listNext'
      - '@azure/arm-resources.Resources.listNext_2'
      - '@azure/arm-resources.Resources.listNext_1'
      - '@azure/arm-resources.Resources.moveResources'
      - '@azure/arm-resources.Resources.constructor'
      - '@azure/arm-resources.Resources.update'
      - '@azure/arm-resources.Resources.updateById'
      - '@azure/arm-resources.Resources.validateMoveResources'
    langs:
      - typeScript
    type: class
    summary: Class representing a Resources.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a resource.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Parameters for creating or updating the resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginCreateOrUpdateById'
    name: >-
      beginCreateOrUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a resource by ID.
    syntax:
      content: >-
        function beginCreateOrUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Create or update resource parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginDeleteById'
    name: 'beginDeleteById(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a resource by ID.
    syntax:
      content: >-
        function beginDeleteById(resourceId: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginDeleteMethod'
    name: >-
      beginDeleteMethod(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a resource.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource to delete.
            The name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginMoveResources'
    name: 'beginMoveResources(string, ResourcesMoveInfo, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The resources to move must be in the same source resource group. The
      target resource group may

      be in a different subscription. When moving resources, both the source
      group and the target

      group are locked for the duration of the operation. Write and delete
      operations are blocked on

      the groups until the move completes.
    syntax:
      content: >-
        function beginMoveResources(sourceResourceGroupName: string, parameters:
        ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: The name of the resource group containing the resources to move.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourcesMoveInfo'
          description: Parameters for moving resources.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginUpdate'
    name: >-
      beginUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a resource.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to update.
        - id: resourceName
          type:
            - string
          description: The name of the resource to update.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Parameters for updating the resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginUpdateById'
    name: >-
      beginUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a resource by ID.
    syntax:
      content: >-
        function beginUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Update resource parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.beginValidateMoveResources'
    name: >-
      beginValidateMoveResources(string, ResourcesMoveInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation checks whether the specified resources can be moved to the
      target. The resources

      to move must be in the same source resource group. The target resource
      group may be in a

      different subscription. If validation succeeds, it returns HTTP response
      code 204 (no content).

      If validation fails, it returns HTTP response code 409 (Conflict) with an
      error message.

      Retrieve the URL in the Location header value to check the result of the
      long-running operation.
    syntax:
      content: >-
        function beginValidateMoveResources(sourceResourceGroupName: string,
        parameters: ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing the resources to
            validate for move.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourcesMoveInfo'
          description: Parameters for moving resources.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistence'
    name: >-
      checkExistence(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a resource exists.
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesCheckExistenceResponse>
        description: Promise<Models.ResourcesCheckExistenceResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistence_2'
    name: >-
      checkExistence(string, string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistence_1'
    name: >-
      checkExistence(string, string, string, string, string, string,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistenceById'
    name: 'checkExistenceById(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks by ID whether a resource exists.
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesCheckExistenceByIdResponse>
        description: Promise<Models.ResourcesCheckExistenceByIdResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistenceById_2'
    name: >-
      checkExistenceById(string, string, RequestOptionsBase,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        options: RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.checkExistenceById_1'
    name: 'checkExistenceById(string, string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a resource.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Parameters for creating or updating the resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesCreateOrUpdateResponse>
        description: Promise<Models.ResourcesCreateOrUpdateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.createOrUpdateById'
    name: >-
      createOrUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a resource by ID.
    syntax:
      content: >-
        function createOrUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Create or update resource parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesCreateOrUpdateByIdResponse>
        description: Promise<Models.ResourcesCreateOrUpdateByIdResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.deleteById'
    name: 'deleteById(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a resource by ID.
    syntax:
      content: >-
        function deleteById(resourceId: string, apiVersion: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.deleteMethod'
    name: >-
      deleteMethod(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a resource.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource to delete.
            The name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.get'
    name: >-
      get(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a resource.
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesGetResponse>
        description: Promise<Models.ResourcesGetResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.get_2'
    name: >-
      get(string, string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<GenericResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, options: RequestOptionsBase, callback:
        ServiceCallback<GenericResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.GenericResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.get_1'
    name: >-
      get(string, string, string, string, string, string,
      ServiceCallback<GenericResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, callback: ServiceCallback<GenericResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.GenericResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.getById'
    name: 'getById(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a resource by ID.
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesGetByIdResponse>
        description: Promise<Models.ResourcesGetByIdResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.getById_2'
    name: >-
      getById(string, string, RequestOptionsBase,
      ServiceCallback<GenericResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, options:
        RequestOptionsBase, callback: ServiceCallback<GenericResource>)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.GenericResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.getById_1'
    name: 'getById(string, string, ServiceCallback<GenericResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, callback:
        ServiceCallback<GenericResource>)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.GenericResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.list'
    name: list(Models.ResourcesListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all the resources in a subscription.
    syntax:
      content: 'function list(options?: Models.ResourcesListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ResourcesListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesListResponse>
        description: Promise<Models.ResourcesListResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.list_2'
    name: 'list(ResourcesListOptionalParams, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: ResourcesListOptionalParams, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-resources.ResourcesListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.list_1'
    name: list(ServiceCallback<ResourceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.ResourcesListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all the resources for a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.ResourcesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group with the resources to get.
        - id: options
          type:
            - Models.ResourcesListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesListByResourceGroupResponse>
        description: Promise<Models.ResourcesListByResourceGroupResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, ResourcesListByResourceGroupOptionalParams,
      ServiceCallback<ResourceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        ResourcesListByResourceGroupOptionalParams, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group with the resources to get.
        - id: options
          type:
            - '@azure/arm-resources.ResourcesListByResourceGroupOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group with the resources to get.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all the resources for a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesListByResourceGroupNextResponse>
        description: Promise<Models.ResourcesListByResourceGroupNextResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ResourceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all the resources in a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesListNextResponse>
        description: Promise<Models.ResourcesListNextResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.listNext_1'
    name: 'listNext(string, ServiceCallback<ResourceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.moveResources'
    name: 'moveResources(string, ResourcesMoveInfo, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The resources to move must be in the same source resource group. The
      target resource group may

      be in a different subscription. When moving resources, both the source
      group and the target

      group are locked for the duration of the operation. Write and delete
      operations are blocked on

      the groups until the move completes.
    syntax:
      content: >-
        function moveResources(sourceResourceGroupName: string, parameters:
        ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: The name of the resource group containing the resources to move.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourcesMoveInfo'
          description: Parameters for moving resources.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.constructor'
    name: Resources(ResourceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Resources.
    syntax:
      content: 'new Resources(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-resources.ResourceManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.update'
    name: >-
      update(string, string, string, string, string, string, GenericResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a resource.
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, parameters: GenericResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to update.
        - id: resourceName
          type:
            - string
          description: The name of the resource to update.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Parameters for updating the resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesUpdateResponse>
        description: Promise<Models.ResourcesUpdateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.updateById'
    name: 'updateById(string, string, GenericResource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a resource by ID.
    syntax:
      content: >-
        function updateById(resourceId: string, apiVersion: string, parameters:
        GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - '@azure/arm-resources.GenericResource'
          description: Update resource parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourcesUpdateByIdResponse>
        description: Promise<Models.ResourcesUpdateByIdResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.Resources.validateMoveResources'
    name: >-
      validateMoveResources(string, ResourcesMoveInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation checks whether the specified resources can be moved to the
      target. The resources

      to move must be in the same source resource group. The target resource
      group may be in a

      different subscription. If validation succeeds, it returns HTTP response
      code 204 (no content).

      If validation fails, it returns HTTP response code 409 (Conflict) with an
      error message.

      Retrieve the URL in the Location header value to check the result of the
      long-running operation.
    syntax:
      content: >-
        function validateMoveResources(sourceResourceGroupName: string,
        parameters: ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing the resources to
            validate for move.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourcesMoveInfo'
          description: Parameters for moving resources.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
references:
  - uid: '@azure/arm-resources.ResourceManagementClientContext'
    name: ResourceManagementClientContext
    spec.typeScript:
      - name: ResourceManagementClientContext
        fullName: ResourceManagementClientContext
        uid: '@azure/arm-resources.ResourceManagementClientContext'
  - uid: '@azure/arm-resources.GenericResource'
    name: GenericResource
    spec.typeScript:
      - name: GenericResource
        fullName: GenericResource
        uid: '@azure/arm-resources.GenericResource'
  - uid: '@azure/arm-resources.ResourcesMoveInfo'
    name: ResourcesMoveInfo
    spec.typeScript:
      - name: ResourcesMoveInfo
        fullName: ResourcesMoveInfo
        uid: '@azure/arm-resources.ResourcesMoveInfo'
  - uid: ServiceCallback<@azure/arm-resources.GenericResource>
    name: GenericResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GenericResource
        fullName: GenericResource
        uid: '@azure/arm-resources.GenericResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-resources.ResourceListResult>
    name: ResourceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceListResult
        fullName: ResourceListResult
        uid: '@azure/arm-resources.ResourceListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resources.ResourcesListOptionalParams'
    name: ResourcesListOptionalParams
    spec.typeScript:
      - name: ResourcesListOptionalParams
        fullName: ResourcesListOptionalParams
        uid: '@azure/arm-resources.ResourcesListOptionalParams'
  - uid: '@azure/arm-resources.ResourcesListByResourceGroupOptionalParams'
    name: ResourcesListByResourceGroupOptionalParams
    spec.typeScript:
      - name: ResourcesListByResourceGroupOptionalParams
        fullName: ResourcesListByResourceGroupOptionalParams
        uid: '@azure/arm-resources.ResourcesListByResourceGroupOptionalParams'
