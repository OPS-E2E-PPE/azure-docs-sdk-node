### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-resources.ResourceGroups'
    name: ResourceGroups
    fullName: ResourceGroups
    children:
      - '@azure/arm-resources.ResourceGroups.beginDeleteMethod'
      - '@azure/arm-resources.ResourceGroups.checkExistence'
      - '@azure/arm-resources.ResourceGroups.checkExistence_2'
      - '@azure/arm-resources.ResourceGroups.checkExistence_1'
      - '@azure/arm-resources.ResourceGroups.createOrUpdate'
      - '@azure/arm-resources.ResourceGroups.createOrUpdate_2'
      - '@azure/arm-resources.ResourceGroups.createOrUpdate_1'
      - '@azure/arm-resources.ResourceGroups.deleteMethod'
      - '@azure/arm-resources.ResourceGroups.exportTemplate'
      - '@azure/arm-resources.ResourceGroups.exportTemplate_2'
      - '@azure/arm-resources.ResourceGroups.exportTemplate_1'
      - '@azure/arm-resources.ResourceGroups.get'
      - '@azure/arm-resources.ResourceGroups.get_2'
      - '@azure/arm-resources.ResourceGroups.get_1'
      - '@azure/arm-resources.ResourceGroups.list'
      - '@azure/arm-resources.ResourceGroups.list_2'
      - '@azure/arm-resources.ResourceGroups.list_1'
      - '@azure/arm-resources.ResourceGroups.listNext'
      - '@azure/arm-resources.ResourceGroups.listNext_2'
      - '@azure/arm-resources.ResourceGroups.listNext_1'
      - '@azure/arm-resources.ResourceGroups.constructor'
      - '@azure/arm-resources.ResourceGroups.update'
      - '@azure/arm-resources.ResourceGroups.update_2'
      - '@azure/arm-resources.ResourceGroups.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ResourceGroups.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.beginDeleteMethod'
    name: 'beginDeleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource

      group deletes all of its template deployments and currently stored
      operations.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.checkExistence'
    name: 'checkExistence(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a resource group exists.
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsCheckExistenceResponse>
        description: Promise<Models.ResourceGroupsCheckExistenceResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.checkExistence_2'
    name: 'checkExistence(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.checkExistence_1'
    name: 'checkExistence(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.createOrUpdate'
    name: 'createOrUpdate(string, ResourceGroup, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroup'
          description: Parameters supplied to the create or update a resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsCreateOrUpdateResponse>
        description: Promise<Models.ResourceGroupsCreateOrUpdateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.createOrUpdate_2'
    name: >-
      createOrUpdate(string, ResourceGroup, RequestOptionsBase,
      ServiceCallback<ResourceGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroup'
          description: Parameters supplied to the create or update a resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.createOrUpdate_1'
    name: 'createOrUpdate(string, ResourceGroup, ServiceCallback<ResourceGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroup'
          description: Parameters supplied to the create or update a resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource

      group deletes all of its template deployments and currently stored
      operations.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.exportTemplate'
    name: 'exportTemplate(string, ExportTemplateRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Captures the specified resource group as a template.
    syntax:
      content: >-
        function exportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to export as a template.
        - id: parameters
          type:
            - '@azure/arm-resources.ExportTemplateRequest'
          description: Parameters for exporting the template.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsExportTemplateResponse>
        description: Promise<Models.ResourceGroupsExportTemplateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.exportTemplate_2'
    name: >-
      exportTemplate(string, ExportTemplateRequest, RequestOptionsBase,
      ServiceCallback<ResourceGroupExportResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceGroupExportResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to export as a template.
        - id: parameters
          type:
            - '@azure/arm-resources.ExportTemplateRequest'
          description: Parameters for exporting the template.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupExportResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.exportTemplate_1'
    name: >-
      exportTemplate(string, ExportTemplateRequest,
      ServiceCallback<ResourceGroupExportResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, callback:
        ServiceCallback<ResourceGroupExportResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to export as a template.
        - id: parameters
          type:
            - '@azure/arm-resources.ExportTemplateRequest'
          description: Parameters for exporting the template.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupExportResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsGetResponse>
        description: Promise<Models.ResourceGroupsGetResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<ResourceGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.get_1'
    name: 'get(string, ServiceCallback<ResourceGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.list'
    name: list(Models.ResourceGroupsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the resource groups for a subscription.
    syntax:
      content: 'function list(options?: Models.ResourceGroupsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ResourceGroupsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsListResponse>
        description: Promise<Models.ResourceGroupsListResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.list_2'
    name: >-
      list(ResourceGroupsListOptionalParams,
      ServiceCallback<ResourceGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: ResourceGroupsListOptionalParams, callback:
        ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-resources.ResourceGroupsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.list_1'
    name: list(ServiceCallback<ResourceGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceGroupListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the resource groups for a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsListNextResponse>
        description: Promise<Models.ResourceGroupsListNextResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ResourceGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.listNext_1'
    name: 'listNext(string, ServiceCallback<ResourceGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroupListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.constructor'
    name: ResourceGroups(ResourceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ResourceGroups.
    syntax:
      content: 'new ResourceGroups(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-resources.ResourceManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.update'
    name: 'update(string, ResourceGroupPatchable, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Resource groups can be updated through a simple PATCH operation to a group
      address. The format

      of the request is the same as that for creating a resource group. If a
      field is unspecified, the

      current value is retained.
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroupPatchable'
          description: Parameters supplied to update a resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResourceGroupsUpdateResponse>
        description: Promise<Models.ResourceGroupsUpdateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.update_2'
    name: >-
      update(string, ResourceGroupPatchable, RequestOptionsBase,
      ServiceCallback<ResourceGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroupPatchable'
          description: Parameters supplied to update a resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.ResourceGroups.update_1'
    name: 'update(string, ResourceGroupPatchable, ServiceCallback<ResourceGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type:
            - '@azure/arm-resources.ResourceGroupPatchable'
          description: Parameters supplied to update a resource group.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.ResourceGroup>
          description: |
            The callback
    package: '@azure/arm-resources'
references:
  - uid: '@azure/arm-resources.ResourceManagementClientContext'
    name: ResourceManagementClientContext
    spec.typeScript:
      - name: ResourceManagementClientContext
        fullName: ResourceManagementClientContext
        uid: '@azure/arm-resources.ResourceManagementClientContext'
  - uid: '@azure/arm-resources.ResourceGroup'
    name: ResourceGroup
    spec.typeScript:
      - name: ResourceGroup
        fullName: ResourceGroup
        uid: '@azure/arm-resources.ResourceGroup'
  - uid: ServiceCallback<@azure/arm-resources.ResourceGroup>
    name: ResourceGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceGroup
        fullName: ResourceGroup
        uid: '@azure/arm-resources.ResourceGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resources.ExportTemplateRequest'
    name: ExportTemplateRequest
    spec.typeScript:
      - name: ExportTemplateRequest
        fullName: ExportTemplateRequest
        uid: '@azure/arm-resources.ExportTemplateRequest'
  - uid: ServiceCallback<@azure/arm-resources.ResourceGroupExportResult>
    name: ResourceGroupExportResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceGroupExportResult
        fullName: ResourceGroupExportResult
        uid: '@azure/arm-resources.ResourceGroupExportResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-resources.ResourceGroupListResult>
    name: ResourceGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceGroupListResult
        fullName: ResourceGroupListResult
        uid: '@azure/arm-resources.ResourceGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resources.ResourceGroupsListOptionalParams'
    name: ResourceGroupsListOptionalParams
    spec.typeScript:
      - name: ResourceGroupsListOptionalParams
        fullName: ResourceGroupsListOptionalParams
        uid: '@azure/arm-resources.ResourceGroupsListOptionalParams'
  - uid: '@azure/arm-resources.ResourceGroupPatchable'
    name: ResourceGroupPatchable
    spec.typeScript:
      - name: ResourceGroupPatchable
        fullName: ResourceGroupPatchable
        uid: '@azure/arm-resources.ResourceGroupPatchable'
