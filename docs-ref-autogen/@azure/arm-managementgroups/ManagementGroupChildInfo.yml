### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo'
    name: ManagementGroupChildInfo
    fullName: ManagementGroupChildInfo
    children:
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.children'
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.displayName'
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.id'
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.name'
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.roles'
      - '@azure/arm-managementgroups.ManagementGroupChildInfo.type'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.children'
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'children?: ManagementGroupChildInfo[]'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroupChildInfo[]'
        description: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.displayName'
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.roles'
    name: roles
    fullName: roles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'roles?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: Type1'
      return:
        type:
          - '@azure/arm-managementgroups.Type1'
        description: ''
    package: '@azure/arm-managementgroups'
references:
  - uid: '@azure/arm-managementgroups.ManagementGroupChildInfo[]'
    name: 'ManagementGroupChildInfo[]'
    spec.typeScript:
      - name: ManagementGroupChildInfo
        fullName: ManagementGroupChildInfo
        uid: '@azure/arm-managementgroups.ManagementGroupChildInfo'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-managementgroups.Type1'
    name: Type1
    spec.typeScript:
      - name: Type1
        fullName: Type1
        uid: '@azure/arm-managementgroups.Type1'
