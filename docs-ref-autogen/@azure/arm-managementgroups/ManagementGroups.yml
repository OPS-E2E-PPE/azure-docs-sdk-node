### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementgroups.ManagementGroups'
    name: ManagementGroups
    fullName: ManagementGroups
    children:
      - '@azure/arm-managementgroups.ManagementGroups.beginCreateOrUpdate'
      - '@azure/arm-managementgroups.ManagementGroups.beginDeleteMethod'
      - '@azure/arm-managementgroups.ManagementGroups.createOrUpdate'
      - '@azure/arm-managementgroups.ManagementGroups.deleteMethod'
      - '@azure/arm-managementgroups.ManagementGroups.get_2'
      - '@azure/arm-managementgroups.ManagementGroups.get'
      - '@azure/arm-managementgroups.ManagementGroups.get_1'
      - '@azure/arm-managementgroups.ManagementGroups.list_2'
      - '@azure/arm-managementgroups.ManagementGroups.list'
      - '@azure/arm-managementgroups.ManagementGroups.list_1'
      - '@azure/arm-managementgroups.ManagementGroups.listNext_2'
      - '@azure/arm-managementgroups.ManagementGroups.listNext'
      - '@azure/arm-managementgroups.ManagementGroups.listNext_1'
      - '@azure/arm-managementgroups.ManagementGroups.constructor'
      - '@azure/arm-managementgroups.ManagementGroups.update_2'
      - '@azure/arm-managementgroups.ManagementGroups.update'
      - '@azure/arm-managementgroups.ManagementGroups.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ManagementGroups.
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, CreateManagementGroupRequest,
      Models.ManagementGroupsBeginCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a management group. If a management group is already
      created and a subsequent

      create request is issued with different properties, the management group
      properties will be

      updated.
    syntax:
      content: >-
        function beginCreateOrUpdate(groupId: string,
        createManagementGroupRequest: CreateManagementGroupRequest, options?:
        Models.ManagementGroupsBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: createManagementGroupRequest
          type:
            - '@azure/arm-managementgroups.CreateManagementGroupRequest'
          description: Management group creation parameters.
        - id: options
          type:
            - Models.ManagementGroupsBeginCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.beginDeleteMethod'
    name: >-
      beginDeleteMethod(string,
      Models.ManagementGroupsBeginDeleteMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete management group. If a management group contains child resources,
      the request will fail.
    syntax:
      content: >-
        function beginDeleteMethod(groupId: string, options?:
        Models.ManagementGroupsBeginDeleteMethodOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: options
          type:
            - Models.ManagementGroupsBeginDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.createOrUpdate'
    name: >-
      createOrUpdate(string, CreateManagementGroupRequest,
      Models.ManagementGroupsCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a management group. If a management group is already
      created and a subsequent

      create request is issued with different properties, the management group
      properties will be

      updated.
    syntax:
      content: >-
        function createOrUpdate(groupId: string, createManagementGroupRequest:
        CreateManagementGroupRequest, options?:
        Models.ManagementGroupsCreateOrUpdateOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: createManagementGroupRequest
          type:
            - '@azure/arm-managementgroups.CreateManagementGroupRequest'
          description: Management group creation parameters.
        - id: options
          type:
            - Models.ManagementGroupsCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsCreateOrUpdateResponse>
        description: Promise<Models.ManagementGroupsCreateOrUpdateResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.deleteMethod'
    name: 'deleteMethod(string, Models.ManagementGroupsDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete management group. If a management group contains child resources,
      the request will fail.
    syntax:
      content: >-
        function deleteMethod(groupId: string, options?:
        Models.ManagementGroupsDeleteMethodOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: options
          type:
            - Models.ManagementGroupsDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsDeleteMethodResponse>
        description: Promise<Models.ManagementGroupsDeleteMethodResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.get_2'
    name: >-
      get(string, ManagementGroupsGetOptionalParams,
      ServiceCallback<ManagementGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(groupId: string, options:
        ManagementGroupsGetOptionalParams, callback:
        ServiceCallback<ManagementGroup>)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: options
          type:
            - '@azure/arm-managementgroups.ManagementGroupsGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.ManagementGroup>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.get'
    name: 'get(string, Models.ManagementGroupsGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the details of the management group.
    syntax:
      content: >-
        function get(groupId: string, options?:
        Models.ManagementGroupsGetOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: options
          type:
            - Models.ManagementGroupsGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsGetResponse>
        description: Promise<Models.ManagementGroupsGetResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.get_1'
    name: 'get(string, ServiceCallback<ManagementGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(groupId: string, callback:
        ServiceCallback<ManagementGroup>)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.ManagementGroup>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.list_2'
    name: >-
      list(ManagementGroupsListOptionalParams,
      ServiceCallback<ManagementGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: ManagementGroupsListOptionalParams, callback:
        ServiceCallback<ManagementGroupListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-managementgroups.ManagementGroupsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.ManagementGroupListResult>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.list'
    name: list(Models.ManagementGroupsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: List management groups for the authenticated user.
    syntax:
      content: 'function list(options?: Models.ManagementGroupsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ManagementGroupsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsListResponse>
        description: Promise<Models.ManagementGroupsListResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.list_1'
    name: list(ServiceCallback<ManagementGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ManagementGroupListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.ManagementGroupListResult>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.listNext_2'
    name: >-
      listNext(string, ManagementGroupsListNextOptionalParams,
      ServiceCallback<ManagementGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        ManagementGroupsListNextOptionalParams, callback:
        ServiceCallback<ManagementGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - '@azure/arm-managementgroups.ManagementGroupsListNextOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.ManagementGroupListResult>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.listNext'
    name: 'listNext(string, Models.ManagementGroupsListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List management groups for the authenticated user.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.ManagementGroupsListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - Models.ManagementGroupsListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsListNextResponse>
        description: Promise<Models.ManagementGroupsListNextResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.listNext_1'
    name: 'listNext(string, ServiceCallback<ManagementGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ManagementGroupListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.ManagementGroupListResult>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.constructor'
    name: ManagementGroups(ManagementGroupsAPIContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ManagementGroups.
    syntax:
      content: 'new ManagementGroups(client: ManagementGroupsAPIContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-managementgroups.ManagementGroupsAPIContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.update_2'
    name: >-
      update(string, PatchManagementGroupRequest,
      ManagementGroupsUpdateOptionalParams, ServiceCallback<ManagementGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(groupId: string, patchGroupRequest:
        PatchManagementGroupRequest, options:
        ManagementGroupsUpdateOptionalParams, callback:
        ServiceCallback<ManagementGroup>)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: patchGroupRequest
          type:
            - '@azure/arm-managementgroups.PatchManagementGroupRequest'
          description: Management group patch parameters.
        - id: options
          type:
            - '@azure/arm-managementgroups.ManagementGroupsUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.ManagementGroup>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.update'
    name: >-
      update(string, PatchManagementGroupRequest,
      Models.ManagementGroupsUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a management group.
    syntax:
      content: >-
        function update(groupId: string, patchGroupRequest:
        PatchManagementGroupRequest, options?:
        Models.ManagementGroupsUpdateOptionalParams)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: patchGroupRequest
          type:
            - '@azure/arm-managementgroups.PatchManagementGroupRequest'
          description: Management group patch parameters.
        - id: options
          type:
            - Models.ManagementGroupsUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementGroupsUpdateResponse>
        description: Promise<Models.ManagementGroupsUpdateResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroups.update_1'
    name: >-
      update(string, PatchManagementGroupRequest,
      ServiceCallback<ManagementGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(groupId: string, patchGroupRequest:
        PatchManagementGroupRequest, callback: ServiceCallback<ManagementGroup>)
      parameters:
        - id: groupId
          type:
            - string
          description: Management Group ID.
        - id: patchGroupRequest
          type:
            - '@azure/arm-managementgroups.PatchManagementGroupRequest'
          description: Management group patch parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.ManagementGroup>
          description: |
            The callback
    package: '@azure/arm-managementgroups'
references:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    name: ManagementGroupsAPIContext
    spec.typeScript:
      - name: ManagementGroupsAPIContext
        fullName: ManagementGroupsAPIContext
        uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
  - uid: '@azure/arm-managementgroups.CreateManagementGroupRequest'
    name: CreateManagementGroupRequest
    spec.typeScript:
      - name: CreateManagementGroupRequest
        fullName: CreateManagementGroupRequest
        uid: '@azure/arm-managementgroups.CreateManagementGroupRequest'
  - uid: ServiceCallback<@azure/arm-managementgroups.ManagementGroup>
    name: ManagementGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagementGroup
        fullName: ManagementGroup
        uid: '@azure/arm-managementgroups.ManagementGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-managementgroups.ManagementGroupsGetOptionalParams'
    name: ManagementGroupsGetOptionalParams
    spec.typeScript:
      - name: ManagementGroupsGetOptionalParams
        fullName: ManagementGroupsGetOptionalParams
        uid: '@azure/arm-managementgroups.ManagementGroupsGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-managementgroups.ManagementGroupListResult>
    name: ManagementGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagementGroupListResult
        fullName: ManagementGroupListResult
        uid: '@azure/arm-managementgroups.ManagementGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-managementgroups.ManagementGroupsListOptionalParams'
    name: ManagementGroupsListOptionalParams
    spec.typeScript:
      - name: ManagementGroupsListOptionalParams
        fullName: ManagementGroupsListOptionalParams
        uid: '@azure/arm-managementgroups.ManagementGroupsListOptionalParams'
  - uid: '@azure/arm-managementgroups.ManagementGroupsListNextOptionalParams'
    name: ManagementGroupsListNextOptionalParams
    spec.typeScript:
      - name: ManagementGroupsListNextOptionalParams
        fullName: ManagementGroupsListNextOptionalParams
        uid: '@azure/arm-managementgroups.ManagementGroupsListNextOptionalParams'
  - uid: '@azure/arm-managementgroups.PatchManagementGroupRequest'
    name: PatchManagementGroupRequest
    spec.typeScript:
      - name: PatchManagementGroupRequest
        fullName: PatchManagementGroupRequest
        uid: '@azure/arm-managementgroups.PatchManagementGroupRequest'
  - uid: '@azure/arm-managementgroups.ManagementGroupsUpdateOptionalParams'
    name: ManagementGroupsUpdateOptionalParams
    spec.typeScript:
      - name: ManagementGroupsUpdateOptionalParams
        fullName: ManagementGroupsUpdateOptionalParams
        uid: '@azure/arm-managementgroups.ManagementGroupsUpdateOptionalParams'
