### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse'
    name: EntireDetectResponse
    fullName: EntireDetectResponse
    children:
      - >-
        @azure/cognitiveservices-anomalydetector.EntireDetectResponse.expectedValues
      - '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.isAnomaly'
      - >-
        @azure/cognitiveservices-anomalydetector.EntireDetectResponse.isNegativeAnomaly
      - >-
        @azure/cognitiveservices-anomalydetector.EntireDetectResponse.isPositiveAnomaly
      - >-
        @azure/cognitiveservices-anomalydetector.EntireDetectResponse.lowerMargins
      - '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.period'
      - >-
        @azure/cognitiveservices-anomalydetector.EntireDetectResponse.upperMargins
    langs:
      - typeScript
    type: interface
    summary: An interface representing EntireDetectResponse.
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: >-
      @azure/cognitiveservices-anomalydetector.EntireDetectResponse.expectedValues
    name: expectedValues
    fullName: expectedValues
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      ExpectedValues contain expected value for each input point. The index of
      the array is

      consistent with the input series.
    syntax:
      content: 'expectedValues: number[]'
      return:
        type:
          - 'number[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.isAnomaly'
    name: isAnomaly
    fullName: isAnomaly
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      IsAnomaly contains anomaly properties for each input point. True means an
      anomaly either

      negative or positive has been detected. The index of the array is
      consistent with the input

      series.
    syntax:
      content: 'isAnomaly: boolean[]'
      return:
        type:
          - 'boolean[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: >-
      @azure/cognitiveservices-anomalydetector.EntireDetectResponse.isNegativeAnomaly
    name: isNegativeAnomaly
    fullName: isNegativeAnomaly
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      IsNegativeAnomaly contains anomaly status in negative direction for each
      input point. True

      means a negative anomaly has been detected. A negative anomaly means the
      point is detected as

      an anomaly and its real value is smaller than the expected one. The index
      of the array is

      consistent with the input series.
    syntax:
      content: 'isNegativeAnomaly: boolean[]'
      return:
        type:
          - 'boolean[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: >-
      @azure/cognitiveservices-anomalydetector.EntireDetectResponse.isPositiveAnomaly
    name: isPositiveAnomaly
    fullName: isPositiveAnomaly
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      IsPositiveAnomaly contain anomaly status in positive direction for each
      input point. True

      means a positive anomaly has been detected. A positive anomaly means the
      point is detected as

      an anomaly and its real value is larger than the expected one. The index
      of the array is

      consistent with the input series.
    syntax:
      content: 'isPositiveAnomaly: boolean[]'
      return:
        type:
          - 'boolean[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.lowerMargins'
    name: lowerMargins
    fullName: lowerMargins
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      LowerMargins contain lower margin of each input point. LowerMargin is used
      to calculate

      lowerBoundary, which equals to expectedValue - (100 -
      marginScale)*lowerMargin. Points between

      the boundary can be marked as normal ones in client side. The index of the
      array is consistent

      with the input series.
    syntax:
      content: 'lowerMargins: number[]'
      return:
        type:
          - 'number[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.period'
    name: period
    fullName: period
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Frequency extracted from the series, zero means no recurrent pattern has
      been found.
    syntax:
      content: 'period: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse.upperMargins'
    name: upperMargins
    fullName: upperMargins
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      UpperMargins contain upper margin of each input point. UpperMargin is used
      to calculate

      upperBoundary, which equals to expectedValue + (100 -
      marginScale)*upperMargin. Anomalies in

      response can be filtered by upperBoundary and lowerBoundary. By adjusting
      marginScale value,

      less significant anomalies can be filtered in client side. The index of
      the array is

      consistent with the input series.
    syntax:
      content: 'upperMargins: number[]'
      return:
        type:
          - 'number[]'
        description: ''
    package: '@azure/cognitiveservices-anomalydetector'
