### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-operationalinsights.Workspaces'
    name: Workspaces
    fullName: Workspaces
    children:
      - '@azure/arm-operationalinsights.Workspaces.beginCreateOrUpdate'
      - '@azure/arm-operationalinsights.Workspaces.createOrUpdate'
      - '@azure/arm-operationalinsights.Workspaces.deleteMethod'
      - '@azure/arm-operationalinsights.Workspaces.deleteMethod_2'
      - '@azure/arm-operationalinsights.Workspaces.deleteMethod_1'
      - '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack'
      - '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack_2'
      - '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack_1'
      - '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack'
      - '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack_2'
      - '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack_1'
      - '@azure/arm-operationalinsights.Workspaces.get'
      - '@azure/arm-operationalinsights.Workspaces.get_2'
      - '@azure/arm-operationalinsights.Workspaces.get_1'
      - '@azure/arm-operationalinsights.Workspaces.getSharedKeys'
      - '@azure/arm-operationalinsights.Workspaces.getSharedKeys_2'
      - '@azure/arm-operationalinsights.Workspaces.getSharedKeys_1'
      - '@azure/arm-operationalinsights.Workspaces.list'
      - '@azure/arm-operationalinsights.Workspaces.list_2'
      - '@azure/arm-operationalinsights.Workspaces.list_1'
      - '@azure/arm-operationalinsights.Workspaces.listByResourceGroup'
      - '@azure/arm-operationalinsights.Workspaces.listByResourceGroup_2'
      - '@azure/arm-operationalinsights.Workspaces.listByResourceGroup_1'
      - '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks'
      - '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks_2'
      - '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks_1'
      - '@azure/arm-operationalinsights.Workspaces.listManagementGroups'
      - '@azure/arm-operationalinsights.Workspaces.listManagementGroups_2'
      - '@azure/arm-operationalinsights.Workspaces.listManagementGroups_1'
      - '@azure/arm-operationalinsights.Workspaces.listUsages'
      - '@azure/arm-operationalinsights.Workspaces.listUsages_2'
      - '@azure/arm-operationalinsights.Workspaces.listUsages_1'
      - '@azure/arm-operationalinsights.Workspaces.update'
      - '@azure/arm-operationalinsights.Workspaces.update_2'
      - '@azure/arm-operationalinsights.Workspaces.update_1'
      - '@azure/arm-operationalinsights.Workspaces.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Workspaces.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Workspace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a workspace.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, workspaceName:
        string, parameters: Workspace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Workspace'
          description: The parameters required to create or update a workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.createOrUpdate'
    name: 'createOrUpdate(string, string, Workspace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a workspace.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, parameters: Workspace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Workspace'
          description: The parameters required to create or update a workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesCreateOrUpdateResponse>
        description: Promise<Models.WorkspacesCreateOrUpdateResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a workspace instance.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack'
    name: 'disableIntelligencePack(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Disables an intelligence pack for a given workspace.
    syntax:
      content: >-
        function disableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be disabled.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack_2'
    name: >-
      disableIntelligencePack(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be disabled.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.disableIntelligencePack_1'
    name: 'disableIntelligencePack(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be disabled.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack'
    name: 'enableIntelligencePack(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enables an intelligence pack for a given workspace.
    syntax:
      content: >-
        function enableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be enabled.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack_2'
    name: >-
      enableIntelligencePack(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be enabled.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.enableIntelligencePack_1'
    name: 'enableIntelligencePack(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enableIntelligencePack(resourceGroupName: string,
        workspaceName: string, intelligencePackName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: intelligencePackName
          type:
            - string
          description: The name of the intelligence pack to be enabled.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a workspace instance.
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesGetResponse>
        description: Promise<Models.WorkspacesGetResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Workspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Workspace>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.get_1'
    name: 'get(string, string, ServiceCallback<Workspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, callback:
        ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Workspace>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.getSharedKeys'
    name: 'getSharedKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the shared keys for a workspace.
    syntax:
      content: >-
        function getSharedKeys(resourceGroupName: string, workspaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesGetSharedKeysResponse>
        description: Promise<Models.WorkspacesGetSharedKeysResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.getSharedKeys_2'
    name: >-
      getSharedKeys(string, string, RequestOptionsBase,
      ServiceCallback<SharedKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSharedKeys(resourceGroupName: string, workspaceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<SharedKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.SharedKeys>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.getSharedKeys_1'
    name: 'getSharedKeys(string, string, ServiceCallback<SharedKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSharedKeys(resourceGroupName: string, workspaceName: string,
        callback: ServiceCallback<SharedKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.SharedKeys>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the workspaces in a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListResponse>
        description: Promise<Models.WorkspacesListResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<WorkspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<WorkspaceListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.list_1'
    name: list(ServiceCallback<WorkspaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<WorkspaceListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets workspaces in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListByResourceGroupResponse>
        description: Promise<Models.WorkspacesListByResourceGroupResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<WorkspaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<WorkspaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<WorkspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<WorkspaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks'
    name: 'listIntelligencePacks(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the intelligence packs possible and whether they are enabled or
      disabled for a given

      workspace.
    syntax:
      content: >-
        function listIntelligencePacks(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListIntelligencePacksResponse>
        description: Promise<Models.WorkspacesListIntelligencePacksResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks_2'
    name: >-
      listIntelligencePacks(string, string, RequestOptionsBase,
      ServiceCallback<IntelligencePack[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listIntelligencePacks(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IntelligencePack[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-operationalinsights.IntelligencePack[]>'
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listIntelligencePacks_1'
    name: 'listIntelligencePacks(string, string, ServiceCallback<IntelligencePack[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listIntelligencePacks(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<IntelligencePack[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: Name of the Log Analytics Workspace.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-operationalinsights.IntelligencePack[]>'
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listManagementGroups'
    name: 'listManagementGroups(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of management groups connected to a workspace.
    syntax:
      content: >-
        function listManagementGroups(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListManagementGroupsResponse>
        description: Promise<Models.WorkspacesListManagementGroupsResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listManagementGroups_2'
    name: >-
      listManagementGroups(string, string, RequestOptionsBase,
      ServiceCallback<WorkspaceListManagementGroupsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listManagementGroups(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WorkspaceListManagementGroupsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListManagementGroupsResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listManagementGroups_1'
    name: >-
      listManagementGroups(string, string,
      ServiceCallback<WorkspaceListManagementGroupsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listManagementGroups(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<WorkspaceListManagementGroupsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListManagementGroupsResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listUsages'
    name: 'listUsages(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of usage metrics for a workspace.
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, workspaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListUsagesResponse>
        description: Promise<Models.WorkspacesListUsagesResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listUsages_2'
    name: >-
      listUsages(string, string, RequestOptionsBase,
      ServiceCallback<WorkspaceListUsagesResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, workspaceName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<WorkspaceListUsagesResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListUsagesResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<WorkspaceListUsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, workspaceName: string,
        callback: ServiceCallback<WorkspaceListUsagesResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to get. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspaceListUsagesResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.update'
    name: 'update(string, string, Workspace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a workspace.
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        parameters: Workspace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Workspace'
          description: The parameters required to patch a workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesUpdateResponse>
        description: Promise<Models.WorkspacesUpdateResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.update_2'
    name: >-
      update(string, string, Workspace, RequestOptionsBase,
      ServiceCallback<Workspace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        parameters: Workspace, options: RequestOptionsBase, callback:
        ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Workspace'
          description: The parameters required to patch a workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Workspace>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.update_1'
    name: 'update(string, string, Workspace, ServiceCallback<Workspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        parameters: Workspace, callback: ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group name of the workspace.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Workspace'
          description: The parameters required to patch a workspace.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Workspace>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Workspaces.constructor'
    name: Workspaces(OperationalInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Workspaces.
    syntax:
      content: 'new Workspaces(client: OperationalInsightsManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-operationalinsights'
references:
  - uid: '@azure/arm-operationalinsights.OperationalInsightsManagementClientContext'
    name: OperationalInsightsManagementClientContext
    spec.typeScript:
      - name: OperationalInsightsManagementClientContext
        fullName: OperationalInsightsManagementClientContext
        uid: >-
          @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
  - uid: '@azure/arm-operationalinsights.Workspace'
    name: Workspace
    spec.typeScript:
      - name: Workspace
        fullName: Workspace
        uid: '@azure/arm-operationalinsights.Workspace'
  - uid: ServiceCallback<@azure/arm-operationalinsights.Workspace>
    name: Workspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Workspace
        fullName: Workspace
        uid: '@azure/arm-operationalinsights.Workspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-operationalinsights.SharedKeys>
    name: SharedKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SharedKeys
        fullName: SharedKeys
        uid: '@azure/arm-operationalinsights.SharedKeys'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-operationalinsights.WorkspaceListResult>
    name: WorkspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspaceListResult
        fullName: WorkspaceListResult
        uid: '@azure/arm-operationalinsights.WorkspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/arm-operationalinsights.IntelligencePack[]>'
    name: 'IntelligencePack[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IntelligencePack
        fullName: IntelligencePack
        uid: '@azure/arm-operationalinsights.IntelligencePack'
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      ServiceCallback<@azure/arm-operationalinsights.WorkspaceListManagementGroupsResult>
    name: WorkspaceListManagementGroupsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspaceListManagementGroupsResult
        fullName: WorkspaceListManagementGroupsResult
        uid: '@azure/arm-operationalinsights.WorkspaceListManagementGroupsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-operationalinsights.WorkspaceListUsagesResult>
    name: WorkspaceListUsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspaceListUsagesResult
        fullName: WorkspaceListUsagesResult
        uid: '@azure/arm-operationalinsights.WorkspaceListUsagesResult'
      - name: '>'
        fullName: '>'
