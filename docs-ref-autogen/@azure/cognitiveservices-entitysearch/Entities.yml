### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-entitysearch.Entities'
    name: Entities
    fullName: Entities
    children:
      - '@azure/cognitiveservices-entitysearch.Entities.contractualRules'
      - '@azure/cognitiveservices-entitysearch.Entities.id'
      - '@azure/cognitiveservices-entitysearch.Entities.queryContext'
      - '@azure/cognitiveservices-entitysearch.Entities.queryScenario'
      - '@azure/cognitiveservices-entitysearch.Entities.value'
      - '@azure/cognitiveservices-entitysearch.Entities.webSearchUrl'
    langs:
      - typeScript
    type: interface
    summary: Defines an entity answer.
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.contractualRules'
    name: contractualRules
    fullName: contractualRules
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of rules that you must adhere to if you display the item.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'contractualRules?: ContractualRulesContractualRuleUnion[]'
      return:
        type:
          - >-
            @azure/cognitiveservices-entitysearch.ContractualRulesContractualRuleUnion[]
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A String identifier.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.queryContext'
    name: queryContext
    fullName: queryContext
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'queryContext?: QueryContext'
      return:
        type:
          - '@azure/cognitiveservices-entitysearch.QueryContext'
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.queryScenario'
    name: queryScenario
    fullName: queryScenario
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The supported query scenario. This field is set to DominantEntity or
      DisambiguationItem. The

      field is set to DominantEntity if Bing determines that only a single
      entity satisfies the

      request. For example, a book, movie, person, or attraction. If multiple
      entities could satisfy

      the request, the field is set to DisambiguationItem. For example, if the
      request uses the

      generic title of a movie franchise, the entity's type would likely be
      DisambiguationItem. But,

      if the request specifies a specific title from the franchise, the entity's
      type would likely

      be DominantEntity. Possible values include: 'DominantEntity',

      'DominantEntityWithDisambiguation', 'Disambiguation', 'List',
      'ListWithPivot'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**.

      Default value: 'DominantEntity'.
    optional: true
    syntax:
      content: 'queryScenario?: EntityQueryScenario'
      return:
        type:
          - '@azure/cognitiveservices-entitysearch.EntityQueryScenario'
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of entities.
    syntax:
      content: 'value: ThingUnion[]'
      return:
        type:
          - '@azure/cognitiveservices-entitysearch.ThingUnion[]'
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
  - uid: '@azure/cognitiveservices-entitysearch.Entities.webSearchUrl'
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The URL To Bing's search result for this item.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'webSearchUrl?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-entitysearch'
references:
  - uid: >-
      @azure/cognitiveservices-entitysearch.ContractualRulesContractualRuleUnion[]
    name: 'ContractualRulesContractualRuleUnion[]'
    spec.typeScript:
      - name: ContractualRulesContractualRuleUnion
        fullName: ContractualRulesContractualRuleUnion
        uid: >-
          @azure/cognitiveservices-entitysearch.ContractualRulesContractualRuleUnion
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-entitysearch.QueryContext'
    name: QueryContext
    spec.typeScript:
      - name: QueryContext
        fullName: QueryContext
        uid: '@azure/cognitiveservices-entitysearch.QueryContext'
  - uid: '@azure/cognitiveservices-entitysearch.EntityQueryScenario'
    name: EntityQueryScenario
    spec.typeScript:
      - name: EntityQueryScenario
        fullName: EntityQueryScenario
        uid: '@azure/cognitiveservices-entitysearch.EntityQueryScenario'
  - uid: '@azure/cognitiveservices-entitysearch.ThingUnion[]'
    name: 'ThingUnion[]'
    spec.typeScript:
      - name: ThingUnion
        fullName: ThingUnion
        uid: '@azure/cognitiveservices-entitysearch.ThingUnion'
      - name: '[]'
        fullName: '[]'
