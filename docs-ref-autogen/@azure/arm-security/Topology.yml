### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-security.Topology'
    name: Topology
    fullName: Topology
    children:
      - '@azure/arm-security.Topology.get'
      - '@azure/arm-security.Topology.get_2'
      - '@azure/arm-security.Topology.get_1'
      - '@azure/arm-security.Topology.list'
      - '@azure/arm-security.Topology.list_2'
      - '@azure/arm-security.Topology.list_1'
      - '@azure/arm-security.Topology.listByHomeRegion'
      - '@azure/arm-security.Topology.listByHomeRegion_2'
      - '@azure/arm-security.Topology.listByHomeRegion_1'
      - '@azure/arm-security.Topology.listByHomeRegionNext'
      - '@azure/arm-security.Topology.listByHomeRegionNext_2'
      - '@azure/arm-security.Topology.listByHomeRegionNext_1'
      - '@azure/arm-security.Topology.listNext'
      - '@azure/arm-security.Topology.listNext_2'
      - '@azure/arm-security.Topology.listNext_1'
      - '@azure/arm-security.Topology.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Topology.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a specific topology component.
    syntax:
      content: >-
        function get(resourceGroupName: string, topologyResourceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: topologyResourceName
          type:
            - string
          description: Name of a topology resources collection.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopologyGetResponse>
        description: Promise<Models.TopologyGetResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<TopologyResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, topologyResourceName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<TopologyResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: topologyResourceName
          type:
            - string
          description: Name of a topology resources collection.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyResource>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.get_1'
    name: 'get(string, string, ServiceCallback<TopologyResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, topologyResourceName: string,
        callback: ServiceCallback<TopologyResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: topologyResourceName
          type:
            - string
          description: Name of a topology resources collection.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyResource>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list that allows to build a topology view of a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopologyListResponse>
        description: Promise<Models.TopologyListResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<TopologyList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<TopologyList>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.list_1'
    name: list(ServiceCallback<TopologyList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<TopologyList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegion'
    name: listByHomeRegion(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list that allows to build a topology view of a subscription and
      location.
    syntax:
      content: 'function listByHomeRegion(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopologyListByHomeRegionResponse>
        description: Promise<Models.TopologyListByHomeRegionResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegion_2'
    name: 'listByHomeRegion(RequestOptionsBase, ServiceCallback<TopologyList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHomeRegion(options: RequestOptionsBase, callback:
        ServiceCallback<TopologyList>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegion_1'
    name: listByHomeRegion(ServiceCallback<TopologyList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByHomeRegion(callback: ServiceCallback<TopologyList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegionNext'
    name: 'listByHomeRegionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list that allows to build a topology view of a subscription and
      location.
    syntax:
      content: >-
        function listByHomeRegionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopologyListByHomeRegionNextResponse>
        description: Promise<Models.TopologyListByHomeRegionNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegionNext_2'
    name: >-
      listByHomeRegionNext(string, RequestOptionsBase,
      ServiceCallback<TopologyList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHomeRegionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<TopologyList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listByHomeRegionNext_1'
    name: 'listByHomeRegionNext(string, ServiceCallback<TopologyList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByHomeRegionNext(nextPageLink: string, callback:
        ServiceCallback<TopologyList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list that allows to build a topology view of a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TopologyListNextResponse>
        description: Promise<Models.TopologyListNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<TopologyList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<TopologyList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.listNext_1'
    name: 'listNext(string, ServiceCallback<TopologyList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<TopologyList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.TopologyList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Topology.constructor'
    name: Topology(SecurityCenterContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Topology.
    syntax:
      content: 'new Topology(client: SecurityCenterContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-security.SecurityCenterContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-security'
references:
  - uid: '@azure/arm-security.SecurityCenterContext'
    name: SecurityCenterContext
    spec.typeScript:
      - name: SecurityCenterContext
        fullName: SecurityCenterContext
        uid: '@azure/arm-security.SecurityCenterContext'
  - uid: ServiceCallback<@azure/arm-security.TopologyResource>
    name: TopologyResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TopologyResource
        fullName: TopologyResource
        uid: '@azure/arm-security.TopologyResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-security.TopologyList>
    name: TopologyList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TopologyList
        fullName: TopologyList
        uid: '@azure/arm-security.TopologyList'
      - name: '>'
        fullName: '>'
