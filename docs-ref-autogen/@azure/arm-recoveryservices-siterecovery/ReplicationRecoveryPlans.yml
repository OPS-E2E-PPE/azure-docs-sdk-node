### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans'
    name: ReplicationRecoveryPlans
    fullName: ReplicationRecoveryPlans
    children:
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginCreate
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginDeleteMethod
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginFailoverCommit
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginPlannedFailover
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginReprotect
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginTestFailover
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginTestFailoverCleanup
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginUnplannedFailover
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginUpdate
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.create'
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.deleteMethod
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.failoverCommit
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get'
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get_2'
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get_1'
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list'
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list_2'
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list_1'
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext_2
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext_1
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.plannedFailover
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.constructor
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.reprotect
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.testFailover
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.testFailoverCleanup
      - >-
        @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.unplannedFailover
      - '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a ReplicationRecoveryPlans.
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginCreate
    name: 'beginCreate(string, CreateRecoveryPlanInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create a recovery plan.
    syntax:
      content: >-
        function beginCreate(recoveryPlanName: string, input:
        CreateRecoveryPlanInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - '@azure/arm-recoveryservices-siterecovery.CreateRecoveryPlanInput'
          description: Recovery Plan creation input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginDeleteMethod
    name: 'beginDeleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a recovery plan.
    syntax:
      content: >-
        function beginDeleteMethod(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginFailoverCommit
    name: 'beginFailoverCommit(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to commit the fail over of a recovery plan.
    syntax:
      content: >-
        function beginFailoverCommit(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginPlannedFailover
    name: >-
      beginPlannedFailover(string, RecoveryPlanPlannedFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the planned failover of a recovery plan.
    syntax:
      content: >-
        function beginPlannedFailover(recoveryPlanName: string, input:
        RecoveryPlanPlannedFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanPlannedFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginReprotect
    name: 'beginReprotect(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to reprotect(reverse replicate) a recovery plan.
    syntax:
      content: >-
        function beginReprotect(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginTestFailover
    name: >-
      beginTestFailover(string, RecoveryPlanTestFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the test failover of a recovery plan.
    syntax:
      content: >-
        function beginTestFailover(recoveryPlanName: string, input:
        RecoveryPlanTestFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginTestFailoverCleanup
    name: >-
      beginTestFailoverCleanup(string, RecoveryPlanTestFailoverCleanupInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to cleanup test failover of a recovery plan.
    syntax:
      content: >-
        function beginTestFailoverCleanup(recoveryPlanName: string, input:
        RecoveryPlanTestFailoverCleanupInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverCleanupInput
          description: Test failover cleanup input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginUnplannedFailover
    name: >-
      beginUnplannedFailover(string, RecoveryPlanUnplannedFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the failover of a recovery plan.
    syntax:
      content: >-
        function beginUnplannedFailover(recoveryPlanName: string, input:
        RecoveryPlanUnplannedFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanUnplannedFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.beginUpdate
    name: 'beginUpdate(string, UpdateRecoveryPlanInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a recovery plan.
    syntax:
      content: >-
        function beginUpdate(recoveryPlanName: string, input:
        UpdateRecoveryPlanInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - '@azure/arm-recoveryservices-siterecovery.UpdateRecoveryPlanInput'
          description: Update recovery plan input
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.create'
    name: 'create(string, CreateRecoveryPlanInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create a recovery plan.
    syntax:
      content: >-
        function create(recoveryPlanName: string, input:
        CreateRecoveryPlanInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - '@azure/arm-recoveryservices-siterecovery.CreateRecoveryPlanInput'
          description: Recovery Plan creation input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansCreateResponse>
        description: Promise<Models.ReplicationRecoveryPlansCreateResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.deleteMethod
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a recovery plan.
    syntax:
      content: >-
        function deleteMethod(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.failoverCommit
    name: 'failoverCommit(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to commit the fail over of a recovery plan.
    syntax:
      content: >-
        function failoverCommit(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansFailoverCommitResponse>
        description: Promise<Models.ReplicationRecoveryPlansFailoverCommitResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the recovery plan.
    syntax:
      content: >-
        function get(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Name of the recovery plan.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansGetResponse>
        description: Promise<Models.ReplicationRecoveryPlansGetResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<RecoveryPlan>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(recoveryPlanName: string, options: RequestOptionsBase,
        callback: ServiceCallback<RecoveryPlan>)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Name of the recovery plan.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlan>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.get_1'
    name: 'get(string, ServiceCallback<RecoveryPlan>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(recoveryPlanName: string, callback:
        ServiceCallback<RecoveryPlan>)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Name of the recovery plan.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlan>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the recovery plans in the vault.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansListResponse>
        description: Promise<Models.ReplicationRecoveryPlansListResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<RecoveryPlanCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<RecoveryPlanCollection>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.list_1'
    name: list(ServiceCallback<RecoveryPlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<RecoveryPlanCollection>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the recovery plans in the vault.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansListNextResponse>
        description: Promise<Models.ReplicationRecoveryPlansListNextResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext_2
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<RecoveryPlanCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RecoveryPlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.listNext_1
    name: 'listNext(string, ServiceCallback<RecoveryPlanCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RecoveryPlanCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection>
          description: |
            The callback
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.plannedFailover
    name: >-
      plannedFailover(string, RecoveryPlanPlannedFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the planned failover of a recovery plan.
    syntax:
      content: >-
        function plannedFailover(recoveryPlanName: string, input:
        RecoveryPlanPlannedFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanPlannedFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansPlannedFailoverResponse>
        description: Promise<Models.ReplicationRecoveryPlansPlannedFailoverResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.constructor
    name: ReplicationRecoveryPlans(SiteRecoveryManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ReplicationRecoveryPlans.
    syntax:
      content: >-
        new ReplicationRecoveryPlans(client:
        SiteRecoveryManagementClientContext)
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.SiteRecoveryManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.reprotect
    name: 'reprotect(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to reprotect(reverse replicate) a recovery plan.
    syntax:
      content: >-
        function reprotect(recoveryPlanName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansReprotectResponse>
        description: Promise<Models.ReplicationRecoveryPlansReprotectResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.testFailover
    name: >-
      testFailover(string, RecoveryPlanTestFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the test failover of a recovery plan.
    syntax:
      content: >-
        function testFailover(recoveryPlanName: string, input:
        RecoveryPlanTestFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansTestFailoverResponse>
        description: Promise<Models.ReplicationRecoveryPlansTestFailoverResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.testFailoverCleanup
    name: >-
      testFailoverCleanup(string, RecoveryPlanTestFailoverCleanupInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to cleanup test failover of a recovery plan.
    syntax:
      content: >-
        function testFailoverCleanup(recoveryPlanName: string, input:
        RecoveryPlanTestFailoverCleanupInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverCleanupInput
          description: Test failover cleanup input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansTestFailoverCleanupResponse>
        description: Promise<Models.ReplicationRecoveryPlansTestFailoverCleanupResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.unplannedFailover
    name: >-
      unplannedFailover(string, RecoveryPlanUnplannedFailoverInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start the failover of a recovery plan.
    syntax:
      content: >-
        function unplannedFailover(recoveryPlanName: string, input:
        RecoveryPlanUnplannedFailoverInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - >-
              @azure/arm-recoveryservices-siterecovery.RecoveryPlanUnplannedFailoverInput
          description: Failover input.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansUnplannedFailoverResponse>
        description: Promise<Models.ReplicationRecoveryPlansUnplannedFailoverResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
  - uid: '@azure/arm-recoveryservices-siterecovery.ReplicationRecoveryPlans.update'
    name: 'update(string, UpdateRecoveryPlanInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a recovery plan.
    syntax:
      content: >-
        function update(recoveryPlanName: string, input:
        UpdateRecoveryPlanInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: recoveryPlanName
          type:
            - string
          description: Recovery plan name.
        - id: input
          type:
            - '@azure/arm-recoveryservices-siterecovery.UpdateRecoveryPlanInput'
          description: Update recovery plan input
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReplicationRecoveryPlansUpdateResponse>
        description: Promise<Models.ReplicationRecoveryPlansUpdateResponse>
    package: '@azure/arm-recoveryservices-siterecovery'
references:
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.SiteRecoveryManagementClientContext
    name: SiteRecoveryManagementClientContext
    spec.typeScript:
      - name: SiteRecoveryManagementClientContext
        fullName: SiteRecoveryManagementClientContext
        uid: >-
          @azure/arm-recoveryservices-siterecovery.SiteRecoveryManagementClientContext
  - uid: '@azure/arm-recoveryservices-siterecovery.CreateRecoveryPlanInput'
    name: CreateRecoveryPlanInput
    spec.typeScript:
      - name: CreateRecoveryPlanInput
        fullName: CreateRecoveryPlanInput
        uid: '@azure/arm-recoveryservices-siterecovery.CreateRecoveryPlanInput'
  - uid: '@azure/arm-recoveryservices-siterecovery.RecoveryPlanPlannedFailoverInput'
    name: RecoveryPlanPlannedFailoverInput
    spec.typeScript:
      - name: RecoveryPlanPlannedFailoverInput
        fullName: RecoveryPlanPlannedFailoverInput
        uid: >-
          @azure/arm-recoveryservices-siterecovery.RecoveryPlanPlannedFailoverInput
  - uid: '@azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverInput'
    name: RecoveryPlanTestFailoverInput
    spec.typeScript:
      - name: RecoveryPlanTestFailoverInput
        fullName: RecoveryPlanTestFailoverInput
        uid: '@azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverInput'
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverCleanupInput
    name: RecoveryPlanTestFailoverCleanupInput
    spec.typeScript:
      - name: RecoveryPlanTestFailoverCleanupInput
        fullName: RecoveryPlanTestFailoverCleanupInput
        uid: >-
          @azure/arm-recoveryservices-siterecovery.RecoveryPlanTestFailoverCleanupInput
  - uid: >-
      @azure/arm-recoveryservices-siterecovery.RecoveryPlanUnplannedFailoverInput
    name: RecoveryPlanUnplannedFailoverInput
    spec.typeScript:
      - name: RecoveryPlanUnplannedFailoverInput
        fullName: RecoveryPlanUnplannedFailoverInput
        uid: >-
          @azure/arm-recoveryservices-siterecovery.RecoveryPlanUnplannedFailoverInput
  - uid: '@azure/arm-recoveryservices-siterecovery.UpdateRecoveryPlanInput'
    name: UpdateRecoveryPlanInput
    spec.typeScript:
      - name: UpdateRecoveryPlanInput
        fullName: UpdateRecoveryPlanInput
        uid: '@azure/arm-recoveryservices-siterecovery.UpdateRecoveryPlanInput'
  - uid: ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlan>
    name: RecoveryPlan>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecoveryPlan
        fullName: RecoveryPlan
        uid: '@azure/arm-recoveryservices-siterecovery.RecoveryPlan'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection>
    name: RecoveryPlanCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecoveryPlanCollection
        fullName: RecoveryPlanCollection
        uid: '@azure/arm-recoveryservices-siterecovery.RecoveryPlanCollection'
      - name: '>'
        fullName: '>'
