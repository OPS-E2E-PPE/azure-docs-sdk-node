### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-labservices.GlobalUsers'
    name: GlobalUsers
    fullName: GlobalUsers
    children:
      - '@azure/arm-labservices.GlobalUsers.beginResetPassword'
      - '@azure/arm-labservices.GlobalUsers.beginStartEnvironment'
      - '@azure/arm-labservices.GlobalUsers.beginStopEnvironment'
      - '@azure/arm-labservices.GlobalUsers.getEnvironment_2'
      - '@azure/arm-labservices.GlobalUsers.getEnvironment'
      - '@azure/arm-labservices.GlobalUsers.getEnvironment_1'
      - '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus'
      - '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_2'
      - '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_1'
      - '@azure/arm-labservices.GlobalUsers.getOperationStatus'
      - '@azure/arm-labservices.GlobalUsers.getOperationStatus_2'
      - '@azure/arm-labservices.GlobalUsers.getOperationStatus_1'
      - '@azure/arm-labservices.GlobalUsers.getPersonalPreferences'
      - '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_2'
      - '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_1'
      - '@azure/arm-labservices.GlobalUsers.constructor'
      - '@azure/arm-labservices.GlobalUsers.listEnvironments'
      - '@azure/arm-labservices.GlobalUsers.listEnvironments_2'
      - '@azure/arm-labservices.GlobalUsers.listEnvironments_1'
      - '@azure/arm-labservices.GlobalUsers.listLabs'
      - '@azure/arm-labservices.GlobalUsers.listLabs_2'
      - '@azure/arm-labservices.GlobalUsers.listLabs_1'
      - '@azure/arm-labservices.GlobalUsers.register'
      - '@azure/arm-labservices.GlobalUsers.register_2'
      - '@azure/arm-labservices.GlobalUsers.register_1'
      - '@azure/arm-labservices.GlobalUsers.resetPassword'
      - '@azure/arm-labservices.GlobalUsers.startEnvironment'
      - '@azure/arm-labservices.GlobalUsers.stopEnvironment'
    langs:
      - typeScript
    type: class
    summary: Class representing a GlobalUsers.
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.beginResetPassword'
    name: >-
      beginResetPassword(string, ResetPasswordPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function beginResetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: resetPasswordPayload
          type:
            - '@azure/arm-labservices.ResetPasswordPayload'
          description: Represents the payload for resetting passwords.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.beginStartEnvironment'
    name: >-
      beginStartEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This operation can take

      a while to complete
    syntax:
      content: >-
        function beginStartEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.beginStopEnvironment'
    name: >-
      beginStopEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Stops an environment by stopping all resources inside the environment This
      operation can take a

      while to complete
    syntax:
      content: >-
        function beginStopEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getEnvironment_2'
    name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      GlobalUsersGetEnvironmentOptionalParams,
      ServiceCallback<GetEnvironmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options:
        GlobalUsersGetEnvironmentOptionalParams, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - '@azure/arm-labservices.GlobalUsersGetEnvironmentOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.GetEnvironmentResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getEnvironment'
    name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      Models.GlobalUsersGetEnvironmentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual machine details
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?:
        Models.GlobalUsersGetEnvironmentOptionalParams)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - Models.GlobalUsersGetEnvironmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersGetEnvironmentResponse>
        description: Promise<Models.GlobalUsersGetEnvironmentResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getEnvironment_1'
    name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<GetEnvironmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.GetEnvironmentResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus'
    name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get batch operation status
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type:
            - '@azure/arm-labservices.OperationBatchStatusPayload'
          description: Payload to get the status of an operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersGetOperationBatchStatusResponse>
        description: Promise<Models.GlobalUsersGetOperationBatchStatusResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_2'
    name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      RequestOptionsBase, ServiceCallback<OperationBatchStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options:
        RequestOptionsBase, callback:
        ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type:
            - '@azure/arm-labservices.OperationBatchStatusPayload'
          description: Payload to get the status of an operation
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-labservices.OperationBatchStatusResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_1'
    name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      ServiceCallback<OperationBatchStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, callback:
        ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type:
            - '@azure/arm-labservices.OperationBatchStatusPayload'
          description: Payload to get the status of an operation
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-labservices.OperationBatchStatusResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus'
    name: >-
      getOperationStatus(string, OperationStatusPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of long running operation
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationStatusPayload
          type:
            - '@azure/arm-labservices.OperationStatusPayload'
          description: Payload to get the status of an operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersGetOperationStatusResponse>
        description: Promise<Models.GlobalUsersGetOperationStatusResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus_2'
    name: >-
      getOperationStatus(string, OperationStatusPayload, RequestOptionsBase,
      ServiceCallback<OperationStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options: RequestOptionsBase, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationStatusPayload
          type:
            - '@azure/arm-labservices.OperationStatusPayload'
          description: Payload to get the status of an operation
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.OperationStatusResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus_1'
    name: >-
      getOperationStatus(string, OperationStatusPayload,
      ServiceCallback<OperationStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: operationStatusPayload
          type:
            - '@azure/arm-labservices.OperationStatusPayload'
          description: Payload to get the status of an operation
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.OperationStatusResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences'
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get personal preferences for a user
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type:
            - '@azure/arm-labservices.PersonalPreferencesOperationsPayload'
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersGetPersonalPreferencesResponse>
        description: Promise<Models.GlobalUsersGetPersonalPreferencesResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_2'
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      RequestOptionsBase, ServiceCallback<GetPersonalPreferencesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options: RequestOptionsBase,
        callback: ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type:
            - '@azure/arm-labservices.PersonalPreferencesOperationsPayload'
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-labservices.GetPersonalPreferencesResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_1'
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      ServiceCallback<GetPersonalPreferencesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, callback:
        ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type:
            - '@azure/arm-labservices.PersonalPreferencesOperationsPayload'
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-labservices.GetPersonalPreferencesResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.constructor'
    name: GlobalUsers(ManagedLabsClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a GlobalUsers.
    syntax:
      content: 'new GlobalUsers(client: ManagedLabsClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-labservices.ManagedLabsClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listEnvironments'
    name: >-
      listEnvironments(string, ListEnvironmentsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List Environments for the user
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type:
            - '@azure/arm-labservices.ListEnvironmentsPayload'
          description: Represents the payload to list environments owned by a user
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersListEnvironmentsResponse>
        description: Promise<Models.GlobalUsersListEnvironmentsResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listEnvironments_2'
    name: >-
      listEnvironments(string, ListEnvironmentsPayload, RequestOptionsBase,
      ServiceCallback<ListEnvironmentsResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options: RequestOptionsBase, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type:
            - '@azure/arm-labservices.ListEnvironmentsPayload'
          description: Represents the payload to list environments owned by a user
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.ListEnvironmentsResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listEnvironments_1'
    name: >-
      listEnvironments(string, ListEnvironmentsPayload,
      ServiceCallback<ListEnvironmentsResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type:
            - '@azure/arm-labservices.ListEnvironmentsPayload'
          description: Represents the payload to list environments owned by a user
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.ListEnvironmentsResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listLabs'
    name: 'listLabs(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List labs for the user.
    syntax:
      content: 'function listLabs(userName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GlobalUsersListLabsResponse>
        description: Promise<Models.GlobalUsersListLabsResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listLabs_2'
    name: 'listLabs(string, RequestOptionsBase, ServiceCallback<ListLabsResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listLabs(userName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.ListLabsResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.listLabs_1'
    name: 'listLabs(string, ServiceCallback<ListLabsResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listLabs(userName: string, callback:
        ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-labservices.ListLabsResponse>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.register'
    name: 'register(string, RegisterPayload, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a user to a managed lab
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: registerPayload
          type:
            - '@azure/arm-labservices.RegisterPayload'
          description: Represents payload for Register action.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.register_2'
    name: >-
      register(string, RegisterPayload, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: registerPayload
          type:
            - '@azure/arm-labservices.RegisterPayload'
          description: Represents payload for Register action.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.register_1'
    name: 'register(string, RegisterPayload, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: registerPayload
          type:
            - '@azure/arm-labservices.RegisterPayload'
          description: Represents payload for Register action.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.resetPassword'
    name: 'resetPassword(string, ResetPasswordPayload, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function resetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: resetPasswordPayload
          type:
            - '@azure/arm-labservices.ResetPasswordPayload'
          description: Represents the payload for resetting passwords.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.startEnvironment'
    name: >-
      startEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This operation can take

      a while to complete
    syntax:
      content: >-
        function startEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-labservices'
  - uid: '@azure/arm-labservices.GlobalUsers.stopEnvironment'
    name: >-
      stopEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Stops an environment by stopping all resources inside the environment This
      operation can take a

      while to complete
    syntax:
      content: >-
        function stopEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type:
            - string
          description: The name of the user.
        - id: environmentOperationsPayload
          type:
            - '@azure/arm-labservices.EnvironmentOperationsPayload'
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-labservices'
references:
  - uid: '@azure/arm-labservices.ManagedLabsClientContext'
    name: ManagedLabsClientContext
    spec.typeScript:
      - name: ManagedLabsClientContext
        fullName: ManagedLabsClientContext
        uid: '@azure/arm-labservices.ManagedLabsClientContext'
  - uid: '@azure/arm-labservices.ResetPasswordPayload'
    name: ResetPasswordPayload
    spec.typeScript:
      - name: ResetPasswordPayload
        fullName: ResetPasswordPayload
        uid: '@azure/arm-labservices.ResetPasswordPayload'
  - uid: '@azure/arm-labservices.EnvironmentOperationsPayload'
    name: EnvironmentOperationsPayload
    spec.typeScript:
      - name: EnvironmentOperationsPayload
        fullName: EnvironmentOperationsPayload
        uid: '@azure/arm-labservices.EnvironmentOperationsPayload'
  - uid: ServiceCallback<@azure/arm-labservices.GetEnvironmentResponse>
    name: GetEnvironmentResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetEnvironmentResponse
        fullName: GetEnvironmentResponse
        uid: '@azure/arm-labservices.GetEnvironmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-labservices.GlobalUsersGetEnvironmentOptionalParams'
    name: GlobalUsersGetEnvironmentOptionalParams
    spec.typeScript:
      - name: GlobalUsersGetEnvironmentOptionalParams
        fullName: GlobalUsersGetEnvironmentOptionalParams
        uid: '@azure/arm-labservices.GlobalUsersGetEnvironmentOptionalParams'
  - uid: '@azure/arm-labservices.OperationBatchStatusPayload'
    name: OperationBatchStatusPayload
    spec.typeScript:
      - name: OperationBatchStatusPayload
        fullName: OperationBatchStatusPayload
        uid: '@azure/arm-labservices.OperationBatchStatusPayload'
  - uid: ServiceCallback<@azure/arm-labservices.OperationBatchStatusResponse>
    name: OperationBatchStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationBatchStatusResponse
        fullName: OperationBatchStatusResponse
        uid: '@azure/arm-labservices.OperationBatchStatusResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-labservices.OperationStatusPayload'
    name: OperationStatusPayload
    spec.typeScript:
      - name: OperationStatusPayload
        fullName: OperationStatusPayload
        uid: '@azure/arm-labservices.OperationStatusPayload'
  - uid: ServiceCallback<@azure/arm-labservices.OperationStatusResponse>
    name: OperationStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatusResponse
        fullName: OperationStatusResponse
        uid: '@azure/arm-labservices.OperationStatusResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-labservices.PersonalPreferencesOperationsPayload'
    name: PersonalPreferencesOperationsPayload
    spec.typeScript:
      - name: PersonalPreferencesOperationsPayload
        fullName: PersonalPreferencesOperationsPayload
        uid: '@azure/arm-labservices.PersonalPreferencesOperationsPayload'
  - uid: ServiceCallback<@azure/arm-labservices.GetPersonalPreferencesResponse>
    name: GetPersonalPreferencesResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetPersonalPreferencesResponse
        fullName: GetPersonalPreferencesResponse
        uid: '@azure/arm-labservices.GetPersonalPreferencesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-labservices.ListEnvironmentsPayload'
    name: ListEnvironmentsPayload
    spec.typeScript:
      - name: ListEnvironmentsPayload
        fullName: ListEnvironmentsPayload
        uid: '@azure/arm-labservices.ListEnvironmentsPayload'
  - uid: ServiceCallback<@azure/arm-labservices.ListEnvironmentsResponse>
    name: ListEnvironmentsResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListEnvironmentsResponse
        fullName: ListEnvironmentsResponse
        uid: '@azure/arm-labservices.ListEnvironmentsResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-labservices.ListLabsResponse>
    name: ListLabsResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListLabsResponse
        fullName: ListLabsResponse
        uid: '@azure/arm-labservices.ListLabsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-labservices.RegisterPayload'
    name: RegisterPayload
    spec.typeScript:
      - name: RegisterPayload
        fullName: RegisterPayload
        uid: '@azure/arm-labservices.RegisterPayload'
