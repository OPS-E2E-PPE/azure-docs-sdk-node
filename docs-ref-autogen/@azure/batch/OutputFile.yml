### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.OutputFile'
    name: OutputFile
    fullName: OutputFile
    children:
      - '@azure/batch.OutputFile.destination'
      - '@azure/batch.OutputFile.filePattern'
      - '@azure/batch.OutputFile.uploadOptions'
    langs:
      - typeScript
    type: interface
    summary: An interface representing OutputFile.
    package: '@azure/batch'
  - uid: '@azure/batch.OutputFile.destination'
    name: destination
    fullName: destination
    children: []
    langs:
      - typeScript
    type: property
    summary: The destination for the output file(s).
    syntax:
      content: 'destination: OutputFileDestination'
      return:
        type:
          - '@azure/batch.OutputFileDestination'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.OutputFile.filePattern'
    name: filePattern
    fullName: filePattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A pattern indicating which file(s) to upload. Both relative and absolute
      paths are supported.

      Relative paths are relative to the task working directory. The following
      wildcards are

      supported: * matches 0 or more characters (for example pattern abc* would
      match abc or

      abcdef), ** matches any directory, ? matches any single character, [abc]
      matches one character

      in the brackets, and [a-c] matches one character in the range. Brackets
      can include a negation

      to match any character not specified (for example [!abc] matches any
      character but a, b, or

      c). If a file name starts with "." it is ignored by default but may be
      matched by specifying

      it explicitly (for example *.gif will not match .a.gif, but .*.gif will).
      A simple example:

      **\*.txt matches any file that does not start in '.' and ends with .txt in
      the task working

      directory or any subdirectory. If the filename contains a wildcard
      character it can be escaped

      using brackets (for example abc[*] would match a file named abc*). Note
      that both \ and / are

      treated as directory separators on Windows, but only / is on Linux.
      Environment variables

      (%var% on Windows or $var on Linux) are expanded prior to the pattern
      being applied.
    syntax:
      content: 'filePattern: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.OutputFile.uploadOptions'
    name: uploadOptions
    fullName: uploadOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional options for the upload operation, including under what
      conditions to perform the

      upload.
    syntax:
      content: 'uploadOptions: OutputFileUploadOptions'
      return:
        type:
          - '@azure/batch.OutputFileUploadOptions'
        description: ''
    package: '@azure/batch'
references:
  - uid: '@azure/batch.OutputFileDestination'
    name: OutputFileDestination
    spec.typeScript:
      - name: OutputFileDestination
        fullName: OutputFileDestination
        uid: '@azure/batch.OutputFileDestination'
  - uid: '@azure/batch.OutputFileUploadOptions'
    name: OutputFileUploadOptions
    spec.typeScript:
      - name: OutputFileUploadOptions
        fullName: OutputFileUploadOptions
        uid: '@azure/batch.OutputFileUploadOptions'
