### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.Pool'
    name: Pool
    fullName: Pool
    children:
      - '@azure/batch.Pool.add'
      - '@azure/batch.Pool.add_2'
      - '@azure/batch.Pool.add_1'
      - '@azure/batch.Pool.deleteMethod'
      - '@azure/batch.Pool.deleteMethod_2'
      - '@azure/batch.Pool.deleteMethod_1'
      - '@azure/batch.Pool.disableAutoScale'
      - '@azure/batch.Pool.disableAutoScale_2'
      - '@azure/batch.Pool.disableAutoScale_1'
      - '@azure/batch.Pool.enableAutoScale'
      - '@azure/batch.Pool.enableAutoScale_2'
      - '@azure/batch.Pool.enableAutoScale_1'
      - '@azure/batch.Pool.evaluateAutoScale'
      - '@azure/batch.Pool.evaluateAutoScale_2'
      - '@azure/batch.Pool.evaluateAutoScale_1'
      - '@azure/batch.Pool.exists'
      - '@azure/batch.Pool.exists_2'
      - '@azure/batch.Pool.exists_1'
      - '@azure/batch.Pool.get'
      - '@azure/batch.Pool.get_2'
      - '@azure/batch.Pool.get_1'
      - '@azure/batch.Pool.getAllLifetimeStatistics'
      - '@azure/batch.Pool.getAllLifetimeStatistics_2'
      - '@azure/batch.Pool.getAllLifetimeStatistics_1'
      - '@azure/batch.Pool.list'
      - '@azure/batch.Pool.list_2'
      - '@azure/batch.Pool.list_1'
      - '@azure/batch.Pool.listNext'
      - '@azure/batch.Pool.listNext_2'
      - '@azure/batch.Pool.listNext_1'
      - '@azure/batch.Pool.listUsageMetrics'
      - '@azure/batch.Pool.listUsageMetrics_2'
      - '@azure/batch.Pool.listUsageMetrics_1'
      - '@azure/batch.Pool.listUsageMetricsNext'
      - '@azure/batch.Pool.listUsageMetricsNext_2'
      - '@azure/batch.Pool.listUsageMetricsNext_1'
      - '@azure/batch.Pool.patch'
      - '@azure/batch.Pool.patch_2'
      - '@azure/batch.Pool.patch_1'
      - '@azure/batch.Pool.constructor'
      - '@azure/batch.Pool.removeNodes'
      - '@azure/batch.Pool.removeNodes_2'
      - '@azure/batch.Pool.removeNodes_1'
      - '@azure/batch.Pool.resize'
      - '@azure/batch.Pool.resize_2'
      - '@azure/batch.Pool.resize_1'
      - '@azure/batch.Pool.stopResize'
      - '@azure/batch.Pool.stopResize_2'
      - '@azure/batch.Pool.stopResize_1'
      - '@azure/batch.Pool.updateProperties'
      - '@azure/batch.Pool.updateProperties_2'
      - '@azure/batch.Pool.updateProperties_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Pool.
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.add'
    name: 'add(PoolAddParameter, Models.PoolAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When naming pools, avoid including sensitive information such as user
      names or secret project

      names. This information may appear in telemetry logs accessible to
      Microsoft Support engineers.
    syntax:
      content: >-
        function add(pool: PoolAddParameter, options?:
        Models.PoolAddOptionalParams)
      parameters:
        - id: pool
          type:
            - '@azure/batch.PoolAddParameter'
          description: The pool to be added.
        - id: options
          type:
            - Models.PoolAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolAddResponse>
        description: Promise<Models.PoolAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.add_2'
    name: 'add(PoolAddParameter, PoolAddOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(pool: PoolAddParameter, options: PoolAddOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: pool
          type:
            - '@azure/batch.PoolAddParameter'
          description: The pool to be added.
        - id: options
          type:
            - '@azure/batch.PoolAddOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.add_1'
    name: 'add(PoolAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(pool: PoolAddParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: pool
          type:
            - '@azure/batch.PoolAddParameter'
          description: The pool to be added.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.deleteMethod'
    name: 'deleteMethod(string, Models.PoolDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When you request that a pool be deleted, the following actions occur: the
      pool state is set to

      deleting; any ongoing resize operation on the pool are stopped; the Batch
      service starts

      resizing the pool to zero nodes; any tasks running on existing nodes are
      terminated and requeued

      (as if a resize pool operation had been requested with the default requeue
      option); finally, the

      pool is removed from the system. Because running tasks are requeued, the
      user can rerun these

      tasks by updating their job to target a different pool. The tasks can then
      run on the new pool.

      If you want to override the requeue behavior, then you should call resize
      pool explicitly to

      shrink the pool to zero size before deleting the pool. If you call an
      Update, Patch or Delete

      API on a pool in the deleting state, it will fail with HTTP status code
      409 with error code

      PoolBeingDeleted.
    syntax:
      content: >-
        function deleteMethod(poolId: string, options?:
        Models.PoolDeleteMethodOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to delete.
        - id: options
          type:
            - Models.PoolDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolDeleteResponse>
        description: Promise<Models.PoolDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.deleteMethod_2'
    name: >-
      deleteMethod(string, PoolDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(poolId: string, options:
        PoolDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to delete.
        - id: options
          type:
            - '@azure/batch.PoolDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(poolId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to delete.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.disableAutoScale'
    name: 'disableAutoScale(string, Models.PoolDisableAutoScaleOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disableAutoScale(poolId: string, options?:
        Models.PoolDisableAutoScaleOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to disable automatic scaling.
        - id: options
          type:
            - Models.PoolDisableAutoScaleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolDisableAutoScaleResponse>
        description: Promise<Models.PoolDisableAutoScaleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.disableAutoScale_2'
    name: >-
      disableAutoScale(string, PoolDisableAutoScaleOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disableAutoScale(poolId: string, options:
        PoolDisableAutoScaleOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to disable automatic scaling.
        - id: options
          type:
            - '@azure/batch.PoolDisableAutoScaleOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.disableAutoScale_1'
    name: 'disableAutoScale(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disableAutoScale(poolId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to disable automatic scaling.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.enableAutoScale'
    name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      Models.PoolEnableAutoScaleOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      You cannot enable automatic scaling on a pool if a resize operation is in
      progress on the pool.

      If automatic scaling of the pool is currently disabled, you must specify a
      valid autoscale

      formula as part of the request. If automatic scaling of the pool is
      already enabled, you may

      specify a new autoscale formula and/or a new evaluation interval. You
      cannot call this API for

      the same pool more than once every 30 seconds.
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, options?:
        Models.PoolEnableAutoScaleOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type:
            - '@azure/batch.PoolEnableAutoScaleParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.PoolEnableAutoScaleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolEnableAutoScaleResponse>
        description: Promise<Models.PoolEnableAutoScaleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.enableAutoScale_2'
    name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      PoolEnableAutoScaleOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, options:
        PoolEnableAutoScaleOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type:
            - '@azure/batch.PoolEnableAutoScaleParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.PoolEnableAutoScaleOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.enableAutoScale_1'
    name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type:
            - '@azure/batch.PoolEnableAutoScaleParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.evaluateAutoScale'
    name: >-
      evaluateAutoScale(string, string,
      Models.PoolEvaluateAutoScaleOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This API is primarily for validating an autoscale formula, as it simply
      returns the result

      without applying the formula to the pool. The pool must have auto scaling
      enabled in order to

      evaluate a formula.
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        options?: Models.PoolEvaluateAutoScaleOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: >-
            The ID of the pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool. The

            formula is validated and its results calculated, but it is not
            applied to the pool. To apply the

            formula to the pool, 'Enable automatic scaling on a pool'. For more
            information about specifying

            this formula, see Automatically scale compute nodes in an Azure
            Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type:
            - Models.PoolEvaluateAutoScaleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolEvaluateAutoScaleResponse>
        description: Promise<Models.PoolEvaluateAutoScaleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.evaluateAutoScale_2'
    name: >-
      evaluateAutoScale(string, string, PoolEvaluateAutoScaleOptionalParams,
      ServiceCallback<AutoScaleRun>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        options: PoolEvaluateAutoScaleOptionalParams, callback:
        ServiceCallback<AutoScaleRun>)
      parameters:
        - id: poolId
          type:
            - string
          description: >-
            The ID of the pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool. The

            formula is validated and its results calculated, but it is not
            applied to the pool. To apply the

            formula to the pool, 'Enable automatic scaling on a pool'. For more
            information about specifying

            this formula, see Automatically scale compute nodes in an Azure
            Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type:
            - '@azure/batch.PoolEvaluateAutoScaleOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.AutoScaleRun>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.evaluateAutoScale_1'
    name: 'evaluateAutoScale(string, string, ServiceCallback<AutoScaleRun>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        callback: ServiceCallback<AutoScaleRun>)
      parameters:
        - id: poolId
          type:
            - string
          description: >-
            The ID of the pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool. The

            formula is validated and its results calculated, but it is not
            applied to the pool. To apply the

            formula to the pool, 'Enable automatic scaling on a pool'. For more
            information about specifying

            this formula, see Automatically scale compute nodes in an Azure
            Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: callback
          type:
            - ServiceCallback<@azure/batch.AutoScaleRun>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.exists'
    name: 'exists(string, Models.PoolExistsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets basic properties of a pool.
    syntax:
      content: >-
        function exists(poolId: string, options?:
        Models.PoolExistsOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - Models.PoolExistsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolExistsResponse>
        description: Promise<Models.PoolExistsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.exists_2'
    name: 'exists(string, PoolExistsOptionalParams, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exists(poolId: string, options: PoolExistsOptionalParams,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - '@azure/batch.PoolExistsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.exists_1'
    name: 'exists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function exists(poolId: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.get'
    name: 'get(string, Models.PoolGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about the specified pool.
    syntax:
      content: 'function get(poolId: string, options?: Models.PoolGetOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - Models.PoolGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolGetResponse>
        description: Promise<Models.PoolGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.get_2'
    name: 'get(string, PoolGetOptionalParams, ServiceCallback<CloudPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(poolId: string, options: PoolGetOptionalParams, callback:
        ServiceCallback<CloudPool>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - '@azure/batch.PoolGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPool>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.get_1'
    name: 'get(string, ServiceCallback<CloudPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(poolId: string, callback: ServiceCallback<CloudPool>)'
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPool>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.getAllLifetimeStatistics'
    name: >-
      getAllLifetimeStatistics(Models.PoolGetAllLifetimeStatisticsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Statistics are aggregated across all pools that have ever existed in the
      account, from account

      creation to the last update time of the statistics. The statistics may not
      be immediately

      available. The Batch service performs periodic roll-up of statistics. The
      typical delay is about

      30 minutes.
    syntax:
      content: >-
        function getAllLifetimeStatistics(options?:
        Models.PoolGetAllLifetimeStatisticsOptionalParams)
      parameters:
        - id: options
          type:
            - Models.PoolGetAllLifetimeStatisticsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolGetAllLifetimeStatisticsResponse>
        description: Promise<Models.PoolGetAllLifetimeStatisticsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.getAllLifetimeStatistics_2'
    name: >-
      getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptionalParams,
      ServiceCallback<PoolStatistics>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllLifetimeStatistics(options:
        PoolGetAllLifetimeStatisticsOptionalParams, callback:
        ServiceCallback<PoolStatistics>)
      parameters:
        - id: options
          type:
            - '@azure/batch.PoolGetAllLifetimeStatisticsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolStatistics>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.getAllLifetimeStatistics_1'
    name: getAllLifetimeStatistics(ServiceCallback<PoolStatistics>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAllLifetimeStatistics(callback:
        ServiceCallback<PoolStatistics>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolStatistics>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.list'
    name: list(Models.PoolListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Models.PoolListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PoolListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolListResponse>
        description: Promise<Models.PoolListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.list_2'
    name: 'list(PoolListOptionalParams, ServiceCallback<CloudPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: PoolListOptionalParams, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: options
          type:
            - '@azure/batch.PoolListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPoolListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.list_1'
    name: list(ServiceCallback<CloudPoolListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<CloudPoolListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPoolListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listNext'
    name: 'listNext(string, Models.PoolListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.PoolListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - Models.PoolListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolListResponse>
        description: Promise<Models.PoolListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listNext_2'
    name: >-
      listNext(string, PoolListNextOptionalParams,
      ServiceCallback<CloudPoolListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        PoolListNextOptionalParams, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - '@azure/batch.PoolListNextOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPoolListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listNext_1'
    name: 'listNext(string, ServiceCallback<CloudPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudPoolListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetrics'
    name: listUsageMetrics(Models.PoolListUsageMetricsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If you do not specify a $filter clause including a poolId, the response
      includes all pools that

      existed in the account in the time range of the returned aggregation
      intervals. If you do not

      specify a $filter clause including a startTime or endTime these filters
      default to the start and

      end times of the last aggregation interval currently available; that is,
      only the last

      aggregation interval is returned.
    syntax:
      content: >-
        function listUsageMetrics(options?:
        Models.PoolListUsageMetricsOptionalParams)
      parameters:
        - id: options
          type:
            - Models.PoolListUsageMetricsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolListUsageMetricsResponse>
        description: Promise<Models.PoolListUsageMetricsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetrics_2'
    name: >-
      listUsageMetrics(PoolListUsageMetricsOptionalParams,
      ServiceCallback<PoolListUsageMetricsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsageMetrics(options: PoolListUsageMetricsOptionalParams,
        callback: ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: options
          type:
            - '@azure/batch.PoolListUsageMetricsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolListUsageMetricsResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetrics_1'
    name: listUsageMetrics(ServiceCallback<PoolListUsageMetricsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsageMetrics(callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolListUsageMetricsResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetricsNext'
    name: >-
      listUsageMetricsNext(string,
      Models.PoolListUsageMetricsNextOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If you do not specify a $filter clause including a poolId, the response
      includes all pools that

      existed in the account in the time range of the returned aggregation
      intervals. If you do not

      specify a $filter clause including a startTime or endTime these filters
      default to the start and

      end times of the last aggregation interval currently available; that is,
      only the last

      aggregation interval is returned.
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, options?:
        Models.PoolListUsageMetricsNextOptionalParams)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - Models.PoolListUsageMetricsNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolListUsageMetricsResponse>
        description: Promise<Models.PoolListUsageMetricsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetricsNext_2'
    name: >-
      listUsageMetricsNext(string, PoolListUsageMetricsNextOptionalParams,
      ServiceCallback<PoolListUsageMetricsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, options:
        PoolListUsageMetricsNextOptionalParams, callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - '@azure/batch.PoolListUsageMetricsNextOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolListUsageMetricsResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.listUsageMetricsNext_1'
    name: 'listUsageMetricsNext(string, ServiceCallback<PoolListUsageMetricsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.PoolListUsageMetricsResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.patch'
    name: 'patch(string, PoolPatchParameter, Models.PoolPatchOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This only replaces the pool properties specified in the request. For
      example, if the pool has a

      start task associated with it, and a request does not specify a start task
      element, then the

      pool keeps the existing start task.
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        options?: Models.PoolPatchOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolPatchParameter
          type:
            - '@azure/batch.PoolPatchParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.PoolPatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolPatchResponse>
        description: Promise<Models.PoolPatchResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.patch_2'
    name: >-
      patch(string, PoolPatchParameter, PoolPatchOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        options: PoolPatchOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolPatchParameter
          type:
            - '@azure/batch.PoolPatchParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.PoolPatchOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.patch_1'
    name: 'patch(string, PoolPatchParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolPatchParameter
          type:
            - '@azure/batch.PoolPatchParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.constructor'
    name: Pool(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Pool.
    syntax:
      content: 'new Pool(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.removeNodes'
    name: >-
      removeNodes(string, NodeRemoveParameter,
      Models.PoolRemoveNodesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation can only run when the allocation state of the pool is
      steady. When this operation

      runs, the allocation state changes from steady to resizing.
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, options?: Models.PoolRemoveNodesOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool from which you want to remove nodes.
        - id: nodeRemoveParameter
          type:
            - '@azure/batch.NodeRemoveParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.PoolRemoveNodesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolRemoveNodesResponse>
        description: Promise<Models.PoolRemoveNodesResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.removeNodes_2'
    name: >-
      removeNodes(string, NodeRemoveParameter, PoolRemoveNodesOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, options: PoolRemoveNodesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool from which you want to remove nodes.
        - id: nodeRemoveParameter
          type:
            - '@azure/batch.NodeRemoveParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.PoolRemoveNodesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.removeNodes_1'
    name: 'removeNodes(string, NodeRemoveParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool from which you want to remove nodes.
        - id: nodeRemoveParameter
          type:
            - '@azure/batch.NodeRemoveParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.resize'
    name: 'resize(string, PoolResizeParameter, Models.PoolResizeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      You can only resize a pool when its allocation state is steady. If the
      pool is already resizing,

      the request fails with status code 409. When you resize a pool, the pool's
      allocation state

      changes from steady to resizing. You cannot resize pools which are
      configured for automatic

      scaling. If you try to do this, the Batch service returns an error 409. If
      you resize a pool

      downwards, the Batch service chooses which nodes to remove. To remove
      specific nodes, use the

      pool remove nodes API instead.
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, options?: Models.PoolResizeOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to resize.
        - id: poolResizeParameter
          type:
            - '@azure/batch.PoolResizeParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.PoolResizeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolResizeResponse>
        description: Promise<Models.PoolResizeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.resize_2'
    name: >-
      resize(string, PoolResizeParameter, PoolResizeOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, options: PoolResizeOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to resize.
        - id: poolResizeParameter
          type:
            - '@azure/batch.PoolResizeParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.PoolResizeOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.resize_1'
    name: 'resize(string, PoolResizeParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to resize.
        - id: poolResizeParameter
          type:
            - '@azure/batch.PoolResizeParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.stopResize'
    name: 'stopResize(string, Models.PoolStopResizeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This does not restore the pool to its previous state before the resize
      operation: it only stops

      any further changes being made, and the pool maintains its current state.
      After stopping, the

      pool stabilizes at the number of nodes it was at when the stop operation
      was done. During the

      stop operation, the pool allocation state changes first to stopping and
      then to steady. A resize

      operation need not be an explicit resize pool request; this API can also
      be used to halt the

      initial sizing of the pool when it is created.
    syntax:
      content: >-
        function stopResize(poolId: string, options?:
        Models.PoolStopResizeOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool whose resizing you want to stop.
        - id: options
          type:
            - Models.PoolStopResizeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolStopResizeResponse>
        description: Promise<Models.PoolStopResizeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.stopResize_2'
    name: 'stopResize(string, PoolStopResizeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stopResize(poolId: string, options:
        PoolStopResizeOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool whose resizing you want to stop.
        - id: options
          type:
            - '@azure/batch.PoolStopResizeOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.stopResize_1'
    name: 'stopResize(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopResize(poolId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool whose resizing you want to stop.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.updateProperties'
    name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      Models.PoolUpdatePropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This fully replaces all the updatable properties of the pool. For example,
      if the pool has a

      start task associated with it and if start task is not specified with this
      request, then the

      Batch service will remove the existing start task.
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, options?:
        Models.PoolUpdatePropertiesOptionalParams)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolUpdatePropertiesParameter
          type:
            - '@azure/batch.PoolUpdatePropertiesParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.PoolUpdatePropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PoolUpdatePropertiesResponse>
        description: Promise<Models.PoolUpdatePropertiesResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.updateProperties_2'
    name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      PoolUpdatePropertiesOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, options:
        PoolUpdatePropertiesOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolUpdatePropertiesParameter
          type:
            - '@azure/batch.PoolUpdatePropertiesParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.PoolUpdatePropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.Pool.updateProperties_1'
    name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolUpdatePropertiesParameter
          type:
            - '@azure/batch.PoolUpdatePropertiesParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.PoolAddParameter'
    name: PoolAddParameter
    spec.typeScript:
      - name: PoolAddParameter
        fullName: PoolAddParameter
        uid: '@azure/batch.PoolAddParameter'
  - uid: '@azure/batch.PoolAddOptionalParams'
    name: PoolAddOptionalParams
    spec.typeScript:
      - name: PoolAddOptionalParams
        fullName: PoolAddOptionalParams
        uid: '@azure/batch.PoolAddOptionalParams'
  - uid: '@azure/batch.PoolDeleteMethodOptionalParams'
    name: PoolDeleteMethodOptionalParams
    spec.typeScript:
      - name: PoolDeleteMethodOptionalParams
        fullName: PoolDeleteMethodOptionalParams
        uid: '@azure/batch.PoolDeleteMethodOptionalParams'
  - uid: '@azure/batch.PoolDisableAutoScaleOptionalParams'
    name: PoolDisableAutoScaleOptionalParams
    spec.typeScript:
      - name: PoolDisableAutoScaleOptionalParams
        fullName: PoolDisableAutoScaleOptionalParams
        uid: '@azure/batch.PoolDisableAutoScaleOptionalParams'
  - uid: '@azure/batch.PoolEnableAutoScaleParameter'
    name: PoolEnableAutoScaleParameter
    spec.typeScript:
      - name: PoolEnableAutoScaleParameter
        fullName: PoolEnableAutoScaleParameter
        uid: '@azure/batch.PoolEnableAutoScaleParameter'
  - uid: '@azure/batch.PoolEnableAutoScaleOptionalParams'
    name: PoolEnableAutoScaleOptionalParams
    spec.typeScript:
      - name: PoolEnableAutoScaleOptionalParams
        fullName: PoolEnableAutoScaleOptionalParams
        uid: '@azure/batch.PoolEnableAutoScaleOptionalParams'
  - uid: ServiceCallback<@azure/batch.AutoScaleRun>
    name: AutoScaleRun>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AutoScaleRun
        fullName: AutoScaleRun
        uid: '@azure/batch.AutoScaleRun'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.PoolEvaluateAutoScaleOptionalParams'
    name: PoolEvaluateAutoScaleOptionalParams
    spec.typeScript:
      - name: PoolEvaluateAutoScaleOptionalParams
        fullName: PoolEvaluateAutoScaleOptionalParams
        uid: '@azure/batch.PoolEvaluateAutoScaleOptionalParams'
  - uid: '@azure/batch.PoolExistsOptionalParams'
    name: PoolExistsOptionalParams
    spec.typeScript:
      - name: PoolExistsOptionalParams
        fullName: PoolExistsOptionalParams
        uid: '@azure/batch.PoolExistsOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudPool>
    name: CloudPool>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudPool
        fullName: CloudPool
        uid: '@azure/batch.CloudPool'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.PoolGetOptionalParams'
    name: PoolGetOptionalParams
    spec.typeScript:
      - name: PoolGetOptionalParams
        fullName: PoolGetOptionalParams
        uid: '@azure/batch.PoolGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.PoolStatistics>
    name: PoolStatistics>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PoolStatistics
        fullName: PoolStatistics
        uid: '@azure/batch.PoolStatistics'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.PoolGetAllLifetimeStatisticsOptionalParams'
    name: PoolGetAllLifetimeStatisticsOptionalParams
    spec.typeScript:
      - name: PoolGetAllLifetimeStatisticsOptionalParams
        fullName: PoolGetAllLifetimeStatisticsOptionalParams
        uid: '@azure/batch.PoolGetAllLifetimeStatisticsOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudPoolListResult>
    name: CloudPoolListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudPoolListResult
        fullName: CloudPoolListResult
        uid: '@azure/batch.CloudPoolListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.PoolListOptionalParams'
    name: PoolListOptionalParams
    spec.typeScript:
      - name: PoolListOptionalParams
        fullName: PoolListOptionalParams
        uid: '@azure/batch.PoolListOptionalParams'
  - uid: '@azure/batch.PoolListNextOptionalParams'
    name: PoolListNextOptionalParams
    spec.typeScript:
      - name: PoolListNextOptionalParams
        fullName: PoolListNextOptionalParams
        uid: '@azure/batch.PoolListNextOptionalParams'
  - uid: ServiceCallback<@azure/batch.PoolListUsageMetricsResult>
    name: PoolListUsageMetricsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PoolListUsageMetricsResult
        fullName: PoolListUsageMetricsResult
        uid: '@azure/batch.PoolListUsageMetricsResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.PoolListUsageMetricsOptionalParams'
    name: PoolListUsageMetricsOptionalParams
    spec.typeScript:
      - name: PoolListUsageMetricsOptionalParams
        fullName: PoolListUsageMetricsOptionalParams
        uid: '@azure/batch.PoolListUsageMetricsOptionalParams'
  - uid: '@azure/batch.PoolListUsageMetricsNextOptionalParams'
    name: PoolListUsageMetricsNextOptionalParams
    spec.typeScript:
      - name: PoolListUsageMetricsNextOptionalParams
        fullName: PoolListUsageMetricsNextOptionalParams
        uid: '@azure/batch.PoolListUsageMetricsNextOptionalParams'
  - uid: '@azure/batch.PoolPatchParameter'
    name: PoolPatchParameter
    spec.typeScript:
      - name: PoolPatchParameter
        fullName: PoolPatchParameter
        uid: '@azure/batch.PoolPatchParameter'
  - uid: '@azure/batch.PoolPatchOptionalParams'
    name: PoolPatchOptionalParams
    spec.typeScript:
      - name: PoolPatchOptionalParams
        fullName: PoolPatchOptionalParams
        uid: '@azure/batch.PoolPatchOptionalParams'
  - uid: '@azure/batch.NodeRemoveParameter'
    name: NodeRemoveParameter
    spec.typeScript:
      - name: NodeRemoveParameter
        fullName: NodeRemoveParameter
        uid: '@azure/batch.NodeRemoveParameter'
  - uid: '@azure/batch.PoolRemoveNodesOptionalParams'
    name: PoolRemoveNodesOptionalParams
    spec.typeScript:
      - name: PoolRemoveNodesOptionalParams
        fullName: PoolRemoveNodesOptionalParams
        uid: '@azure/batch.PoolRemoveNodesOptionalParams'
  - uid: '@azure/batch.PoolResizeParameter'
    name: PoolResizeParameter
    spec.typeScript:
      - name: PoolResizeParameter
        fullName: PoolResizeParameter
        uid: '@azure/batch.PoolResizeParameter'
  - uid: '@azure/batch.PoolResizeOptionalParams'
    name: PoolResizeOptionalParams
    spec.typeScript:
      - name: PoolResizeOptionalParams
        fullName: PoolResizeOptionalParams
        uid: '@azure/batch.PoolResizeOptionalParams'
  - uid: '@azure/batch.PoolStopResizeOptionalParams'
    name: PoolStopResizeOptionalParams
    spec.typeScript:
      - name: PoolStopResizeOptionalParams
        fullName: PoolStopResizeOptionalParams
        uid: '@azure/batch.PoolStopResizeOptionalParams'
  - uid: '@azure/batch.PoolUpdatePropertiesParameter'
    name: PoolUpdatePropertiesParameter
    spec.typeScript:
      - name: PoolUpdatePropertiesParameter
        fullName: PoolUpdatePropertiesParameter
        uid: '@azure/batch.PoolUpdatePropertiesParameter'
  - uid: '@azure/batch.PoolUpdatePropertiesOptionalParams'
    name: PoolUpdatePropertiesOptionalParams
    spec.typeScript:
      - name: PoolUpdatePropertiesOptionalParams
        fullName: PoolUpdatePropertiesOptionalParams
        uid: '@azure/batch.PoolUpdatePropertiesOptionalParams'
