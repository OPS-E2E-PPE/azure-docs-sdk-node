### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.TaskDependencies'
    name: TaskDependencies
    fullName: TaskDependencies
    children:
      - '@azure/batch.TaskDependencies.taskIdRanges'
      - '@azure/batch.TaskDependencies.taskIds'
    langs:
      - typeScript
    type: interface
    summary: An interface representing TaskDependencies.
    package: '@azure/batch'
  - uid: '@azure/batch.TaskDependencies.taskIdRanges'
    name: taskIdRanges
    fullName: taskIdRanges
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The list of task ID ranges that this task depends on. All tasks in all
      ranges must complete

      successfully before the dependent task can be scheduled.
    optional: true
    syntax:
      content: 'taskIdRanges?: TaskIdRange[]'
      return:
        type:
          - '@azure/batch.TaskIdRange[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.TaskDependencies.taskIds'
    name: taskIds
    fullName: taskIds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The list of task IDs that this task depends on. All tasks in this list
      must complete

      successfully before the dependent task can be scheduled. The taskIds
      collection is limited to

      64000 characters total (i.e. the combined length of all task IDs). If the
      taskIds collection

      exceeds the maximum length, the Add Task request fails with error code

      TaskDependencyListTooLong. In this case consider using task ID ranges
      instead.
    optional: true
    syntax:
      content: 'taskIds?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskIdRange[]'
    name: 'TaskIdRange[]'
    spec.typeScript:
      - name: TaskIdRange
        fullName: TaskIdRange
        uid: '@azure/batch.TaskIdRange'
      - name: '[]'
        fullName: '[]'
