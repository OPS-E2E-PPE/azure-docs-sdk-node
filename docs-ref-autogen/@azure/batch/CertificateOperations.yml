### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.CertificateOperations'
    name: CertificateOperations
    fullName: CertificateOperations
    children:
      - '@azure/batch.CertificateOperations.add_2'
      - '@azure/batch.CertificateOperations.add'
      - '@azure/batch.CertificateOperations.add_1'
      - '@azure/batch.CertificateOperations.cancelDeletion_2'
      - '@azure/batch.CertificateOperations.cancelDeletion'
      - '@azure/batch.CertificateOperations.cancelDeletion_1'
      - '@azure/batch.CertificateOperations.constructor'
      - '@azure/batch.CertificateOperations.deleteMethod_2'
      - '@azure/batch.CertificateOperations.deleteMethod'
      - '@azure/batch.CertificateOperations.deleteMethod_1'
      - '@azure/batch.CertificateOperations.get_2'
      - '@azure/batch.CertificateOperations.get'
      - '@azure/batch.CertificateOperations.get_1'
      - '@azure/batch.CertificateOperations.list_2'
      - '@azure/batch.CertificateOperations.list'
      - '@azure/batch.CertificateOperations.list_1'
      - '@azure/batch.CertificateOperations.listNext_2'
      - '@azure/batch.CertificateOperations.listNext'
      - '@azure/batch.CertificateOperations.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a CertificateOperations.
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.add_2'
    name: >-
      add(CertificateAddParameter, CertificateAddOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(certificate: CertificateAddParameter, options:
        CertificateAddOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: certificate
          type:
            - '@azure/batch.CertificateAddParameter'
          description: The certificate to be added.
        - id: options
          type:
            - '@azure/batch.CertificateAddOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.add'
    name: 'add(CertificateAddParameter, Models.CertificateAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(certificate: CertificateAddParameter, options?:
        Models.CertificateAddOptionalParams)
      parameters:
        - id: certificate
          type:
            - '@azure/batch.CertificateAddParameter'
          description: The certificate to be added.
        - id: options
          type:
            - Models.CertificateAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateAddResponse>
        description: Promise<Models.CertificateAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.add_1'
    name: 'add(CertificateAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(certificate: CertificateAddParameter, callback:
        ServiceCallback<void>)
      parameters:
        - id: certificate
          type:
            - '@azure/batch.CertificateAddParameter'
          description: The certificate to be added.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.cancelDeletion_2'
    name: >-
      cancelDeletion(string, string, CertificateCancelDeletionOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelDeletion(thumbprintAlgorithm: string, thumbprint: string,
        options: CertificateCancelDeletionOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate being deleted.
        - id: options
          type:
            - '@azure/batch.CertificateCancelDeletionOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.cancelDeletion'
    name: >-
      cancelDeletion(string, string,
      Models.CertificateCancelDeletionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If you try to delete a certificate that is being used by a pool or compute
      node, the status of

      the certificate changes to deleteFailed. If you decide that you want to
      continue using the

      certificate, you can use this operation to set the status of the
      certificate back to active. If

      you intend to delete the certificate, you do not need to run this
      operation after the deletion

      failed. You must make sure that the certificate is not being used by any
      resources, and then you

      can try again to delete the certificate.
    syntax:
      content: >-
        function cancelDeletion(thumbprintAlgorithm: string, thumbprint: string,
        options?: Models.CertificateCancelDeletionOptionalParams)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate being deleted.
        - id: options
          type:
            - Models.CertificateCancelDeletionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateCancelDeletionResponse>
        description: Promise<Models.CertificateCancelDeletionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.cancelDeletion_1'
    name: 'cancelDeletion(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function cancelDeletion(thumbprintAlgorithm: string, thumbprint: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate being deleted.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.constructor'
    name: CertificateOperations(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a CertificateOperations.
    syntax:
      content: 'new CertificateOperations(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.deleteMethod_2'
    name: >-
      deleteMethod(string, string, CertificateDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(thumbprintAlgorithm: string, thumbprint: string,
        options: CertificateDeleteMethodOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to be deleted.
        - id: options
          type:
            - '@azure/batch.CertificateDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.deleteMethod'
    name: 'deleteMethod(string, string, Models.CertificateDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      You cannot delete a certificate if a resource (pool or compute node) is
      using it. Before you can

      delete a certificate, you must therefore make sure that the certificate is
      not associated with

      any existing pools, the certificate is not installed on any compute nodes
      (even if you remove a

      certificate from a pool, it is not removed from existing compute nodes in
      that pool until they

      restart), and no running tasks depend on the certificate. If you try to
      delete a certificate

      that is in use, the deletion fails. The certificate status changes to
      deleteFailed. You can use

      Cancel Delete Certificate to set the status back to active if you decide
      that you want to

      continue using the certificate.
    syntax:
      content: >-
        function deleteMethod(thumbprintAlgorithm: string, thumbprint: string,
        options?: Models.CertificateDeleteMethodOptionalParams)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to be deleted.
        - id: options
          type:
            - Models.CertificateDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateDeleteResponse>
        description: Promise<Models.CertificateDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(thumbprintAlgorithm: string, thumbprint: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to be deleted.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.get_2'
    name: >-
      get(string, string, CertificateGetOptionalParams,
      ServiceCallback<Certificate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(thumbprintAlgorithm: string, thumbprint: string, options:
        CertificateGetOptionalParams, callback: ServiceCallback<Certificate>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to get.
        - id: options
          type:
            - '@azure/batch.CertificateGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.Certificate>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.get'
    name: 'get(string, string, Models.CertificateGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about the specified certificate.
    syntax:
      content: >-
        function get(thumbprintAlgorithm: string, thumbprint: string, options?:
        Models.CertificateGetOptionalParams)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to get.
        - id: options
          type:
            - Models.CertificateGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateGetResponse>
        description: Promise<Models.CertificateGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.get_1'
    name: 'get(string, string, ServiceCallback<Certificate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(thumbprintAlgorithm: string, thumbprint: string, callback:
        ServiceCallback<Certificate>)
      parameters:
        - id: thumbprintAlgorithm
          type:
            - string
          description: |-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
        - id: thumbprint
          type:
            - string
          description: The thumbprint of the certificate to get.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.Certificate>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.list_2'
    name: >-
      list(CertificateListOptionalParams,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: CertificateListOptionalParams, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: options
          type:
            - '@azure/batch.CertificateListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CertificateListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.list'
    name: list(Models.CertificateListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Models.CertificateListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.CertificateListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateListResponse>
        description: Promise<Models.CertificateListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.list_1'
    name: list(ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CertificateListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.listNext_2'
    name: >-
      listNext(string, CertificateListNextOptionalParams,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        CertificateListNextOptionalParams, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - '@azure/batch.CertificateListNextOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CertificateListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.listNext'
    name: 'listNext(string, Models.CertificateListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.CertificateListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - Models.CertificateListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CertificateListResponse>
        description: Promise<Models.CertificateListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.CertificateOperations.listNext_1'
    name: 'listNext(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CertificateListResult>
          description: |
            The callback
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.CertificateAddParameter'
    name: CertificateAddParameter
    spec.typeScript:
      - name: CertificateAddParameter
        fullName: CertificateAddParameter
        uid: '@azure/batch.CertificateAddParameter'
  - uid: '@azure/batch.CertificateAddOptionalParams'
    name: CertificateAddOptionalParams
    spec.typeScript:
      - name: CertificateAddOptionalParams
        fullName: CertificateAddOptionalParams
        uid: '@azure/batch.CertificateAddOptionalParams'
  - uid: '@azure/batch.CertificateCancelDeletionOptionalParams'
    name: CertificateCancelDeletionOptionalParams
    spec.typeScript:
      - name: CertificateCancelDeletionOptionalParams
        fullName: CertificateCancelDeletionOptionalParams
        uid: '@azure/batch.CertificateCancelDeletionOptionalParams'
  - uid: '@azure/batch.CertificateDeleteMethodOptionalParams'
    name: CertificateDeleteMethodOptionalParams
    spec.typeScript:
      - name: CertificateDeleteMethodOptionalParams
        fullName: CertificateDeleteMethodOptionalParams
        uid: '@azure/batch.CertificateDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/batch.Certificate>
    name: Certificate>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Certificate
        fullName: Certificate
        uid: '@azure/batch.Certificate'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.CertificateGetOptionalParams'
    name: CertificateGetOptionalParams
    spec.typeScript:
      - name: CertificateGetOptionalParams
        fullName: CertificateGetOptionalParams
        uid: '@azure/batch.CertificateGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.CertificateListResult>
    name: CertificateListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: '@azure/batch.CertificateListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.CertificateListOptionalParams'
    name: CertificateListOptionalParams
    spec.typeScript:
      - name: CertificateListOptionalParams
        fullName: CertificateListOptionalParams
        uid: '@azure/batch.CertificateListOptionalParams'
  - uid: '@azure/batch.CertificateListNextOptionalParams'
    name: CertificateListNextOptionalParams
    spec.typeScript:
      - name: CertificateListNextOptionalParams
        fullName: CertificateListNextOptionalParams
        uid: '@azure/batch.CertificateListNextOptionalParams'
