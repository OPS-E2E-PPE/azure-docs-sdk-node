### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.CloudTask'
    name: CloudTask
    fullName: CloudTask
    children:
      - '@azure/batch.CloudTask.affinityInfo'
      - '@azure/batch.CloudTask.applicationPackageReferences'
      - '@azure/batch.CloudTask.authenticationTokenSettings'
      - '@azure/batch.CloudTask.commandLine'
      - '@azure/batch.CloudTask.constraints'
      - '@azure/batch.CloudTask.containerSettings'
      - '@azure/batch.CloudTask.creationTime'
      - '@azure/batch.CloudTask.dependsOn'
      - '@azure/batch.CloudTask.displayName'
      - '@azure/batch.CloudTask.environmentSettings'
      - '@azure/batch.CloudTask.eTag'
      - '@azure/batch.CloudTask.executionInfo'
      - '@azure/batch.CloudTask.exitConditions'
      - '@azure/batch.CloudTask.id'
      - '@azure/batch.CloudTask.lastModified'
      - '@azure/batch.CloudTask.multiInstanceSettings'
      - '@azure/batch.CloudTask.nodeInfo'
      - '@azure/batch.CloudTask.outputFiles'
      - '@azure/batch.CloudTask.previousState'
      - '@azure/batch.CloudTask.previousStateTransitionTime'
      - '@azure/batch.CloudTask.resourceFiles'
      - '@azure/batch.CloudTask.state'
      - '@azure/batch.CloudTask.stateTransitionTime'
      - '@azure/batch.CloudTask.stats'
      - '@azure/batch.CloudTask.url'
      - '@azure/batch.CloudTask.userIdentity'
    langs:
      - typeScript
    type: interface
    summary: >-
      Batch will retry tasks when a recovery operation is triggered on a compute
      node. Examples of

      recovery operations include (but are not limited to) when an unhealthy
      compute node is rebooted

      or a compute node disappeared due to host failure. Retries due to recovery
      operations are

      independent of and are not counted against the maxTaskRetryCount. Even if
      the maxTaskRetryCount

      is 0, an internal retry due to a recovery operation may occur. Because of
      this, all tasks should

      be idempotent. This means tasks need to tolerate being interrupted and
      restarted without causing

      any corruption or duplicate data. The best practice for long running tasks
      is to use some form

      of checkpointing.
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.affinityInfo'
    name: affinityInfo
    fullName: affinityInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A locality hint that can be used by the Batch service to select a compute
      node on which to

      start the new task.
    optional: true
    syntax:
      content: 'affinityInfo?: AffinityInformation'
      return:
        type:
          - '@azure/batch.AffinityInformation'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.applicationPackageReferences'
    name: applicationPackageReferences
    fullName: applicationPackageReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of application packages that the Batch service will deploy to the
      compute node before

      running the command line. Application packages are downloaded and deployed
      to a shared

      directory, not the task working directory. Therefore, if a referenced
      package is already on

      the compute node, and is up to date, then it is not re-downloaded; the
      existing copy on the

      compute node is used. If a referenced application package cannot be
      installed, for example

      because the package has been deleted or because download failed, the task
      fails.
    optional: true
    syntax:
      content: 'applicationPackageReferences?: ApplicationPackageReference[]'
      return:
        type:
          - '@azure/batch.ApplicationPackageReference[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.authenticationTokenSettings'
    name: authenticationTokenSettings
    fullName: authenticationTokenSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The settings for an authentication token that the task can use to perform
      Batch service

      operations. If this property is set, the Batch service provides the task
      with an

      authentication token which can be used to authenticate Batch service
      operations without

      requiring an account access key. The token is provided via the
      AZ_BATCH_AUTHENTICATION_TOKEN

      environment variable. The operations that the task can carry out using the
      token depend on the

      settings. For example, a task can request job permissions in order to add
      other tasks to the

      job, or check the status of the job or of other tasks under the job.
    optional: true
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
      return:
        type:
          - '@azure/batch.AuthenticationTokenSettings'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The command line of the task. For multi-instance tasks, the command line
      is executed as the

      primary task, after the primary task and all subtasks have finished
      executing the coordination

      command line. The command line does not run under a shell, and therefore
      cannot take advantage

      of shell features such as environment variable expansion. If you want to
      take advantage of

      such features, you should invoke the shell in the command line, for
      example using "cmd /c

      MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command
      line refers to file

      paths, it should use a relative path (relative to the task working
      directory), or use the

      Batch provided environment variable

      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
    optional: true
    syntax:
      content: 'commandLine?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.constraints'
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: The execution constraints that apply to this task.
    optional: true
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type:
          - '@azure/batch.TaskConstraints'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The settings for the container under which the task runs. If the pool that
      will run this task

      has containerConfiguration set, this must be set as well. If the pool that
      will run this task

      doesn't have containerConfiguration set, this must not be set. When this
      is specified, all

      directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of
      Azure Batch directories

      on the node) are mapped into the container, all task environment variables
      are mapped into the

      container, and the task command line is executed in the container.
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.creationTime'
    name: creationTime
    fullName: creationTime
    children: []
    langs:
      - typeScript
    type: property
    summary: The creation time of the task.
    optional: true
    syntax:
      content: 'creationTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.dependsOn'
    name: dependsOn
    fullName: dependsOn
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The tasks that this task depends on. This task will not be scheduled until
      all tasks that it

      depends on have completed successfully. If any of those tasks fail and
      exhaust their retry

      counts, this task will never be scheduled.
    optional: true
    syntax:
      content: 'dependsOn?: TaskDependencies'
      return:
        type:
          - '@azure/batch.TaskDependencies'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.displayName'
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A display name for the task. The display name need not be unique and can
      contain any Unicode

      characters up to a maximum length of 1024.
    optional: true
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of environment variable settings for the task.
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.eTag'
    name: eTag
    fullName: eTag
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The ETag of the task. This is an opaque string. You can use it to detect
      whether the task has

      changed between requests. In particular, you can be pass the ETag when
      updating a task to

      specify that your changes should take effect only if nobody else has
      modified the task in the

      meantime.
    optional: true
    syntax:
      content: 'eTag?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.executionInfo'
    name: executionInfo
    fullName: executionInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: Information about the execution of the task.
    optional: true
    syntax:
      content: 'executionInfo?: TaskExecutionInformation'
      return:
        type:
          - '@azure/batch.TaskExecutionInformation'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.exitConditions'
    name: exitConditions
    fullName: exitConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: How the Batch service should respond when the task completes.
    optional: true
    syntax:
      content: 'exitConditions?: ExitConditions'
      return:
        type:
          - '@azure/batch.ExitConditions'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string that uniquely identifies the task within the job. The ID can
      contain any combination

      of alphanumeric characters including hyphens and underscores, and cannot
      contain more than 64

      characters.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.lastModified'
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: The last modified time of the task.
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.multiInstanceSettings'
    name: multiInstanceSettings
    fullName: multiInstanceSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An object that indicates that the task is a multi-instance task, and
      contains information

      about how to run the multi-instance task.
    optional: true
    syntax:
      content: 'multiInstanceSettings?: MultiInstanceSettings'
      return:
        type:
          - '@azure/batch.MultiInstanceSettings'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.nodeInfo'
    name: nodeInfo
    fullName: nodeInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: Information about the compute node on which the task ran.
    optional: true
    syntax:
      content: 'nodeInfo?: ComputeNodeInformation'
      return:
        type:
          - '@azure/batch.ComputeNodeInformation'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.outputFiles'
    name: outputFiles
    fullName: outputFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of files that the Batch service will upload from the compute node
      after running the

      command line. For multi-instance tasks, the files will only be uploaded
      from the compute node

      on which the primary task is executed.
    optional: true
    syntax:
      content: 'outputFiles?: OutputFile[]'
      return:
        type:
          - '@azure/batch.OutputFile[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.previousState'
    name: previousState
    fullName: previousState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The previous state of the task. This property is not set if the task is in
      its initial Active

      state. Possible values include: 'active', 'preparing', 'running',
      'completed'
    optional: true
    syntax:
      content: 'previousState?: TaskState'
      return:
        type:
          - '@azure/batch.TaskState'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.previousStateTransitionTime'
    name: previousStateTransitionTime
    fullName: previousStateTransitionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The time at which the task entered its previous state. This property is
      not set if the task is

      in its initial Active state.
    optional: true
    syntax:
      content: 'previousStateTransitionTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of files that the Batch service will download to the compute node
      before running the

      command line. For multi-instance tasks, the resource files will only be
      downloaded to the

      compute node on which the primary task is executed. There is a maximum
      size for the list of

      resource files.  When the max size is exceeded, the request will fail and
      the response error

      code will be RequestEntityTooLarge. If this occurs, the collection of
      ResourceFiles must be

      reduced in size. This can be achieved using .zip files, Application
      Packages, or Docker

      Containers.
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.state'
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The current state of the task. Possible values include: 'active',
      'preparing', 'running',

      'completed'
    optional: true
    syntax:
      content: 'state?: TaskState'
      return:
        type:
          - '@azure/batch.TaskState'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.stateTransitionTime'
    name: stateTransitionTime
    fullName: stateTransitionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: The time at which the task entered its current state.
    optional: true
    syntax:
      content: 'stateTransitionTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.stats'
    name: stats
    fullName: stats
    children: []
    langs:
      - typeScript
    type: property
    summary: Resource usage statistics for the task.
    optional: true
    syntax:
      content: 'stats?: TaskStatistics'
      return:
        type:
          - '@azure/batch.TaskStatistics'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: The URL of the task.
    optional: true
    syntax:
      content: 'url?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.CloudTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The user identity under which the task runs. If omitted, the task runs as
      a non-administrative

      user unique to the task.
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
        description: ''
    package: '@azure/batch'
references:
  - uid: '@azure/batch.AffinityInformation'
    name: AffinityInformation
    spec.typeScript:
      - name: AffinityInformation
        fullName: AffinityInformation
        uid: '@azure/batch.AffinityInformation'
  - uid: '@azure/batch.ApplicationPackageReference[]'
    name: 'ApplicationPackageReference[]'
    spec.typeScript:
      - name: ApplicationPackageReference
        fullName: ApplicationPackageReference
        uid: '@azure/batch.ApplicationPackageReference'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.AuthenticationTokenSettings'
    name: AuthenticationTokenSettings
    spec.typeScript:
      - name: AuthenticationTokenSettings
        fullName: AuthenticationTokenSettings
        uid: '@azure/batch.AuthenticationTokenSettings'
  - uid: '@azure/batch.TaskConstraints'
    name: TaskConstraints
    spec.typeScript:
      - name: TaskConstraints
        fullName: TaskConstraints
        uid: '@azure/batch.TaskConstraints'
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.TaskDependencies'
    name: TaskDependencies
    spec.typeScript:
      - name: TaskDependencies
        fullName: TaskDependencies
        uid: '@azure/batch.TaskDependencies'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.TaskExecutionInformation'
    name: TaskExecutionInformation
    spec.typeScript:
      - name: TaskExecutionInformation
        fullName: TaskExecutionInformation
        uid: '@azure/batch.TaskExecutionInformation'
  - uid: '@azure/batch.ExitConditions'
    name: ExitConditions
    spec.typeScript:
      - name: ExitConditions
        fullName: ExitConditions
        uid: '@azure/batch.ExitConditions'
  - uid: '@azure/batch.MultiInstanceSettings'
    name: MultiInstanceSettings
    spec.typeScript:
      - name: MultiInstanceSettings
        fullName: MultiInstanceSettings
        uid: '@azure/batch.MultiInstanceSettings'
  - uid: '@azure/batch.ComputeNodeInformation'
    name: ComputeNodeInformation
    spec.typeScript:
      - name: ComputeNodeInformation
        fullName: ComputeNodeInformation
        uid: '@azure/batch.ComputeNodeInformation'
  - uid: '@azure/batch.OutputFile[]'
    name: 'OutputFile[]'
    spec.typeScript:
      - name: OutputFile
        fullName: OutputFile
        uid: '@azure/batch.OutputFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.TaskState'
    name: TaskState
    spec.typeScript:
      - name: TaskState
        fullName: TaskState
        uid: '@azure/batch.TaskState'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.TaskStatistics'
    name: TaskStatistics
    spec.typeScript:
      - name: TaskStatistics
        fullName: TaskStatistics
        uid: '@azure/batch.TaskStatistics'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'
