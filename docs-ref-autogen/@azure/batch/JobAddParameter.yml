### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.JobAddParameter'
    name: JobAddParameter
    fullName: JobAddParameter
    children:
      - '@azure/batch.JobAddParameter.commonEnvironmentSettings'
      - '@azure/batch.JobAddParameter.constraints'
      - '@azure/batch.JobAddParameter.displayName'
      - '@azure/batch.JobAddParameter.id'
      - '@azure/batch.JobAddParameter.jobManagerTask'
      - '@azure/batch.JobAddParameter.jobPreparationTask'
      - '@azure/batch.JobAddParameter.jobReleaseTask'
      - '@azure/batch.JobAddParameter.metadata'
      - '@azure/batch.JobAddParameter.networkConfiguration'
      - '@azure/batch.JobAddParameter.onAllTasksComplete'
      - '@azure/batch.JobAddParameter.onTaskFailure'
      - '@azure/batch.JobAddParameter.poolInfo'
      - '@azure/batch.JobAddParameter.priority'
      - '@azure/batch.JobAddParameter.usesTaskDependencies'
    langs:
      - typeScript
    type: interface
    summary: An interface representing JobAddParameter.
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.commonEnvironmentSettings'
    name: commonEnvironmentSettings
    fullName: commonEnvironmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The list of common environment variable settings. These environment
      variables are set for all

      tasks in the job (including the Job Manager, Job Preparation and Job
      Release tasks).

      Individual tasks can override an environment setting specified here by
      specifying the same

      setting name with a different value.
    optional: true
    syntax:
      content: 'commonEnvironmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.constraints'
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: The execution constraints for the job.
    optional: true
    syntax:
      content: 'constraints?: JobConstraints'
      return:
        type:
          - '@azure/batch.JobConstraints'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.displayName'
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The display name for the job. The display name need not be unique and can
      contain any Unicode

      characters up to a maximum length of 1024.
    optional: true
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string that uniquely identifies the job within the account. The ID can
      contain any

      combination of alphanumeric characters including hyphens and underscores,
      and cannot contain

      more than 64 characters. The ID is case-preserving and case-insensitive
      (that is, you may not

      have two IDs within an account that differ only by case).
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.jobManagerTask'
    name: jobManagerTask
    fullName: jobManagerTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Details of a Job Manager task to be launched when the job is started. If
      the job does not

      specify a Job Manager task, the user must explicitly add tasks to the job.
      If the job does

      specify a Job Manager task, the Batch service creates the Job Manager task
      when the job is

      created, and will try to schedule the Job Manager task before scheduling
      other tasks in the

      job. The Job Manager task's typical purpose is to control and/or monitor
      job execution, for

      example by deciding what additional tasks to run, determining when the
      work is complete, etc.

      (However, a Job Manager task is not restricted to these activities - it is
      a fully-fledged

      task in the system and perform whatever actions are required for the job.)
      For example, a Job

      Manager task might download a file specified as a parameter, analyze the
      contents of that file

      and submit additional tasks based on those contents.
    optional: true
    syntax:
      content: 'jobManagerTask?: JobManagerTask'
      return:
        type:
          - '@azure/batch.JobManagerTask'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.jobPreparationTask'
    name: jobPreparationTask
    fullName: jobPreparationTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The Job Preparation task. If a job has a Job Preparation task, the Batch
      service will run the

      Job Preparation task on a compute node before starting any tasks of that
      job on that compute

      node.
    optional: true
    syntax:
      content: 'jobPreparationTask?: JobPreparationTask'
      return:
        type:
          - '@azure/batch.JobPreparationTask'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.jobReleaseTask'
    name: jobReleaseTask
    fullName: jobReleaseTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The Job Release task. A Job Release task cannot be specified without also
      specifying a Job

      Preparation task for the job. The Batch service runs the Job Release task
      on the compute nodes

      that have run the Job Preparation task. The primary purpose of the Job
      Release task is to undo

      changes to compute nodes made by the Job Preparation task. Example
      activities include deleting

      local files, or shutting down services that were started as part of job
      preparation.
    optional: true
    syntax:
      content: 'jobReleaseTask?: JobReleaseTask'
      return:
        type:
          - '@azure/batch.JobReleaseTask'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of name-value pairs associated with the job as metadata. The Batch
      service does not

      assign any meaning to metadata; it is solely for the use of user code.
    optional: true
    syntax:
      content: 'metadata?: MetadataItem[]'
      return:
        type:
          - '@azure/batch.MetadataItem[]'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.networkConfiguration'
    name: networkConfiguration
    fullName: networkConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: The network configuration for the job.
    optional: true
    syntax:
      content: 'networkConfiguration?: JobNetworkConfiguration'
      return:
        type:
          - '@azure/batch.JobNetworkConfiguration'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.onAllTasksComplete'
    name: onAllTasksComplete
    fullName: onAllTasksComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The action the Batch service should take when all tasks in the job are in
      the completed state.

      Note that if a job contains no tasks, then all tasks are considered
      complete. This option is

      therefore most commonly used with a Job Manager task; if you want to use
      automatic job

      termination without a Job Manager, you should initially set
      onAllTasksComplete to noaction and

      update the job properties to set onAllTasksComplete to terminatejob once
      you have finished

      adding tasks. The default is noaction. Possible values include:
      'noAction', 'terminateJob'
    optional: true
    syntax:
      content: 'onAllTasksComplete?: OnAllTasksComplete'
      return:
        type:
          - '@azure/batch.OnAllTasksComplete'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.onTaskFailure'
    name: onTaskFailure
    fullName: onTaskFailure
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The action the Batch service should take when any task in the job fails. A
      task is considered

      to have failed if has a failureInfo. A failureInfo is set if the task
      completes with a

      non-zero exit code after exhausting its retry count, or if there was an
      error starting the

      task, for example due to a resource file download error. The default is
      noaction. Possible

      values include: 'noAction', 'performExitOptionsJobAction'
    optional: true
    syntax:
      content: 'onTaskFailure?: OnTaskFailure'
      return:
        type:
          - '@azure/batch.OnTaskFailure'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.poolInfo'
    name: poolInfo
    fullName: poolInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: The pool on which the Batch service runs the job's tasks.
    syntax:
      content: 'poolInfo: PoolInformation'
      return:
        type:
          - '@azure/batch.PoolInformation'
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.priority'
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The priority of the job. Priority values can range from -1000 to 1000,
      with -1000 being the

      lowest priority and 1000 being the highest priority. The default value is
      0.
    optional: true
    syntax:
      content: 'priority?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/batch'
  - uid: '@azure/batch.JobAddParameter.usesTaskDependencies'
    name: usesTaskDependencies
    fullName: usesTaskDependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether tasks in the job can define dependencies on each other. The
      default is false.
    optional: true
    syntax:
      content: 'usesTaskDependencies?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/batch'
references:
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.JobConstraints'
    name: JobConstraints
    spec.typeScript:
      - name: JobConstraints
        fullName: JobConstraints
        uid: '@azure/batch.JobConstraints'
  - uid: '@azure/batch.JobManagerTask'
    name: JobManagerTask
    spec.typeScript:
      - name: JobManagerTask
        fullName: JobManagerTask
        uid: '@azure/batch.JobManagerTask'
  - uid: '@azure/batch.JobPreparationTask'
    name: JobPreparationTask
    spec.typeScript:
      - name: JobPreparationTask
        fullName: JobPreparationTask
        uid: '@azure/batch.JobPreparationTask'
  - uid: '@azure/batch.JobReleaseTask'
    name: JobReleaseTask
    spec.typeScript:
      - name: JobReleaseTask
        fullName: JobReleaseTask
        uid: '@azure/batch.JobReleaseTask'
  - uid: '@azure/batch.MetadataItem[]'
    name: 'MetadataItem[]'
    spec.typeScript:
      - name: MetadataItem
        fullName: MetadataItem
        uid: '@azure/batch.MetadataItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.JobNetworkConfiguration'
    name: JobNetworkConfiguration
    spec.typeScript:
      - name: JobNetworkConfiguration
        fullName: JobNetworkConfiguration
        uid: '@azure/batch.JobNetworkConfiguration'
  - uid: '@azure/batch.OnAllTasksComplete'
    name: OnAllTasksComplete
    spec.typeScript:
      - name: OnAllTasksComplete
        fullName: OnAllTasksComplete
        uid: '@azure/batch.OnAllTasksComplete'
  - uid: '@azure/batch.OnTaskFailure'
    name: OnTaskFailure
    spec.typeScript:
      - name: OnTaskFailure
        fullName: OnTaskFailure
        uid: '@azure/batch.OnTaskFailure'
  - uid: '@azure/batch.PoolInformation'
    name: PoolInformation
    spec.typeScript:
      - name: PoolInformation
        fullName: PoolInformation
        uid: '@azure/batch.PoolInformation'
