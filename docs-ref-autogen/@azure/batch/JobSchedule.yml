### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.JobSchedule'
    name: JobSchedule
    fullName: JobSchedule
    children:
      - '@azure/batch.JobSchedule.add_2'
      - '@azure/batch.JobSchedule.add'
      - '@azure/batch.JobSchedule.add_1'
      - '@azure/batch.JobSchedule.deleteMethod_2'
      - '@azure/batch.JobSchedule.deleteMethod'
      - '@azure/batch.JobSchedule.deleteMethod_1'
      - '@azure/batch.JobSchedule.disable_2'
      - '@azure/batch.JobSchedule.disable'
      - '@azure/batch.JobSchedule.disable_1'
      - '@azure/batch.JobSchedule.enable_2'
      - '@azure/batch.JobSchedule.enable'
      - '@azure/batch.JobSchedule.enable_1'
      - '@azure/batch.JobSchedule.exists_2'
      - '@azure/batch.JobSchedule.exists'
      - '@azure/batch.JobSchedule.exists_1'
      - '@azure/batch.JobSchedule.get_2'
      - '@azure/batch.JobSchedule.get'
      - '@azure/batch.JobSchedule.get_1'
      - '@azure/batch.JobSchedule.constructor'
      - '@azure/batch.JobSchedule.list_2'
      - '@azure/batch.JobSchedule.list'
      - '@azure/batch.JobSchedule.list_1'
      - '@azure/batch.JobSchedule.listNext_2'
      - '@azure/batch.JobSchedule.listNext'
      - '@azure/batch.JobSchedule.listNext_1'
      - '@azure/batch.JobSchedule.patch_2'
      - '@azure/batch.JobSchedule.patch'
      - '@azure/batch.JobSchedule.patch_1'
      - '@azure/batch.JobSchedule.terminate_2'
      - '@azure/batch.JobSchedule.terminate'
      - '@azure/batch.JobSchedule.terminate_1'
      - '@azure/batch.JobSchedule.update_2'
      - '@azure/batch.JobSchedule.update'
      - '@azure/batch.JobSchedule.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a JobSchedule.
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.add_2'
    name: >-
      add(JobScheduleAddParameter, JobScheduleAddOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, options:
        JobScheduleAddOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: cloudJobSchedule
          type:
            - '@azure/batch.JobScheduleAddParameter'
          description: The job schedule to be added.
        - id: options
          type:
            - '@azure/batch.JobScheduleAddOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.add'
    name: 'add(JobScheduleAddParameter, Models.JobScheduleAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, options?:
        Models.JobScheduleAddOptionalParams)
      parameters:
        - id: cloudJobSchedule
          type:
            - '@azure/batch.JobScheduleAddParameter'
          description: The job schedule to be added.
        - id: options
          type:
            - Models.JobScheduleAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleAddResponse>
        description: Promise<Models.JobScheduleAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.add_1'
    name: 'add(JobScheduleAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, callback:
        ServiceCallback<void>)
      parameters:
        - id: cloudJobSchedule
          type:
            - '@azure/batch.JobScheduleAddParameter'
          description: The job schedule to be added.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.deleteMethod_2'
    name: >-
      deleteMethod(string, JobScheduleDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, options:
        JobScheduleDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - '@azure/batch.JobScheduleDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.deleteMethod'
    name: 'deleteMethod(string, Models.JobScheduleDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When you delete a job schedule, this also deletes all jobs and tasks under
      that schedule. When

      tasks are deleted, all the files in their working directories on the
      compute nodes are also

      deleted (the retention period is ignored). The job schedule statistics are
      no longer accessible

      once the job schedule is deleted, though they are still counted towards
      account lifetime

      statistics.
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, options?:
        Models.JobScheduleDeleteMethodOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - Models.JobScheduleDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleDeleteResponse>
        description: Promise<Models.JobScheduleDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.disable_2'
    name: 'disable(string, JobScheduleDisableOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function disable(jobScheduleId: string, options:
        JobScheduleDisableOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - '@azure/batch.JobScheduleDisableOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.disable'
    name: 'disable(string, Models.JobScheduleDisableOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: No new jobs will be created until the job schedule is enabled again.
    syntax:
      content: >-
        function disable(jobScheduleId: string, options?:
        Models.JobScheduleDisableOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - Models.JobScheduleDisableOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleDisableResponse>
        description: Promise<Models.JobScheduleDisableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.disable_1'
    name: 'disable(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disable(jobScheduleId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.enable_2'
    name: 'enable(string, JobScheduleEnableOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enable(jobScheduleId: string, options:
        JobScheduleEnableOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - '@azure/batch.JobScheduleEnableOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.enable'
    name: 'enable(string, Models.JobScheduleEnableOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enable(jobScheduleId: string, options?:
        Models.JobScheduleEnableOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - Models.JobScheduleEnableOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleEnableResponse>
        description: Promise<Models.JobScheduleEnableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.enable_1'
    name: 'enable(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enable(jobScheduleId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.exists_2'
    name: 'exists(string, JobScheduleExistsOptionalParams, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exists(jobScheduleId: string, options:
        JobScheduleExistsOptionalParams, callback: ServiceCallback<boolean>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule which you want to check.
        - id: options
          type:
            - '@azure/batch.JobScheduleExistsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.exists'
    name: 'exists(string, Models.JobScheduleExistsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exists(jobScheduleId: string, options?:
        Models.JobScheduleExistsOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule which you want to check.
        - id: options
          type:
            - Models.JobScheduleExistsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleExistsResponse>
        description: Promise<Models.JobScheduleExistsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.exists_1'
    name: 'exists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function exists(jobScheduleId: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule which you want to check.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.get_2'
    name: >-
      get(string, JobScheduleGetOptionalParams,
      ServiceCallback<CloudJobSchedule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(jobScheduleId: string, options:
        JobScheduleGetOptionalParams, callback:
        ServiceCallback<CloudJobSchedule>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - '@azure/batch.JobScheduleGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobSchedule>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.get'
    name: 'get(string, Models.JobScheduleGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about the specified job schedule.
    syntax:
      content: >-
        function get(jobScheduleId: string, options?:
        Models.JobScheduleGetOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - Models.JobScheduleGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleGetResponse>
        description: Promise<Models.JobScheduleGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.get_1'
    name: 'get(string, ServiceCallback<CloudJobSchedule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(jobScheduleId: string, callback:
        ServiceCallback<CloudJobSchedule>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobSchedule>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.constructor'
    name: JobSchedule(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a JobSchedule.
    syntax:
      content: 'new JobSchedule(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.list_2'
    name: >-
      list(JobScheduleListOptionalParams,
      ServiceCallback<CloudJobScheduleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: JobScheduleListOptionalParams, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: options
          type:
            - '@azure/batch.JobScheduleListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobScheduleListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.list'
    name: list(Models.JobScheduleListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Models.JobScheduleListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.JobScheduleListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleListResponse>
        description: Promise<Models.JobScheduleListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.list_1'
    name: list(ServiceCallback<CloudJobScheduleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<CloudJobScheduleListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobScheduleListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.listNext_2'
    name: >-
      listNext(string, JobScheduleListNextOptionalParams,
      ServiceCallback<CloudJobScheduleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        JobScheduleListNextOptionalParams, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - '@azure/batch.JobScheduleListNextOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobScheduleListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.listNext'
    name: 'listNext(string, Models.JobScheduleListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.JobScheduleListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - Models.JobScheduleListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleListResponse>
        description: Promise<Models.JobScheduleListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.listNext_1'
    name: 'listNext(string, ServiceCallback<CloudJobScheduleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobScheduleListResult>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.patch_2'
    name: >-
      patch(string, JobSchedulePatchParameter, JobSchedulePatchOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, options: JobSchedulePatchOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - '@azure/batch.JobSchedulePatchParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.JobSchedulePatchOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.patch'
    name: >-
      patch(string, JobSchedulePatchParameter,
      Models.JobSchedulePatchOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This replaces only the job schedule properties specified in the request.
      For example, if the

      schedule property is not specified with this request, then the Batch
      service will keep the

      existing schedule. Changes to a job schedule only impact jobs created by
      the schedule after the

      update has taken place; currently running jobs are unaffected.
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, options?:
        Models.JobSchedulePatchOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - '@azure/batch.JobSchedulePatchParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.JobSchedulePatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobSchedulePatchResponse>
        description: Promise<Models.JobSchedulePatchResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.patch_1'
    name: 'patch(string, JobSchedulePatchParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - '@azure/batch.JobSchedulePatchParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.terminate_2'
    name: >-
      terminate(string, JobScheduleTerminateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function terminate(jobScheduleId: string, options:
        JobScheduleTerminateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - '@azure/batch.JobScheduleTerminateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.terminate'
    name: 'terminate(string, Models.JobScheduleTerminateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function terminate(jobScheduleId: string, options?:
        Models.JobScheduleTerminateOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - Models.JobScheduleTerminateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleTerminateResponse>
        description: Promise<Models.JobScheduleTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.terminate_1'
    name: 'terminate(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function terminate(jobScheduleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.update_2'
    name: >-
      update(string, JobScheduleUpdateParameter,
      JobScheduleUpdateOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, options: JobScheduleUpdateOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - '@azure/batch.JobScheduleUpdateParameter'
          description: The parameters for the request.
        - id: options
          type:
            - '@azure/batch.JobScheduleUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.update'
    name: >-
      update(string, JobScheduleUpdateParameter,
      Models.JobScheduleUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This fully replaces all the updatable properties of the job schedule. For
      example, if the

      schedule property is not specified with this request, then the Batch
      service will remove the

      existing schedule. Changes to a job schedule only impact jobs created by
      the schedule after the

      update has taken place; currently running jobs are unaffected.
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, options?:
        Models.JobScheduleUpdateOptionalParams)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - '@azure/batch.JobScheduleUpdateParameter'
          description: The parameters for the request.
        - id: options
          type:
            - Models.JobScheduleUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobScheduleUpdateResponse>
        description: Promise<Models.JobScheduleUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.JobSchedule.update_1'
    name: 'update(string, JobScheduleUpdateParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - '@azure/batch.JobScheduleUpdateParameter'
          description: The parameters for the request.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.JobScheduleAddParameter'
    name: JobScheduleAddParameter
    spec.typeScript:
      - name: JobScheduleAddParameter
        fullName: JobScheduleAddParameter
        uid: '@azure/batch.JobScheduleAddParameter'
  - uid: '@azure/batch.JobScheduleAddOptionalParams'
    name: JobScheduleAddOptionalParams
    spec.typeScript:
      - name: JobScheduleAddOptionalParams
        fullName: JobScheduleAddOptionalParams
        uid: '@azure/batch.JobScheduleAddOptionalParams'
  - uid: '@azure/batch.JobScheduleDeleteMethodOptionalParams'
    name: JobScheduleDeleteMethodOptionalParams
    spec.typeScript:
      - name: JobScheduleDeleteMethodOptionalParams
        fullName: JobScheduleDeleteMethodOptionalParams
        uid: '@azure/batch.JobScheduleDeleteMethodOptionalParams'
  - uid: '@azure/batch.JobScheduleDisableOptionalParams'
    name: JobScheduleDisableOptionalParams
    spec.typeScript:
      - name: JobScheduleDisableOptionalParams
        fullName: JobScheduleDisableOptionalParams
        uid: '@azure/batch.JobScheduleDisableOptionalParams'
  - uid: '@azure/batch.JobScheduleEnableOptionalParams'
    name: JobScheduleEnableOptionalParams
    spec.typeScript:
      - name: JobScheduleEnableOptionalParams
        fullName: JobScheduleEnableOptionalParams
        uid: '@azure/batch.JobScheduleEnableOptionalParams'
  - uid: '@azure/batch.JobScheduleExistsOptionalParams'
    name: JobScheduleExistsOptionalParams
    spec.typeScript:
      - name: JobScheduleExistsOptionalParams
        fullName: JobScheduleExistsOptionalParams
        uid: '@azure/batch.JobScheduleExistsOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudJobSchedule>
    name: CloudJobSchedule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudJobSchedule
        fullName: CloudJobSchedule
        uid: '@azure/batch.CloudJobSchedule'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobScheduleGetOptionalParams'
    name: JobScheduleGetOptionalParams
    spec.typeScript:
      - name: JobScheduleGetOptionalParams
        fullName: JobScheduleGetOptionalParams
        uid: '@azure/batch.JobScheduleGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudJobScheduleListResult>
    name: CloudJobScheduleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudJobScheduleListResult
        fullName: CloudJobScheduleListResult
        uid: '@azure/batch.CloudJobScheduleListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobScheduleListOptionalParams'
    name: JobScheduleListOptionalParams
    spec.typeScript:
      - name: JobScheduleListOptionalParams
        fullName: JobScheduleListOptionalParams
        uid: '@azure/batch.JobScheduleListOptionalParams'
  - uid: '@azure/batch.JobScheduleListNextOptionalParams'
    name: JobScheduleListNextOptionalParams
    spec.typeScript:
      - name: JobScheduleListNextOptionalParams
        fullName: JobScheduleListNextOptionalParams
        uid: '@azure/batch.JobScheduleListNextOptionalParams'
  - uid: '@azure/batch.JobSchedulePatchParameter'
    name: JobSchedulePatchParameter
    spec.typeScript:
      - name: JobSchedulePatchParameter
        fullName: JobSchedulePatchParameter
        uid: '@azure/batch.JobSchedulePatchParameter'
  - uid: '@azure/batch.JobSchedulePatchOptionalParams'
    name: JobSchedulePatchOptionalParams
    spec.typeScript:
      - name: JobSchedulePatchOptionalParams
        fullName: JobSchedulePatchOptionalParams
        uid: '@azure/batch.JobSchedulePatchOptionalParams'
  - uid: '@azure/batch.JobScheduleTerminateOptionalParams'
    name: JobScheduleTerminateOptionalParams
    spec.typeScript:
      - name: JobScheduleTerminateOptionalParams
        fullName: JobScheduleTerminateOptionalParams
        uid: '@azure/batch.JobScheduleTerminateOptionalParams'
  - uid: '@azure/batch.JobScheduleUpdateParameter'
    name: JobScheduleUpdateParameter
    spec.typeScript:
      - name: JobScheduleUpdateParameter
        fullName: JobScheduleUpdateParameter
        uid: '@azure/batch.JobScheduleUpdateParameter'
  - uid: '@azure/batch.JobScheduleUpdateOptionalParams'
    name: JobScheduleUpdateOptionalParams
    spec.typeScript:
      - name: JobScheduleUpdateOptionalParams
        fullName: JobScheduleUpdateOptionalParams
        uid: '@azure/batch.JobScheduleUpdateOptionalParams'
