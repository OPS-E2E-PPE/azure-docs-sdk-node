### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-billing.InvoicesListResult'
    name: InvoicesListResult
    fullName: InvoicesListResult
    children:
      - '@azure/arm-billing.InvoicesListResult.Array'
      - '@azure/arm-billing.InvoicesListResult.concat'
      - '@azure/arm-billing.InvoicesListResult.concat_1'
      - '@azure/arm-billing.InvoicesListResult.copyWithin'
      - '@azure/arm-billing.InvoicesListResult.entries'
      - '@azure/arm-billing.InvoicesListResult.every'
      - '@azure/arm-billing.InvoicesListResult.fill'
      - '@azure/arm-billing.InvoicesListResult.filter'
      - '@azure/arm-billing.InvoicesListResult.filter_1'
      - '@azure/arm-billing.InvoicesListResult.find'
      - '@azure/arm-billing.InvoicesListResult.find_1'
      - '@azure/arm-billing.InvoicesListResult.findIndex'
      - '@azure/arm-billing.InvoicesListResult.forEach'
      - '@azure/arm-billing.InvoicesListResult.includes'
      - '@azure/arm-billing.InvoicesListResult.indexOf'
      - '@azure/arm-billing.InvoicesListResult.join'
      - '@azure/arm-billing.InvoicesListResult.keys'
      - '@azure/arm-billing.InvoicesListResult.lastIndexOf'
      - '@azure/arm-billing.InvoicesListResult.length'
      - '@azure/arm-billing.InvoicesListResult.map'
      - '@azure/arm-billing.InvoicesListResult.nextLink'
      - '@azure/arm-billing.InvoicesListResult.pop'
      - '@azure/arm-billing.InvoicesListResult.push'
      - '@azure/arm-billing.InvoicesListResult.reduce'
      - '@azure/arm-billing.InvoicesListResult.reduce_1'
      - '@azure/arm-billing.InvoicesListResult.reduce_2'
      - '@azure/arm-billing.InvoicesListResult.reduceRight'
      - '@azure/arm-billing.InvoicesListResult.reduceRight_1'
      - '@azure/arm-billing.InvoicesListResult.reduceRight_2'
      - '@azure/arm-billing.InvoicesListResult.reverse'
      - '@azure/arm-billing.InvoicesListResult.shift'
      - '@azure/arm-billing.InvoicesListResult.slice'
      - '@azure/arm-billing.InvoicesListResult.some'
      - '@azure/arm-billing.InvoicesListResult.sort'
      - '@azure/arm-billing.InvoicesListResult.splice_1'
      - '@azure/arm-billing.InvoicesListResult.splice'
      - '@azure/arm-billing.InvoicesListResult.toLocaleString'
      - '@azure/arm-billing.InvoicesListResult.toString'
      - '@azure/arm-billing.InvoicesListResult.unshift'
      - '@azure/arm-billing.InvoicesListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-billing.Invoice>
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.concat'
    name: 'concat(ConcatArray<Invoice>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Combines two or more arrays.
    syntax:
      content: 'function concat(items: ConcatArray<Invoice>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-billing.Invoice>[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Combines two or more arrays.
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    syntax:
      content: >-
        function copyWithin(target: number, start: number, end?: undefined |
        number)
      parameters:
        - id: target
          type:
            - number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type:
            - number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type:
            - undefined | number
          description: >
            If not specified, length of the this object is used as its default
            value.
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Returns an iterable of key, value pairs for every entry in the array'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.every'
    name: 'every((value: Invoice, index: number, array: Invoice[]) => unknown, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether all the members of an array satisfy the specified test.
    syntax:
      content: >-
        function every(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => unknown'
          description: >-
            A function that accepts up to three arguments. The every method
            calls the callbackfn function for each element in array1 until the
            callbackfn returns false, or until the end of the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.fill'
    name: 'fill(Invoice, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the this object after filling the section identified by start and
      end with value
    syntax:
      content: >-
        function fill(value: Invoice, start?: undefined | number, end?:
        undefined | number)
      parameters:
        - id: value
          type:
            - '@azure/arm-billing.Invoice'
          description: value to fill array section with
        - id: start
          type:
            - undefined | number
          description: >-
            index to start filling the array at. If start is negative, it is
            treated as

            length+start where length is the length of the array.
          optional: true
        - id: end
          type:
            - undefined | number
          description: >
            index to stop filling the array at. If end is negative, it is
            treated as

            length+end.
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.filter'
    name: 'filter((value: Invoice, index: number, array: Invoice[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    syntax:
      content: >-
        function filter<S>(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => boolean, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => boolean'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - 'S[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.filter_1'
    name: 'filter((value: Invoice, index: number, array: Invoice[]) => unknown, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    syntax:
      content: >-
        function filter(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => unknown'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.find'
    name: >-
      find((this: void, value: Invoice, index: number, obj: Invoice[]) =>
      boolean, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    syntax:
      content: >-
        function find<S>(predicate: (this: void, value: Invoice, index: number,
        obj: Invoice[]) => boolean, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - >-
              (this: void, value: Invoice, index: number, obj: Invoice[]) =>
              boolean
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - S | undefined
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.find_1'
    name: 'find((value: Invoice, index: number, obj: Invoice[]) => unknown, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function find(predicate: (value: Invoice, index: number, obj: Invoice[])
        => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - '(value: Invoice, index: number, obj: Invoice[]) => unknown'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-billing.Invoice | undefined'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.findIndex'
    name: 'findIndex((value: Invoice, index: number, obj: Invoice[]) => unknown, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    syntax:
      content: >-
        function findIndex(predicate: (value: Invoice, index: number, obj:
        Invoice[]) => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - '(value: Invoice, index: number, obj: Invoice[]) => unknown'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.forEach'
    name: 'forEach((value: Invoice, index: number, array: Invoice[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs the specified action for each element in an array.
    syntax:
      content: >-
        function forEach(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => void'
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.includes'
    name: 'includes(Invoice, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether an array includes a certain element, returning true or
      false as appropriate.
    syntax:
      content: >-
        function includes(searchElement: Invoice, fromIndex?: undefined |
        number)
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-billing.Invoice'
          description: The element to search for.
        - id: fromIndex
          type:
            - undefined | number
          description: >
            The position in this array at which to begin searching for
            searchElement.
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.indexOf'
    name: 'indexOf(Invoice, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the index of the first occurrence of a value in an array.
    syntax:
      content: 'function indexOf(searchElement: Invoice, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-billing.Invoice'
          description: The value to locate in the array.
        - id: fromIndex
          type:
            - undefined | number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: >
            A string used to separate one element of an array from the next in
            the resulting String. If omitted, the array elements are separated
            with a comma.
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns an iterable of keys in the array
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.lastIndexOf'
    name: 'lastIndexOf(Invoice, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the index of the last occurrence of a specified value in an array.
    syntax:
      content: >-
        function lastIndexOf(searchElement: Invoice, fromIndex?: undefined |
        number)
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-billing.Invoice'
          description: The value to locate in the array.
        - id: fromIndex
          type:
            - undefined | number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at the last index in the array.
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest element defined in an array.
    syntax:
      content: 'length: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.map'
    name: 'map((value: Invoice, index: number, array: Invoice[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    syntax:
      content: >-
        function map<U>(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => U, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => U'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - 'U[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the last element from an array and returns it.
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-billing.Invoice | undefined'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.push'
    name: 'push(Invoice[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Appends new elements to an array, and returns the new length of the array.'
    syntax:
      content: 'function push(items: Invoice[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-billing.Invoice[]'
          description: |
            New elements of the Array.
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduce'
    name: >-
      reduce((previousValue: Invoice, currentValue: Invoice, currentIndex:
      number, array: Invoice[]) => Invoice)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: Invoice, currentValue:
        Invoice, currentIndex: number, array: Invoice[]) => Invoice)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: Invoice, currentValue: Invoice, currentIndex:
              number, array: Invoice[]) => Invoice
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type:
          - '@azure/arm-billing.Invoice'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduce_1'
    name: >-
      reduce((previousValue: Invoice, currentValue: Invoice, currentIndex:
      number, array: Invoice[]) => Invoice, Invoice)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: Invoice, currentValue:
        Invoice, currentIndex: number, array: Invoice[]) => Invoice,
        initialValue: Invoice)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: Invoice, currentValue: Invoice, currentIndex:
              number, array: Invoice[]) => Invoice
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-billing.Invoice'
          description: ''
      return:
        type:
          - '@azure/arm-billing.Invoice'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduce_2'
    name: >-
      reduce((previousValue: U, currentValue: Invoice, currentIndex: number,
      array: Invoice[]) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue: Invoice,
        currentIndex: number, array: Invoice[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: Invoice, currentIndex: number,
              array: Invoice[]) => U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type:
          - U
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduceRight'
    name: >-
      reduceRight((previousValue: Invoice, currentValue: Invoice, currentIndex:
      number, array: Invoice[]) => Invoice)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: Invoice, currentValue:
        Invoice, currentIndex: number, array: Invoice[]) => Invoice)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: Invoice, currentValue: Invoice, currentIndex:
              number, array: Invoice[]) => Invoice
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type:
          - '@azure/arm-billing.Invoice'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduceRight_1'
    name: >-
      reduceRight((previousValue: Invoice, currentValue: Invoice, currentIndex:
      number, array: Invoice[]) => Invoice, Invoice)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: Invoice, currentValue:
        Invoice, currentIndex: number, array: Invoice[]) => Invoice,
        initialValue: Invoice)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: Invoice, currentValue: Invoice, currentIndex:
              number, array: Invoice[]) => Invoice
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-billing.Invoice'
          description: ''
      return:
        type:
          - '@azure/arm-billing.Invoice'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reduceRight_2'
    name: >-
      reduceRight((previousValue: U, currentValue: Invoice, currentIndex:
      number, array: Invoice[]) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        Invoice, currentIndex: number, array: Invoice[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: Invoice, currentIndex: number,
              array: Invoice[]) => U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type:
          - U
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: Reverses the elements in an Array.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the first element from an array and returns it.
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-billing.Invoice | undefined'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a section of an array.
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: The beginning of the specified portion of the array.
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            The end of the specified portion of the array.
          optional: true
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.some'
    name: 'some((value: Invoice, index: number, array: Invoice[]) => unknown, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    syntax:
      content: >-
        function some(callbackfn: (value: Invoice, index: number, array:
        Invoice[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: Invoice, index: number, array: Invoice[]) => unknown'
          description: >-
            A function that accepts up to three arguments. The some method calls
            the callbackfn function for each element in array1 until the
            callbackfn returns true, or until the end of the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.sort'
    name: 'sort(undefined | (a: Invoice, b: Invoice) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sorts an array.
    syntax:
      content: >-
        function sort(compareFn?: undefined | (a: Invoice, b: Invoice) =>
        number)
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: Invoice, b: Invoice) => number'
          description: >
            The name of the function used to determine the order of the
            elements. If omitted, the elements are sorted in ascending, ASCII
            character order.
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.splice_1'
    name: 'splice(number, number, Invoice[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Invoice[])'
      parameters:
        - id: start
          type:
            - number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type:
            - number
          description: The number of elements to remove.
        - id: items
          type:
            - '@azure/arm-billing.Invoice[]'
          description: |
            Elements to insert into the array in place of the deleted elements.
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type:
            - undefined | number
          description: |
            The number of elements to remove.
          optional: true
      return:
        type:
          - '@azure/arm-billing.Invoice[]'
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocalString methods.
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a string representation of an array.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.unshift'
    name: 'unshift(Invoice[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserts new elements at the start of an array.
    syntax:
      content: 'function unshift(items: Invoice[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-billing.Invoice[]'
          description: |
            Elements to insert at the start of the Array.
      return:
        type:
          - number
        description: ''
    package: '@azure/arm-billing'
  - uid: '@azure/arm-billing.InvoicesListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns an iterable of values in the array
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-billing.Invoice>
        description: ''
    package: '@azure/arm-billing'
references:
  - uid: Array<@azure/arm-billing.Invoice>
    name: Invoice>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-billing.Invoice>[]'
    name: 'Invoice>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-billing.Invoice[]'
    name: 'Invoice[]'
    spec.typeScript:
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-billing.Invoice'
    name: Invoice
    spec.typeScript:
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
  - uid: '@azure/arm-billing.Invoice | undefined'
    name: Invoice | undefined
    spec.typeScript:
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-billing.Invoice>
    name: Invoice>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: Invoice
        fullName: Invoice
        uid: '@azure/arm-billing.Invoice'
      - name: '>'
        fullName: '>'
