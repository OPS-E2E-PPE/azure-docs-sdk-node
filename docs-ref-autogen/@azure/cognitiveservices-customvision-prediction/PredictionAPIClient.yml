### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest
      - >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage
    name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
        description: Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2
    name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1
    name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl
    name: >-
      classifyImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
        description: Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2
    name: >-
      classifyImageUrl(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1
    name: >-
      classifyImageUrl(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore
    name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type:
            - >-
              Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
        description: Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2
    name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1
    name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore
    name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
        description: Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2
    name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1
    name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage
    name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageResponse>
        description: Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2
    name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1
    name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl
    name: >-
      detectImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
        description: Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2
    name: >-
      detectImageUrl(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore
    name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
        description: Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2
    name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1
    name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore
    name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
        description: Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2
    name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1
    name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type:
            - string
          description: The project id.
        - id: publishedName
          type:
            - string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 0MB.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            The callback
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor
    name: 'PredictionAPIClient(string, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the PredictionAPIClient class.
    syntax:
      content: >-
        new PredictionAPIClient(apiKey: string, endpoint: string, options?:
        msRest.ServiceClientOptions)
      parameters:
        - id: apiKey
          type:
            - string
          description: API key.
        - id: endpoint
          type:
            - string
          description: Supported Cognitive Services endpoints.
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/cognitiveservices-customvision-prediction'
references:
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext
    name: PredictionAPIClientContext
    spec.typeScript:
      - name: PredictionAPIClientContext
        fullName: PredictionAPIClientContext
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: '@azure/cognitiveservices-customvision-prediction.ImagePrediction'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams
    name: PredictionAPIClientClassifyImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageOptionalParams
        fullName: PredictionAPIClientClassifyImageOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams
  - uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams
    name: PredictionAPIClientClassifyImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams
    name: PredictionAPIClientDetectImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageOptionalParams
        fullName: PredictionAPIClientDetectImageOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams
    name: PredictionAPIClientDetectImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlOptionalParams
        fullName: PredictionAPIClientDetectImageUrlOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
  - uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams
    name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        uid: >-
          @azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams
