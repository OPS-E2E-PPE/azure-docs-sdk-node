### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-notificationhubs.Namespaces'
    name: Namespaces
    fullName: Namespaces
    children:
      - '@azure/arm-notificationhubs.Namespaces.beginDeleteMethod'
      - '@azure/arm-notificationhubs.Namespaces.checkAvailability'
      - '@azure/arm-notificationhubs.Namespaces.checkAvailability_2'
      - '@azure/arm-notificationhubs.Namespaces.checkAvailability_1'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdate'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdate_2'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdate_1'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_2'
      - '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_1'
      - '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule'
      - '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_2'
      - '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_1'
      - '@azure/arm-notificationhubs.Namespaces.deleteMethod'
      - '@azure/arm-notificationhubs.Namespaces.get'
      - '@azure/arm-notificationhubs.Namespaces.get_2'
      - '@azure/arm-notificationhubs.Namespaces.get_1'
      - '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule'
      - '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_2'
      - '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_1'
      - '@azure/arm-notificationhubs.Namespaces.list'
      - '@azure/arm-notificationhubs.Namespaces.list_2'
      - '@azure/arm-notificationhubs.Namespaces.list_1'
      - '@azure/arm-notificationhubs.Namespaces.listAll'
      - '@azure/arm-notificationhubs.Namespaces.listAll_2'
      - '@azure/arm-notificationhubs.Namespaces.listAll_1'
      - '@azure/arm-notificationhubs.Namespaces.listAllNext'
      - '@azure/arm-notificationhubs.Namespaces.listAllNext_2'
      - '@azure/arm-notificationhubs.Namespaces.listAllNext_1'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_2'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_1'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_2'
      - '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_1'
      - '@azure/arm-notificationhubs.Namespaces.listKeys'
      - '@azure/arm-notificationhubs.Namespaces.listKeys_2'
      - '@azure/arm-notificationhubs.Namespaces.listKeys_1'
      - '@azure/arm-notificationhubs.Namespaces.listNext'
      - '@azure/arm-notificationhubs.Namespaces.listNext_2'
      - '@azure/arm-notificationhubs.Namespaces.listNext_1'
      - '@azure/arm-notificationhubs.Namespaces.constructor'
      - '@azure/arm-notificationhubs.Namespaces.patch'
      - '@azure/arm-notificationhubs.Namespaces.patch_2'
      - '@azure/arm-notificationhubs.Namespaces.patch_1'
      - '@azure/arm-notificationhubs.Namespaces.regenerateKeys'
      - '@azure/arm-notificationhubs.Namespaces.regenerateKeys_2'
      - '@azure/arm-notificationhubs.Namespaces.regenerateKeys_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Namespaces.
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      notificationHubs under

      the namespace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability'
    name: 'checkAvailability(CheckAvailabilityParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the availability of the given service namespace across all Azure
      subscriptions. This is

      useful because the domain name is created based on the service namespace
      name.
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.CheckAvailabilityParameters'
          description: The namespace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCheckAvailabilityResponse>
        description: Promise<Models.NamespacesCheckAvailabilityResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability_2'
    name: >-
      checkAvailability(CheckAvailabilityParameters, RequestOptionsBase,
      ServiceCallback<CheckAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.CheckAvailabilityParameters'
          description: The namespace name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.CheckAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability_1'
    name: >-
      checkAvailability(CheckAvailabilityParameters,
      ServiceCallback<CheckAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        callback: ServiceCallback<CheckAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.CheckAvailabilityParameters'
          description: The namespace name.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.CheckAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate'
    name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates/Updates a service namespace. Once created, this namespace's
      resource manifest is

      immutable. This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters'
          description: Parameters supplied to create a Namespace Resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCreateOrUpdateResponse>
        description: Promise<Models.NamespacesCreateOrUpdateResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      RequestOptionsBase, ServiceCallback<NamespaceResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters'
          description: Parameters supplied to create a Namespace Resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      ServiceCallback<NamespaceResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters'
          description: Parameters supplied to create a Namespace Resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an authorization rule for a namespace
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Aauthorization Rule Name.
        - id: parameters
          type:
            - >-
              @azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters
          description: The shared access authorization rule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
        description: Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_2'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, options:
        RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Aauthorization Rule Name.
        - id: parameters
          type:
            - >-
              @azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters
          description: The shared access authorization rule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_1'
    name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Aauthorization Rule Name.
        - id: parameters
          type:
            - >-
              @azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters
          description: The shared access authorization rule.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule'
    name: 'deleteAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a namespace authorization rule
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization Rule Name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_2'
    name: >-
      deleteAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization Rule Name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_1'
    name: 'deleteAuthorizationRule(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization Rule Name.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      notificationHubs under

      the namespace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the description for the specified namespace.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetResponse>
        description: Promise<Models.NamespacesGetResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<NamespaceResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.get_1'
    name: 'get(string, string, ServiceCallback<NamespaceResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule'
    name: 'getAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an authorization rule for a namespace by name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: Authorization rule name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesGetAuthorizationRuleResponse>
        description: Promise<Models.NamespacesGetAuthorizationRuleResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_2'
    name: >-
      getAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options: RequestOptionsBase,
        callback: ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: Authorization rule name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_1'
    name: >-
      getAuthorizationRule(string, string, string,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: Authorization rule name.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the available namespaces within a resourceGroup.
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListResponse>
        description: Promise<Models.NamespacesListResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.list_2'
    name: 'list(string, RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.list_1'
    name: 'list(string, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAll'
    name: listAll(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the available namespaces within the subscription irrespective of
      the resourceGroups.
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAllResponse>
        description: Promise<Models.NamespacesListAllResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAll_2'
    name: 'listAll(RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAll_1'
    name: listAll(ServiceCallback<NamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAll(callback: ServiceCallback<NamespaceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAllNext'
    name: 'listAllNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the available namespaces within the subscription irrespective of
      the resourceGroups.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAllNextResponse>
        description: Promise<Models.NamespacesListAllNextResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAllNext_2'
    name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<NamespaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAllNext_1'
    name: 'listAllNext(string, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules'
    name: 'listAuthorizationRules(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAuthorizationRulesResponse>
        description: Promise<Models.NamespacesListAuthorizationRulesResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_2'
    name: >-
      listAuthorizationRules(string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_1'
    name: >-
      listAuthorizationRules(string, string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext'
    name: 'listAuthorizationRulesNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListAuthorizationRulesNextResponse>
        description: Promise<Models.NamespacesListAuthorizationRulesNextResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_2'
    name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_1'
    name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listKeys'
    name: 'listKeys(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Primary and Secondary ConnectionStrings to the namespace
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListKeysResponse>
        description: Promise<Models.NamespacesListKeysResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listKeys_2'
    name: >-
      listKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listKeys_1'
    name: >-
      listKeys(string, string, string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the available namespaces within a resourceGroup.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesListNextResponse>
        description: Promise<Models.NamespacesListNextResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.listNext_1'
    name: 'listNext(string, ServiceCallback<NamespaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.constructor'
    name: Namespaces(NotificationHubsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Namespaces.
    syntax:
      content: 'new Namespaces(client: NotificationHubsManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-notificationhubs.NotificationHubsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.patch'
    name: 'patch(string, string, NamespacePatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Patches the existing namespace
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespacePatchParameters'
          description: Parameters supplied to patch a Namespace Resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesPatchResponse>
        description: Promise<Models.NamespacesPatchResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.patch_2'
    name: >-
      patch(string, string, NamespacePatchParameters, RequestOptionsBase,
      ServiceCallback<NamespaceResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespacePatchParameters'
          description: Parameters supplied to patch a Namespace Resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.patch_1'
    name: >-
      patch(string, string, NamespacePatchParameters,
      ServiceCallback<NamespaceResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.NamespacePatchParameters'
          description: Parameters supplied to patch a Namespace Resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys'
    name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.PolicykeyResource'
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NamespacesRegenerateKeysResponse>
        description: Promise<Models.NamespacesRegenerateKeysResponse>
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys_2'
    name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      RequestOptionsBase, ServiceCallback<ResourceListKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceListKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.PolicykeyResource'
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.ResourceListKeys>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
  - uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys_1'
    name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      ServiceCallback<ResourceListKeys>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        callback: ServiceCallback<ResourceListKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: authorizationRuleName
          type:
            - string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type:
            - '@azure/arm-notificationhubs.PolicykeyResource'
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-notificationhubs.ResourceListKeys>
          description: |
            The callback
    package: '@azure/arm-notificationhubs'
references:
  - uid: '@azure/arm-notificationhubs.NotificationHubsManagementClientContext'
    name: NotificationHubsManagementClientContext
    spec.typeScript:
      - name: NotificationHubsManagementClientContext
        fullName: NotificationHubsManagementClientContext
        uid: '@azure/arm-notificationhubs.NotificationHubsManagementClientContext'
  - uid: '@azure/arm-notificationhubs.CheckAvailabilityParameters'
    name: CheckAvailabilityParameters
    spec.typeScript:
      - name: CheckAvailabilityParameters
        fullName: CheckAvailabilityParameters
        uid: '@azure/arm-notificationhubs.CheckAvailabilityParameters'
  - uid: ServiceCallback<@azure/arm-notificationhubs.CheckAvailabilityResult>
    name: CheckAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckAvailabilityResult
        fullName: CheckAvailabilityResult
        uid: '@azure/arm-notificationhubs.CheckAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters'
    name: NamespaceCreateOrUpdateParameters
    spec.typeScript:
      - name: NamespaceCreateOrUpdateParameters
        fullName: NamespaceCreateOrUpdateParameters
        uid: '@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters'
  - uid: ServiceCallback<@azure/arm-notificationhubs.NamespaceResource>
    name: NamespaceResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NamespaceResource
        fullName: NamespaceResource
        uid: '@azure/arm-notificationhubs.NamespaceResource'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters
    name: SharedAccessAuthorizationRuleCreateOrUpdateParameters
    spec.typeScript:
      - name: SharedAccessAuthorizationRuleCreateOrUpdateParameters
        fullName: SharedAccessAuthorizationRuleCreateOrUpdateParameters
        uid: >-
          @azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters
  - uid: >-
      ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource>
    name: SharedAccessAuthorizationRuleResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SharedAccessAuthorizationRuleResource
        fullName: SharedAccessAuthorizationRuleResource
        uid: '@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-notificationhubs.NamespaceListResult>
    name: NamespaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NamespaceListResult
        fullName: NamespaceListResult
        uid: '@azure/arm-notificationhubs.NamespaceListResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult>
    name: SharedAccessAuthorizationRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SharedAccessAuthorizationRuleListResult
        fullName: SharedAccessAuthorizationRuleListResult
        uid: '@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-notificationhubs.NamespacePatchParameters'
    name: NamespacePatchParameters
    spec.typeScript:
      - name: NamespacePatchParameters
        fullName: NamespacePatchParameters
        uid: '@azure/arm-notificationhubs.NamespacePatchParameters'
  - uid: '@azure/arm-notificationhubs.PolicykeyResource'
    name: PolicykeyResource
    spec.typeScript:
      - name: PolicykeyResource
        fullName: PolicykeyResource
        uid: '@azure/arm-notificationhubs.PolicykeyResource'
  - uid: ServiceCallback<@azure/arm-notificationhubs.ResourceListKeys>
    name: ResourceListKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceListKeys
        fullName: ResourceListKeys
        uid: '@azure/arm-notificationhubs.ResourceListKeys'
      - name: '>'
        fullName: '>'
