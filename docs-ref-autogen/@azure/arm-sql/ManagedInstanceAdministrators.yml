### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators'
    name: ManagedInstanceAdministrators
    fullName: ManagedInstanceAdministrators
    children:
      - '@azure/arm-sql.ManagedInstanceAdministrators.beginCreateOrUpdate'
      - '@azure/arm-sql.ManagedInstanceAdministrators.beginDeleteMethod'
      - '@azure/arm-sql.ManagedInstanceAdministrators.createOrUpdate'
      - '@azure/arm-sql.ManagedInstanceAdministrators.deleteMethod'
      - '@azure/arm-sql.ManagedInstanceAdministrators.get'
      - '@azure/arm-sql.ManagedInstanceAdministrators.get_2'
      - '@azure/arm-sql.ManagedInstanceAdministrators.get_1'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance_2'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance_1'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext_2'
      - '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext_1'
      - '@azure/arm-sql.ManagedInstanceAdministrators.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a ManagedInstanceAdministrators.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, ManagedInstanceAdministrator,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a managed instance administrator.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        managedInstanceName: string, parameters: ManagedInstanceAdministrator,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstanceAdministrator'
          description: The requested administrator parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed instance administrator.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        managedInstanceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.createOrUpdate'
    name: >-
      createOrUpdate(string, string, ManagedInstanceAdministrator,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a managed instance administrator.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, managedInstanceName:
        string, parameters: ManagedInstanceAdministrator, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstanceAdministrator'
          description: The requested administrator parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstanceAdministratorsCreateOrUpdateResponse>
        description: Promise<Models.ManagedInstanceAdministratorsCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed instance administrator.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, managedInstanceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a managed instance administrator.
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstanceAdministratorsGetResponse>
        description: Promise<Models.ManagedInstanceAdministratorsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceAdministrator>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceAdministrator>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceAdministrator>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.get_1'
    name: 'get(string, string, ServiceCallback<ManagedInstanceAdministrator>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        callback: ServiceCallback<ManagedInstanceAdministrator>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceAdministrator>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance'
    name: 'listByInstance(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed instance administrators.
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstanceAdministratorsListByInstanceResponse>
        description: Promise<Models.ManagedInstanceAdministratorsListByInstanceResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance_2'
    name: >-
      listByInstance(string, string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceAdministratorListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceAdministratorListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-sql.ManagedInstanceAdministratorListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstance_1'
    name: >-
      listByInstance(string, string,
      ServiceCallback<ManagedInstanceAdministratorListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, callback:
        ServiceCallback<ManagedInstanceAdministratorListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-sql.ManagedInstanceAdministratorListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext'
    name: 'listByInstanceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed instance administrators.
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ManagedInstanceAdministratorsListByInstanceNextResponse>
        description: >-
          Promise<Models.ManagedInstanceAdministratorsListByInstanceNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext_2'
    name: >-
      listByInstanceNext(string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceAdministratorListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceAdministratorListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-sql.ManagedInstanceAdministratorListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.listByInstanceNext_1'
    name: >-
      listByInstanceNext(string,
      ServiceCallback<ManagedInstanceAdministratorListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, callback:
        ServiceCallback<ManagedInstanceAdministratorListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-sql.ManagedInstanceAdministratorListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrators.constructor'
    name: ManagedInstanceAdministrators(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ManagedInstanceAdministrators.
    syntax:
      content: 'new ManagedInstanceAdministrators(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.ManagedInstanceAdministrator'
    name: ManagedInstanceAdministrator
    spec.typeScript:
      - name: ManagedInstanceAdministrator
        fullName: ManagedInstanceAdministrator
        uid: '@azure/arm-sql.ManagedInstanceAdministrator'
  - uid: ServiceCallback<@azure/arm-sql.ManagedInstanceAdministrator>
    name: ManagedInstanceAdministrator>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedInstanceAdministrator
        fullName: ManagedInstanceAdministrator
        uid: '@azure/arm-sql.ManagedInstanceAdministrator'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.ManagedInstanceAdministratorListResult>
    name: ManagedInstanceAdministratorListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedInstanceAdministratorListResult
        fullName: ManagedInstanceAdministratorListResult
        uid: '@azure/arm-sql.ManagedInstanceAdministratorListResult'
      - name: '>'
        fullName: '>'
