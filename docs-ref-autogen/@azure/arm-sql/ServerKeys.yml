### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.ServerKeys'
    name: ServerKeys
    fullName: ServerKeys
    children:
      - '@azure/arm-sql.ServerKeys.beginCreateOrUpdate'
      - '@azure/arm-sql.ServerKeys.beginDeleteMethod'
      - '@azure/arm-sql.ServerKeys.createOrUpdate'
      - '@azure/arm-sql.ServerKeys.deleteMethod'
      - '@azure/arm-sql.ServerKeys.get'
      - '@azure/arm-sql.ServerKeys.get_2'
      - '@azure/arm-sql.ServerKeys.get_1'
      - '@azure/arm-sql.ServerKeys.listByServer'
      - '@azure/arm-sql.ServerKeys.listByServer_2'
      - '@azure/arm-sql.ServerKeys.listByServer_1'
      - '@azure/arm-sql.ServerKeys.listByServerNext'
      - '@azure/arm-sql.ServerKeys.listByServerNext_2'
      - '@azure/arm-sql.ServerKeys.listByServerNext_1'
      - '@azure/arm-sql.ServerKeys.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a ServerKeys.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, ServerKey,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a server key.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, keyName: string, parameters: ServerKey, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: >-
            The name of the server key to be operated on (updated or created).
            The key name

            is required to be in the format of 'vault_key_version'. For example,
            if the keyId is

            https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
            then

            the server key name should be formatted as:

            YourVaultName_YourKeyName_01234567890123456789012345678901
        - id: parameters
          type:
            - '@azure/arm-sql.ServerKey'
          description: The requested server key resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the server key with the given name.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, keyName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: The name of the server key to be deleted.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, ServerKey,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a server key.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        keyName: string, parameters: ServerKey, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: >-
            The name of the server key to be operated on (updated or created).
            The key name

            is required to be in the format of 'vault_key_version'. For example,
            if the keyId is

            https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
            then

            the server key name should be formatted as:

            YourVaultName_YourKeyName_01234567890123456789012345678901
        - id: parameters
          type:
            - '@azure/arm-sql.ServerKey'
          description: The requested server key resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServerKeysCreateOrUpdateResponse>
        description: Promise<Models.ServerKeysCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the server key with the given name.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        keyName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: The name of the server key to be deleted.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a server key.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: The name of the server key to be retrieved.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServerKeysGetResponse>
        description: Promise<Models.ServerKeysGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ServerKey>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ServerKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: The name of the server key to be retrieved.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKey>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.get_1'
    name: 'get(string, string, string, ServiceCallback<ServerKey>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, callback: ServiceCallback<ServerKey>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: keyName
          type:
            - string
          description: The name of the server key to be retrieved.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKey>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServer'
    name: 'listByServer(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of server keys.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServerKeysListByServerResponse>
        description: Promise<Models.ServerKeysListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServer_2'
    name: >-
      listByServer(string, string, RequestOptionsBase,
      ServiceCallback<ServerKeyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKeyListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServer_1'
    name: 'listByServer(string, string, ServiceCallback<ServerKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        callback: ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKeyListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServerNext'
    name: 'listByServerNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of server keys.
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServerKeysListByServerNextResponse>
        description: Promise<Models.ServerKeysListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServerNext_2'
    name: >-
      listByServerNext(string, RequestOptionsBase,
      ServiceCallback<ServerKeyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKeyListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.listByServerNext_1'
    name: 'listByServerNext(string, ServiceCallback<ServerKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, callback:
        ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerKeyListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ServerKeys.constructor'
    name: ServerKeys(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ServerKeys.
    syntax:
      content: 'new ServerKeys(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.ServerKey'
    name: ServerKey
    spec.typeScript:
      - name: ServerKey
        fullName: ServerKey
        uid: '@azure/arm-sql.ServerKey'
  - uid: ServiceCallback<@azure/arm-sql.ServerKey>
    name: ServerKey>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServerKey
        fullName: ServerKey
        uid: '@azure/arm-sql.ServerKey'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.ServerKeyListResult>
    name: ServerKeyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServerKeyListResult
        fullName: ServerKeyListResult
        uid: '@azure/arm-sql.ServerKeyListResult'
      - name: '>'
        fullName: '>'
