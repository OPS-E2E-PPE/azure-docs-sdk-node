### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.Databases'
    name: Databases
    fullName: Databases
    children:
      - '@azure/arm-sql.Databases.beginCreateImportOperation'
      - '@azure/arm-sql.Databases.beginCreateOrUpdate'
      - '@azure/arm-sql.Databases.beginDeleteMethod'
      - '@azure/arm-sql.Databases.beginExportMethod'
      - '@azure/arm-sql.Databases.beginFailover'
      - '@azure/arm-sql.Databases.beginImportMethod'
      - '@azure/arm-sql.Databases.beginPause'
      - '@azure/arm-sql.Databases.beginResume'
      - '@azure/arm-sql.Databases.beginUpdate'
      - '@azure/arm-sql.Databases.beginUpgradeDataWarehouse'
      - '@azure/arm-sql.Databases.createImportOperation'
      - '@azure/arm-sql.Databases.createOrUpdate'
      - '@azure/arm-sql.Databases.constructor'
      - '@azure/arm-sql.Databases.deleteMethod'
      - '@azure/arm-sql.Databases.exportMethod'
      - '@azure/arm-sql.Databases.failover'
      - '@azure/arm-sql.Databases.get'
      - '@azure/arm-sql.Databases.get_2'
      - '@azure/arm-sql.Databases.get_1'
      - '@azure/arm-sql.Databases.importMethod'
      - '@azure/arm-sql.Databases.listByElasticPool'
      - '@azure/arm-sql.Databases.listByElasticPool_2'
      - '@azure/arm-sql.Databases.listByElasticPool_1'
      - '@azure/arm-sql.Databases.listByElasticPoolNext'
      - '@azure/arm-sql.Databases.listByElasticPoolNext_2'
      - '@azure/arm-sql.Databases.listByElasticPoolNext_1'
      - '@azure/arm-sql.Databases.listByServer'
      - '@azure/arm-sql.Databases.listByServer_2'
      - '@azure/arm-sql.Databases.listByServer_1'
      - '@azure/arm-sql.Databases.listByServerNext'
      - '@azure/arm-sql.Databases.listByServerNext_2'
      - '@azure/arm-sql.Databases.listByServerNext_1'
      - '@azure/arm-sql.Databases.listMetricDefinitions'
      - '@azure/arm-sql.Databases.listMetricDefinitions_2'
      - '@azure/arm-sql.Databases.listMetricDefinitions_1'
      - '@azure/arm-sql.Databases.listMetrics'
      - '@azure/arm-sql.Databases.listMetrics_2'
      - '@azure/arm-sql.Databases.listMetrics_1'
      - '@azure/arm-sql.Databases.pause'
      - '@azure/arm-sql.Databases.rename'
      - '@azure/arm-sql.Databases.rename_2'
      - '@azure/arm-sql.Databases.rename_1'
      - '@azure/arm-sql.Databases.resume'
      - '@azure/arm-sql.Databases.update'
      - '@azure/arm-sql.Databases.upgradeDataWarehouse'
    langs:
      - typeScript
    type: class
    summary: Class representing a Databases.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginCreateImportOperation'
    name: >-
      beginCreateImportOperation(string, string, string, ImportExtensionRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database. The existing

      database must be empty.
    syntax:
      content: >-
        function beginCreateImportOperation(resourceGroupName: string,
        serverName: string, databaseName: string, parameters:
        ImportExtensionRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - '@azure/arm-sql.ImportExtensionRequest'
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.Database'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the database.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginExportMethod'
    name: >-
      beginExportMethod(string, string, string, ExportRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Exports a database to a bacpac.
    syntax:
      content: >-
        function beginExportMethod(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: ExportRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - '@azure/arm-sql.ExportRequest'
          description: The required parameters for exporting a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginFailover'
    name: >-
      beginFailover(string, string, string,
      Models.DatabasesBeginFailoverOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Failovers a database.
    syntax:
      content: >-
        function beginFailover(resourceGroupName: string, serverName: string,
        databaseName: string, options?:
        Models.DatabasesBeginFailoverOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to failover.
        - id: options
          type:
            - Models.DatabasesBeginFailoverOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginImportMethod'
    name: >-
      beginImportMethod(string, string, ImportRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Imports a bacpac into a new database.
    syntax:
      content: >-
        function beginImportMethod(resourceGroupName: string, serverName:
        string, parameters: ImportRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.ImportRequest'
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginPause'
    name: 'beginPause(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pauses a database.
    syntax:
      content: >-
        function beginPause(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be paused.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginResume'
    name: 'beginResume(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resumes a database.
    syntax:
      content: >-
        function beginResume(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be resumed.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginUpdate'
    name: >-
      beginUpdate(string, string, string, DatabaseUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing database.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.DatabaseUpdate'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.beginUpgradeDataWarehouse'
    name: >-
      beginUpgradeDataWarehouse(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Upgrades a data warehouse.
    syntax:
      content: >-
        function beginUpgradeDataWarehouse(resourceGroupName: string,
        serverName: string, databaseName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be upgraded.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.createImportOperation'
    name: >-
      createImportOperation(string, string, string, ImportExtensionRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database. The existing

      database must be empty.
    syntax:
      content: >-
        function createImportOperation(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: ImportExtensionRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - '@azure/arm-sql.ImportExtensionRequest'
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesCreateImportOperationResponse>
        description: Promise<Models.DatabasesCreateImportOperationResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.Database'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesCreateOrUpdateResponse>
        description: Promise<Models.DatabasesCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.constructor'
    name: Databases(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Databases.
    syntax:
      content: 'new Databases(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the database.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.exportMethod'
    name: >-
      exportMethod(string, string, string, ExportRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Exports a database to a bacpac.
    syntax:
      content: >-
        function exportMethod(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ExportRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - '@azure/arm-sql.ExportRequest'
          description: The required parameters for exporting a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesExportMethodResponse>
        description: Promise<Models.DatabasesExportMethodResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.failover'
    name: 'failover(string, string, string, Models.DatabasesFailoverOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Failovers a database.
    syntax:
      content: >-
        function failover(resourceGroupName: string, serverName: string,
        databaseName: string, options?: Models.DatabasesFailoverOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to failover.
        - id: options
          type:
            - Models.DatabasesFailoverOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a database.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesGetResponse>
        description: Promise<Models.DatabasesGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Database>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.Database>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.get_1'
    name: 'get(string, string, string, ServiceCallback<Database>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, callback: ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.Database>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.importMethod'
    name: 'importMethod(string, string, ImportRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Imports a bacpac into a new database.
    syntax:
      content: >-
        function importMethod(resourceGroupName: string, serverName: string,
        parameters: ImportRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.ImportRequest'
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesImportMethodResponse>
        description: Promise<Models.DatabasesImportMethodResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPool'
    name: 'listByElasticPool(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of databases in an elastic pool.
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: The name of the elastic pool.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListByElasticPoolResponse>
        description: Promise<Models.DatabasesListByElasticPoolResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPool_2'
    name: >-
      listByElasticPool(string, string, string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: The name of the elastic pool.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPool_1'
    name: >-
      listByElasticPool(string, string, string,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: The name of the elastic pool.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPoolNext'
    name: 'listByElasticPoolNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of databases in an elastic pool.
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListByElasticPoolNextResponse>
        description: Promise<Models.DatabasesListByElasticPoolNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPoolNext_2'
    name: >-
      listByElasticPoolNext(string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByElasticPoolNext_1'
    name: 'listByElasticPoolNext(string, ServiceCallback<DatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServer'
    name: 'listByServer(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of databases.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListByServerResponse>
        description: Promise<Models.DatabasesListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServer_2'
    name: >-
      listByServer(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServer_1'
    name: 'listByServer(string, string, ServiceCallback<DatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServerNext'
    name: 'listByServerNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of databases.
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListByServerNextResponse>
        description: Promise<Models.DatabasesListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServerNext_2'
    name: >-
      listByServerNext(string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listByServerNext_1'
    name: 'listByServerNext(string, ServiceCallback<DatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.DatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns database metric definitions.
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListMetricDefinitionsResponse>
        description: Promise<Models.DatabasesListMetricDefinitionsResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetricDefinitions_2'
    name: >-
      listMetricDefinitions(string, string, string, RequestOptionsBase,
      ServiceCallback<MetricDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricDefinitionListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.MetricDefinitionListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetricDefinitions_1'
    name: >-
      listMetricDefinitions(string, string, string,
      ServiceCallback<MetricDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, callback:
        ServiceCallback<MetricDefinitionListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.MetricDefinitionListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetrics'
    name: 'listMetrics(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns database metrics.
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesListMetricsResponse>
        description: Promise<Models.DatabasesListMetricsResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetrics_2'
    name: >-
      listMetrics(string, string, string, string, RequestOptionsBase,
      ServiceCallback<MetricListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, options: RequestOptionsBase,
        callback: ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.MetricListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.listMetrics_1'
    name: >-
      listMetrics(string, string, string, string,
      ServiceCallback<MetricListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, callback:
        ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: filter
          type:
            - string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.MetricListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.pause'
    name: 'pause(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pauses a database.
    syntax:
      content: >-
        function pause(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be paused.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesPauseResponse>
        description: Promise<Models.DatabasesPauseResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.rename'
    name: >-
      rename(string, string, string, ResourceMoveDefinition,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Renames a database.
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to rename.
        - id: parameters
          type:
            - '@azure/arm-sql.ResourceMoveDefinition'
          description: The resource move definition for renaming this database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.rename_2'
    name: >-
      rename(string, string, string, ResourceMoveDefinition, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to rename.
        - id: parameters
          type:
            - '@azure/arm-sql.ResourceMoveDefinition'
          description: The resource move definition for renaming this database.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.rename_1'
    name: >-
      rename(string, string, string, ResourceMoveDefinition,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to rename.
        - id: parameters
          type:
            - '@azure/arm-sql.ResourceMoveDefinition'
          description: The resource move definition for renaming this database.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.resume'
    name: 'resume(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resumes a database.
    syntax:
      content: >-
        function resume(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be resumed.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesResumeResponse>
        description: Promise<Models.DatabasesResumeResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.update'
    name: 'update(string, string, string, DatabaseUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing database.
    syntax:
      content: >-
        function update(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.DatabaseUpdate'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabasesUpdateResponse>
        description: Promise<Models.DatabasesUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Databases.upgradeDataWarehouse'
    name: 'upgradeDataWarehouse(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Upgrades a data warehouse.
    syntax:
      content: >-
        function upgradeDataWarehouse(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be upgraded.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.ImportExtensionRequest'
    name: ImportExtensionRequest
    spec.typeScript:
      - name: ImportExtensionRequest
        fullName: ImportExtensionRequest
        uid: '@azure/arm-sql.ImportExtensionRequest'
  - uid: '@azure/arm-sql.Database'
    name: Database
    spec.typeScript:
      - name: Database
        fullName: Database
        uid: '@azure/arm-sql.Database'
  - uid: '@azure/arm-sql.ExportRequest'
    name: ExportRequest
    spec.typeScript:
      - name: ExportRequest
        fullName: ExportRequest
        uid: '@azure/arm-sql.ExportRequest'
  - uid: '@azure/arm-sql.ImportRequest'
    name: ImportRequest
    spec.typeScript:
      - name: ImportRequest
        fullName: ImportRequest
        uid: '@azure/arm-sql.ImportRequest'
  - uid: '@azure/arm-sql.DatabaseUpdate'
    name: DatabaseUpdate
    spec.typeScript:
      - name: DatabaseUpdate
        fullName: DatabaseUpdate
        uid: '@azure/arm-sql.DatabaseUpdate'
  - uid: ServiceCallback<@azure/arm-sql.Database>
    name: Database>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Database
        fullName: Database
        uid: '@azure/arm-sql.Database'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.DatabaseListResult>
    name: DatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseListResult
        fullName: DatabaseListResult
        uid: '@azure/arm-sql.DatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.MetricDefinitionListResult>
    name: MetricDefinitionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionListResult
        fullName: MetricDefinitionListResult
        uid: '@azure/arm-sql.MetricDefinitionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-sql.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-sql.ResourceMoveDefinition'
    name: ResourceMoveDefinition
    spec.typeScript:
      - name: ResourceMoveDefinition
        fullName: ResourceMoveDefinition
        uid: '@azure/arm-sql.ResourceMoveDefinition'
