### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.ManagedDatabases'
    name: ManagedDatabases
    fullName: ManagedDatabases
    children:
      - '@azure/arm-sql.ManagedDatabases.beginCompleteRestore'
      - '@azure/arm-sql.ManagedDatabases.beginCreateOrUpdate'
      - '@azure/arm-sql.ManagedDatabases.beginDeleteMethod'
      - '@azure/arm-sql.ManagedDatabases.beginUpdate'
      - '@azure/arm-sql.ManagedDatabases.completeRestore'
      - '@azure/arm-sql.ManagedDatabases.createOrUpdate'
      - '@azure/arm-sql.ManagedDatabases.deleteMethod'
      - '@azure/arm-sql.ManagedDatabases.get'
      - '@azure/arm-sql.ManagedDatabases.get_2'
      - '@azure/arm-sql.ManagedDatabases.get_1'
      - '@azure/arm-sql.ManagedDatabases.listByInstance'
      - '@azure/arm-sql.ManagedDatabases.listByInstance_2'
      - '@azure/arm-sql.ManagedDatabases.listByInstance_1'
      - '@azure/arm-sql.ManagedDatabases.listByInstanceNext'
      - '@azure/arm-sql.ManagedDatabases.listByInstanceNext_2'
      - '@azure/arm-sql.ManagedDatabases.listByInstanceNext_1'
      - '@azure/arm-sql.ManagedDatabases.constructor'
      - '@azure/arm-sql.ManagedDatabases.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a ManagedDatabases.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.beginCompleteRestore'
    name: >-
      beginCompleteRestore(string, string, string,
      CompleteDatabaseRestoreDefinition, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Completes the restore operation on a managed database.
    syntax:
      content: >-
        function beginCompleteRestore(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.CompleteDatabaseRestoreDefinition'
          description: The definition for completing the restore of this managed database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, ManagedDatabase,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        ManagedDatabase, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedDatabase'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed database.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.beginUpdate'
    name: >-
      beginUpdate(string, string, string, ManagedDatabaseUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing database.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters: ManagedDatabaseUpdate,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedDatabaseUpdate'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.completeRestore'
    name: >-
      completeRestore(string, string, string, CompleteDatabaseRestoreDefinition,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Completes the restore operation on a managed database.
    syntax:
      content: >-
        function completeRestore(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.CompleteDatabaseRestoreDefinition'
          description: The definition for completing the restore of this managed database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, ManagedDatabase,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new database or updates an existing database.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters: ManagedDatabase, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedDatabase'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedDatabasesCreateOrUpdateResponse>
        description: Promise<Models.ManagedDatabasesCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed database.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a managed database.
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedDatabasesGetResponse>
        description: Promise<Models.ManagedDatabasesGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ManagedDatabase>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabase>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabase>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.get_1'
    name: 'get(string, string, string, ServiceCallback<ManagedDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, callback: ServiceCallback<ManagedDatabase>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabase>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstance'
    name: 'listByInstance(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed databases.
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedDatabasesListByInstanceResponse>
        description: Promise<Models.ManagedDatabasesListByInstanceResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstance_2'
    name: >-
      listByInstance(string, string, RequestOptionsBase,
      ServiceCallback<ManagedDatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstance_1'
    name: 'listByInstance(string, string, ServiceCallback<ManagedDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, callback: ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext'
    name: 'listByInstanceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed databases.
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedDatabasesListByInstanceNextResponse>
        description: Promise<Models.ManagedDatabasesListByInstanceNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext_2'
    name: >-
      listByInstanceNext(string, RequestOptionsBase,
      ServiceCallback<ManagedDatabaseListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext_1'
    name: 'listByInstanceNext(string, ServiceCallback<ManagedDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedDatabaseListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.constructor'
    name: ManagedDatabases(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ManagedDatabases.
    syntax:
      content: 'new ManagedDatabases(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedDatabases.update'
    name: >-
      update(string, string, string, ManagedDatabaseUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing database.
    syntax:
      content: >-
        function update(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, parameters: ManagedDatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedDatabaseUpdate'
          description: The requested database resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedDatabasesUpdateResponse>
        description: Promise<Models.ManagedDatabasesUpdateResponse>
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.CompleteDatabaseRestoreDefinition'
    name: CompleteDatabaseRestoreDefinition
    spec.typeScript:
      - name: CompleteDatabaseRestoreDefinition
        fullName: CompleteDatabaseRestoreDefinition
        uid: '@azure/arm-sql.CompleteDatabaseRestoreDefinition'
  - uid: '@azure/arm-sql.ManagedDatabase'
    name: ManagedDatabase
    spec.typeScript:
      - name: ManagedDatabase
        fullName: ManagedDatabase
        uid: '@azure/arm-sql.ManagedDatabase'
  - uid: '@azure/arm-sql.ManagedDatabaseUpdate'
    name: ManagedDatabaseUpdate
    spec.typeScript:
      - name: ManagedDatabaseUpdate
        fullName: ManagedDatabaseUpdate
        uid: '@azure/arm-sql.ManagedDatabaseUpdate'
  - uid: ServiceCallback<@azure/arm-sql.ManagedDatabase>
    name: ManagedDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedDatabase
        fullName: ManagedDatabase
        uid: '@azure/arm-sql.ManagedDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.ManagedDatabaseListResult>
    name: ManagedDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedDatabaseListResult
        fullName: ManagedDatabaseListResult
        uid: '@azure/arm-sql.ManagedDatabaseListResult'
      - name: '>'
        fullName: '>'
