### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.Servers'
    name: Servers
    fullName: Servers
    children:
      - '@azure/arm-sql.Servers.beginCreateOrUpdate'
      - '@azure/arm-sql.Servers.beginDeleteMethod'
      - '@azure/arm-sql.Servers.beginUpdate'
      - '@azure/arm-sql.Servers.checkNameAvailability'
      - '@azure/arm-sql.Servers.checkNameAvailability_2'
      - '@azure/arm-sql.Servers.checkNameAvailability_1'
      - '@azure/arm-sql.Servers.createOrUpdate'
      - '@azure/arm-sql.Servers.deleteMethod'
      - '@azure/arm-sql.Servers.get'
      - '@azure/arm-sql.Servers.get_2'
      - '@azure/arm-sql.Servers.get_1'
      - '@azure/arm-sql.Servers.list'
      - '@azure/arm-sql.Servers.list_2'
      - '@azure/arm-sql.Servers.list_1'
      - '@azure/arm-sql.Servers.listByResourceGroup'
      - '@azure/arm-sql.Servers.listByResourceGroup_2'
      - '@azure/arm-sql.Servers.listByResourceGroup_1'
      - '@azure/arm-sql.Servers.listByResourceGroupNext'
      - '@azure/arm-sql.Servers.listByResourceGroupNext_2'
      - '@azure/arm-sql.Servers.listByResourceGroupNext_1'
      - '@azure/arm-sql.Servers.listNext'
      - '@azure/arm-sql.Servers.listNext_2'
      - '@azure/arm-sql.Servers.listNext_1'
      - '@azure/arm-sql.Servers.constructor'
      - '@azure/arm-sql.Servers.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a Servers.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Server, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a server.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: Server, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.Server'
          description: The requested server resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a server.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.beginUpdate'
    name: 'beginUpdate(string, string, ServerUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a server.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.ServerUpdate'
          description: The requested server resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.checkNameAvailability'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether a resource can be created with the specified name.
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-sql.CheckNameAvailabilityRequest'
          description: The parameters to request for name availability.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersCheckNameAvailabilityResponse>
        description: Promise<Models.ServersCheckNameAvailabilityResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.checkNameAvailability_2'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-sql.CheckNameAvailabilityRequest'
          description: The parameters to request for name availability.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.CheckNameAvailabilityResponse>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.checkNameAvailability_1'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      ServiceCallback<CheckNameAvailabilityResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        callback: ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: parameters
          type:
            - '@azure/arm-sql.CheckNameAvailabilityRequest'
          description: The parameters to request for name availability.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.CheckNameAvailabilityResponse>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.createOrUpdate'
    name: 'createOrUpdate(string, string, Server, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a server.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        parameters: Server, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.Server'
          description: The requested server resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersCreateOrUpdateResponse>
        description: Promise<Models.ServersCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a server.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a server.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersGetResponse>
        description: Promise<Models.ServersGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Server>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Server>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.Server>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.get_1'
    name: 'get(string, string, ServiceCallback<Server>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<Server>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.Server>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all servers in the subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersListResponse>
        description: Promise<Models.ServersListResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ServerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.list_1'
    name: list(ServiceCallback<ServerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ServerListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of servers in a resource groups.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersListByResourceGroupResponse>
        description: Promise<Models.ServersListByResourceGroupResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ServerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ServerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of servers in a resource groups.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersListByResourceGroupNextResponse>
        description: Promise<Models.ServersListByResourceGroupNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ServerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ServerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all servers in the subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersListNextResponse>
        description: Promise<Models.ServersListNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ServerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.listNext_1'
    name: 'listNext(string, ServiceCallback<ServerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ServerListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.constructor'
    name: Servers(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Servers.
    syntax:
      content: 'new Servers(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.Servers.update'
    name: 'update(string, string, ServerUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a server.
    syntax:
      content: >-
        function update(resourceGroupName: string, serverName: string,
        parameters: ServerUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - '@azure/arm-sql.ServerUpdate'
          description: The requested server resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServersUpdateResponse>
        description: Promise<Models.ServersUpdateResponse>
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/arm-sql.Server'
  - uid: '@azure/arm-sql.ServerUpdate'
    name: ServerUpdate
    spec.typeScript:
      - name: ServerUpdate
        fullName: ServerUpdate
        uid: '@azure/arm-sql.ServerUpdate'
  - uid: '@azure/arm-sql.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-sql.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-sql.CheckNameAvailabilityResponse>
    name: CheckNameAvailabilityResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResponse
        fullName: CheckNameAvailabilityResponse
        uid: '@azure/arm-sql.CheckNameAvailabilityResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.Server>
    name: Server>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Server
        fullName: Server
        uid: '@azure/arm-sql.Server'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.ServerListResult>
    name: ServerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServerListResult
        fullName: ServerListResult
        uid: '@azure/arm-sql.ServerListResult'
      - name: '>'
        fullName: '>'
