### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.ManagedInstances'
    name: ManagedInstances
    fullName: ManagedInstances
    children:
      - '@azure/arm-sql.ManagedInstances.beginCreateOrUpdate'
      - '@azure/arm-sql.ManagedInstances.beginDeleteMethod'
      - '@azure/arm-sql.ManagedInstances.beginUpdate'
      - '@azure/arm-sql.ManagedInstances.createOrUpdate'
      - '@azure/arm-sql.ManagedInstances.deleteMethod'
      - '@azure/arm-sql.ManagedInstances.get'
      - '@azure/arm-sql.ManagedInstances.get_2'
      - '@azure/arm-sql.ManagedInstances.get_1'
      - '@azure/arm-sql.ManagedInstances.list'
      - '@azure/arm-sql.ManagedInstances.list_2'
      - '@azure/arm-sql.ManagedInstances.list_1'
      - '@azure/arm-sql.ManagedInstances.listByInstancePool'
      - '@azure/arm-sql.ManagedInstances.listByInstancePool_2'
      - '@azure/arm-sql.ManagedInstances.listByInstancePool_1'
      - '@azure/arm-sql.ManagedInstances.listByInstancePoolNext'
      - '@azure/arm-sql.ManagedInstances.listByInstancePoolNext_2'
      - '@azure/arm-sql.ManagedInstances.listByInstancePoolNext_1'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroup'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroup_2'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroup_1'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroupNext'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroupNext_2'
      - '@azure/arm-sql.ManagedInstances.listByResourceGroupNext_1'
      - '@azure/arm-sql.ManagedInstances.listNext'
      - '@azure/arm-sql.ManagedInstances.listNext_2'
      - '@azure/arm-sql.ManagedInstances.listNext_1'
      - '@azure/arm-sql.ManagedInstances.constructor'
      - '@azure/arm-sql.ManagedInstances.update'
    langs:
      - typeScript
    type: class
    summary: Class representing a ManagedInstances.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, ManagedInstance,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a managed instance.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        managedInstanceName: string, parameters: ManagedInstance, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstance'
          description: The requested managed instance resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed instance.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        managedInstanceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.beginUpdate'
    name: >-
      beginUpdate(string, string, ManagedInstanceUpdate,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a managed instance.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, managedInstanceName:
        string, parameters: ManagedInstanceUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstanceUpdate'
          description: The requested managed instance resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.createOrUpdate'
    name: 'createOrUpdate(string, string, ManagedInstance, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a managed instance.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, managedInstanceName:
        string, parameters: ManagedInstance, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstance'
          description: The requested managed instance resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesCreateOrUpdateResponse>
        description: Promise<Models.ManagedInstancesCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a managed instance.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, managedInstanceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a managed instance.
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesGetResponse>
        description: Promise<Models.ManagedInstancesGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ManagedInstance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<ManagedInstance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstance>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.get_1'
    name: 'get(string, string, ServiceCallback<ManagedInstance>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        callback: ServiceCallback<ManagedInstance>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstance>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all managed instances in the subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListResponse>
        description: Promise<Models.ManagedInstancesListResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ManagedInstanceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.list_1'
    name: list(ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ManagedInstanceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePool'
    name: 'listByInstancePool(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all managed instances in an instance pool.
    syntax:
      content: >-
        function listByInstancePool(resourceGroupName: string, instancePoolName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: instancePoolName
          type:
            - string
          description: The instance pool name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListByInstancePoolResponse>
        description: Promise<Models.ManagedInstancesListByInstancePoolResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePool_2'
    name: >-
      listByInstancePool(string, string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstancePool(resourceGroupName: string, instancePoolName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: instancePoolName
          type:
            - string
          description: The instance pool name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePool_1'
    name: >-
      listByInstancePool(string, string,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstancePool(resourceGroupName: string, instancePoolName:
        string, callback: ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: instancePoolName
          type:
            - string
          description: The instance pool name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePoolNext'
    name: 'listByInstancePoolNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all managed instances in an instance pool.
    syntax:
      content: >-
        function listByInstancePoolNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListByInstancePoolNextResponse>
        description: Promise<Models.ManagedInstancesListByInstancePoolNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePoolNext_2'
    name: >-
      listByInstancePoolNext(string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstancePoolNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByInstancePoolNext_1'
    name: 'listByInstancePoolNext(string, ServiceCallback<ManagedInstanceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByInstancePoolNext(nextPageLink: string, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed instances in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListByResourceGroupResponse>
        description: Promise<Models.ManagedInstancesListByResourceGroupResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ManagedInstanceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of managed instances in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListByResourceGroupNextResponse>
        description: Promise<Models.ManagedInstancesListByResourceGroupNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listByResourceGroupNext_1'
    name: >-
      listByResourceGroupNext(string,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all managed instances in the subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesListNextResponse>
        description: Promise<Models.ManagedInstancesListNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ManagedInstanceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.listNext_1'
    name: 'listNext(string, ServiceCallback<ManagedInstanceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ManagedInstanceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
          description: |
            The callback
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.constructor'
    name: ManagedInstances(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ManagedInstances.
    syntax:
      content: 'new ManagedInstances(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.ManagedInstances.update'
    name: 'update(string, string, ManagedInstanceUpdate, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a managed instance.
    syntax:
      content: >-
        function update(resourceGroupName: string, managedInstanceName: string,
        parameters: ManagedInstanceUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type:
            - string
          description: The name of the managed instance.
        - id: parameters
          type:
            - '@azure/arm-sql.ManagedInstanceUpdate'
          description: The requested managed instance resource state.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedInstancesUpdateResponse>
        description: Promise<Models.ManagedInstancesUpdateResponse>
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.ManagedInstance'
    name: ManagedInstance
    spec.typeScript:
      - name: ManagedInstance
        fullName: ManagedInstance
        uid: '@azure/arm-sql.ManagedInstance'
  - uid: '@azure/arm-sql.ManagedInstanceUpdate'
    name: ManagedInstanceUpdate
    spec.typeScript:
      - name: ManagedInstanceUpdate
        fullName: ManagedInstanceUpdate
        uid: '@azure/arm-sql.ManagedInstanceUpdate'
  - uid: ServiceCallback<@azure/arm-sql.ManagedInstance>
    name: ManagedInstance>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedInstance
        fullName: ManagedInstance
        uid: '@azure/arm-sql.ManagedInstance'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.ManagedInstanceListResult>
    name: ManagedInstanceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedInstanceListResult
        fullName: ManagedInstanceListResult
        uid: '@azure/arm-sql.ManagedInstanceListResult'
      - name: '>'
        fullName: '>'
