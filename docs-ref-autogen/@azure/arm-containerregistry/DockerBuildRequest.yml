### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.DockerBuildRequest'
    name: DockerBuildRequest
    fullName: DockerBuildRequest
    children:
      - '@azure/arm-containerregistry.DockerBuildRequest.agentConfiguration'
      - '@azure/arm-containerregistry.DockerBuildRequest.argumentsProperty'
      - '@azure/arm-containerregistry.DockerBuildRequest.credentials'
      - '@azure/arm-containerregistry.DockerBuildRequest.dockerFilePath'
      - '@azure/arm-containerregistry.DockerBuildRequest.imageNames'
      - '@azure/arm-containerregistry.DockerBuildRequest.isArchiveEnabled'
      - '@azure/arm-containerregistry.DockerBuildRequest.isPushEnabled'
      - '@azure/arm-containerregistry.DockerBuildRequest.noCache'
      - '@azure/arm-containerregistry.DockerBuildRequest.platform'
      - '@azure/arm-containerregistry.DockerBuildRequest.sourceLocation'
      - '@azure/arm-containerregistry.DockerBuildRequest.target'
      - '@azure/arm-containerregistry.DockerBuildRequest.timeout'
      - '@azure/arm-containerregistry.DockerBuildRequest.type'
    langs:
      - typeScript
    type: interface
    summary: The parameters for a docker quick build.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.agentConfiguration'
    name: agentConfiguration
    fullName: agentConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: The machine configuration of the run agent.
    optional: true
    syntax:
      content: 'agentConfiguration?: AgentProperties'
      return:
        type:
          - '@azure/arm-containerregistry.AgentProperties'
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.argumentsProperty'
    name: argumentsProperty
    fullName: argumentsProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: The collection of override arguments to be used when executing the run.
    optional: true
    syntax:
      content: 'argumentsProperty?: Argument[]'
      return:
        type:
          - '@azure/arm-containerregistry.Argument[]'
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The properties that describes a set of credentials that will be used when
      this run is invoked.
    optional: true
    syntax:
      content: 'credentials?: Credentials'
      return:
        type:
          - '@azure/arm-containerregistry.Credentials'
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.dockerFilePath'
    name: dockerFilePath
    fullName: dockerFilePath
    children: []
    langs:
      - typeScript
    type: property
    summary: The Docker file path relative to the source location.
    syntax:
      content: 'dockerFilePath: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.imageNames'
    name: imageNames
    fullName: imageNames
    children: []
    langs:
      - typeScript
    type: property
    summary: The fully qualified image names including the repository and tag.
    optional: true
    syntax:
      content: 'imageNames?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.isArchiveEnabled'
    name: isArchiveEnabled
    fullName: isArchiveEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The value that indicates whether archiving is enabled for the run or not.
      Default value:

      false.
    optional: true
    syntax:
      content: 'isArchiveEnabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.isPushEnabled'
    name: isPushEnabled
    fullName: isPushEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The value of this property indicates whether the image built should be
      pushed to the registry

      or not. Default value: true.
    optional: true
    syntax:
      content: 'isPushEnabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.noCache'
    name: noCache
    fullName: noCache
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The value of this property indicates whether the image cache is enabled or
      not. Default value:

      false.
    optional: true
    syntax:
      content: 'noCache?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.platform'
    name: platform
    fullName: platform
    children: []
    langs:
      - typeScript
    type: property
    summary: The platform properties against which the run has to happen.
    syntax:
      content: 'platform: PlatformProperties'
      return:
        type:
          - '@azure/arm-containerregistry.PlatformProperties'
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.sourceLocation'
    name: sourceLocation
    fullName: sourceLocation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The URL(absolute or relative) of the source context. It can be an URL to a
      tar or git

      repository.

      If it is relative URL, the relative path should be obtained from calling

      listBuildSourceUploadUrl API.
    optional: true
    syntax:
      content: 'sourceLocation?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.target'
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: The name of the target build stage for the docker build.
    optional: true
    syntax:
      content: 'target?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Run timeout in seconds. Default value: 3600.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.DockerBuildRequest.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'type: "DockerBuildRequest"'
      return:
        type:
          - '"DockerBuildRequest"'
        description: ''
    package: '@azure/arm-containerregistry'
references:
  - uid: '@azure/arm-containerregistry.AgentProperties'
    name: AgentProperties
    spec.typeScript:
      - name: AgentProperties
        fullName: AgentProperties
        uid: '@azure/arm-containerregistry.AgentProperties'
  - uid: '@azure/arm-containerregistry.Argument[]'
    name: 'Argument[]'
    spec.typeScript:
      - name: Argument
        fullName: Argument
        uid: '@azure/arm-containerregistry.Argument'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-containerregistry.Credentials'
    name: Credentials
    spec.typeScript:
      - name: Credentials
        fullName: Credentials
        uid: '@azure/arm-containerregistry.Credentials'
  - uid: '@azure/arm-containerregistry.PlatformProperties'
    name: PlatformProperties
    spec.typeScript:
      - name: PlatformProperties
        fullName: PlatformProperties
        uid: '@azure/arm-containerregistry.PlatformProperties'
