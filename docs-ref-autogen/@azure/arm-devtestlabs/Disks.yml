### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-devtestlabs.Disks'
    name: Disks
    fullName: Disks
    children:
      - '@azure/arm-devtestlabs.Disks.attach'
      - '@azure/arm-devtestlabs.Disks.beginAttach'
      - '@azure/arm-devtestlabs.Disks.beginCreateOrUpdate'
      - '@azure/arm-devtestlabs.Disks.beginDeleteMethod'
      - '@azure/arm-devtestlabs.Disks.beginDetach'
      - '@azure/arm-devtestlabs.Disks.createOrUpdate'
      - '@azure/arm-devtestlabs.Disks.deleteMethod'
      - '@azure/arm-devtestlabs.Disks.detach'
      - '@azure/arm-devtestlabs.Disks.constructor'
      - '@azure/arm-devtestlabs.Disks.get_2'
      - '@azure/arm-devtestlabs.Disks.get'
      - '@azure/arm-devtestlabs.Disks.get_1'
      - '@azure/arm-devtestlabs.Disks.list_2'
      - '@azure/arm-devtestlabs.Disks.list'
      - '@azure/arm-devtestlabs.Disks.list_1'
      - '@azure/arm-devtestlabs.Disks.listNext'
      - '@azure/arm-devtestlabs.Disks.listNext_2'
      - '@azure/arm-devtestlabs.Disks.listNext_1'
      - '@azure/arm-devtestlabs.Disks.update'
      - '@azure/arm-devtestlabs.Disks.update_2'
      - '@azure/arm-devtestlabs.Disks.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Disks.
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.attach'
    name: >-
      attach(string, string, string, string, AttachDiskProperties,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Attach and create the lease of the disk to the virtual machine. This
      operation can take a while

      to complete.
    syntax:
      content: >-
        function attach(resourceGroupName: string, labName: string, userName:
        string, name: string, attachDiskProperties: AttachDiskProperties,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: attachDiskProperties
          type:
            - '@azure/arm-devtestlabs.AttachDiskProperties'
          description: Properties of the disk to attach.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.beginAttach'
    name: >-
      beginAttach(string, string, string, string, AttachDiskProperties,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Attach and create the lease of the disk to the virtual machine. This
      operation can take a while

      to complete.
    syntax:
      content: >-
        function beginAttach(resourceGroupName: string, labName: string,
        userName: string, name: string, attachDiskProperties:
        AttachDiskProperties, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: attachDiskProperties
          type:
            - '@azure/arm-devtestlabs.AttachDiskProperties'
          description: Properties of the disk to attach.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, string, Disk,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or replace an existing disk. This operation can take a while to
      complete.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, labName: string,
        userName: string, name: string, disk: Disk, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: disk
          type:
            - '@azure/arm-devtestlabs.Disk'
          description: A Disk.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.beginDeleteMethod'
    name: >-
      beginDeleteMethod(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete disk. This operation can take a while to complete.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, labName: string,
        userName: string, name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.beginDetach'
    name: >-
      beginDetach(string, string, string, string, DetachDiskProperties,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Detach and break the lease of the disk attached to the virtual machine.
      This operation can take

      a while to complete.
    syntax:
      content: >-
        function beginDetach(resourceGroupName: string, labName: string,
        userName: string, name: string, detachDiskProperties:
        DetachDiskProperties, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: detachDiskProperties
          type:
            - '@azure/arm-devtestlabs.DetachDiskProperties'
          description: Properties of the disk to detach.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, string, Disk,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or replace an existing disk. This operation can take a while to
      complete.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, labName: string,
        userName: string, name: string, disk: Disk, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: disk
          type:
            - '@azure/arm-devtestlabs.Disk'
          description: A Disk.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DisksCreateOrUpdateResponse>
        description: Promise<Models.DisksCreateOrUpdateResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete disk. This operation can take a while to complete.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, labName: string,
        userName: string, name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.detach'
    name: >-
      detach(string, string, string, string, DetachDiskProperties,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Detach and break the lease of the disk attached to the virtual machine.
      This operation can take

      a while to complete.
    syntax:
      content: >-
        function detach(resourceGroupName: string, labName: string, userName:
        string, name: string, detachDiskProperties: DetachDiskProperties,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: detachDiskProperties
          type:
            - '@azure/arm-devtestlabs.DetachDiskProperties'
          description: Properties of the disk to detach.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.constructor'
    name: Disks(DevTestLabsClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Disks.
    syntax:
      content: 'new Disks(client: DevTestLabsClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-devtestlabs.DevTestLabsClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.get_2'
    name: >-
      get(string, string, string, string, DisksGetOptionalParams,
      ServiceCallback<Disk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, labName: string, userName:
        string, name: string, options: DisksGetOptionalParams, callback:
        ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: options
          type:
            - '@azure/arm-devtestlabs.DisksGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.Disk>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.get'
    name: 'get(string, string, string, string, Models.DisksGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get disk.
    syntax:
      content: >-
        function get(resourceGroupName: string, labName: string, userName:
        string, name: string, options?: Models.DisksGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: options
          type:
            - Models.DisksGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DisksGetResponse>
        description: Promise<Models.DisksGetResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.get_1'
    name: 'get(string, string, string, string, ServiceCallback<Disk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, labName: string, userName:
        string, name: string, callback: ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.Disk>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.list_2'
    name: >-
      list(string, string, string, DisksListOptionalParams,
      ServiceCallback<DiskList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, labName: string, userName:
        string, options: DisksListOptionalParams, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: options
          type:
            - '@azure/arm-devtestlabs.DisksListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.DiskList>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.list'
    name: 'list(string, string, string, Models.DisksListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List disks in a given user profile.
    syntax:
      content: >-
        function list(resourceGroupName: string, labName: string, userName:
        string, options?: Models.DisksListOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: options
          type:
            - Models.DisksListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DisksListResponse>
        description: Promise<Models.DisksListResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.list_1'
    name: 'list(string, string, string, ServiceCallback<DiskList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, labName: string, userName:
        string, callback: ServiceCallback<DiskList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.DiskList>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List disks in a given user profile.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DisksListNextResponse>
        description: Promise<Models.DisksListNextResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<DiskList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.DiskList>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.listNext_1'
    name: 'listNext(string, ServiceCallback<DiskList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.DiskList>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.update'
    name: >-
      update(string, string, string, string, DiskFragment,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Modify properties of disks.
    syntax:
      content: >-
        function update(resourceGroupName: string, labName: string, userName:
        string, name: string, disk: DiskFragment, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: disk
          type:
            - '@azure/arm-devtestlabs.DiskFragment'
          description: A Disk.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DisksUpdateResponse>
        description: Promise<Models.DisksUpdateResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.update_2'
    name: >-
      update(string, string, string, string, DiskFragment, RequestOptionsBase,
      ServiceCallback<Disk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, labName: string, userName:
        string, name: string, disk: DiskFragment, options: RequestOptionsBase,
        callback: ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: disk
          type:
            - '@azure/arm-devtestlabs.DiskFragment'
          description: A Disk.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.Disk>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.Disks.update_1'
    name: >-
      update(string, string, string, string, DiskFragment,
      ServiceCallback<Disk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, labName: string, userName:
        string, name: string, disk: DiskFragment, callback:
        ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: labName
          type:
            - string
          description: The name of the lab.
        - id: userName
          type:
            - string
          description: The name of the user profile.
        - id: name
          type:
            - string
          description: The name of the disk.
        - id: disk
          type:
            - '@azure/arm-devtestlabs.DiskFragment'
          description: A Disk.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.Disk>
          description: |
            The callback
    package: '@azure/arm-devtestlabs'
references:
  - uid: '@azure/arm-devtestlabs.DevTestLabsClientContext'
    name: DevTestLabsClientContext
    spec.typeScript:
      - name: DevTestLabsClientContext
        fullName: DevTestLabsClientContext
        uid: '@azure/arm-devtestlabs.DevTestLabsClientContext'
  - uid: '@azure/arm-devtestlabs.AttachDiskProperties'
    name: AttachDiskProperties
    spec.typeScript:
      - name: AttachDiskProperties
        fullName: AttachDiskProperties
        uid: '@azure/arm-devtestlabs.AttachDiskProperties'
  - uid: '@azure/arm-devtestlabs.Disk'
    name: Disk
    spec.typeScript:
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-devtestlabs.Disk'
  - uid: '@azure/arm-devtestlabs.DetachDiskProperties'
    name: DetachDiskProperties
    spec.typeScript:
      - name: DetachDiskProperties
        fullName: DetachDiskProperties
        uid: '@azure/arm-devtestlabs.DetachDiskProperties'
  - uid: ServiceCallback<@azure/arm-devtestlabs.Disk>
    name: Disk>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-devtestlabs.Disk'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-devtestlabs.DisksGetOptionalParams'
    name: DisksGetOptionalParams
    spec.typeScript:
      - name: DisksGetOptionalParams
        fullName: DisksGetOptionalParams
        uid: '@azure/arm-devtestlabs.DisksGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-devtestlabs.DiskList>
    name: DiskList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DiskList
        fullName: DiskList
        uid: '@azure/arm-devtestlabs.DiskList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-devtestlabs.DisksListOptionalParams'
    name: DisksListOptionalParams
    spec.typeScript:
      - name: DisksListOptionalParams
        fullName: DisksListOptionalParams
        uid: '@azure/arm-devtestlabs.DisksListOptionalParams'
  - uid: '@azure/arm-devtestlabs.DiskFragment'
    name: DiskFragment
    spec.typeScript:
      - name: DiskFragment
        fullName: DiskFragment
        uid: '@azure/arm-devtestlabs.DiskFragment'
