### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses'
    name: AvailabilityStatuses
    fullName: AvailabilityStatuses
    children:
      - '@azure/arm-resourcehealth.AvailabilityStatuses.constructor'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource_1'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.list_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.list'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.list_1'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup_1'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext_1'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId_1'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext'
      - >-
        @azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext_2
      - >-
        @azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext_1
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listNext'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listNext_2'
      - '@azure/arm-resourcehealth.AvailabilityStatuses.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a AvailabilityStatuses.
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.constructor'
    name: AvailabilityStatuses(MicrosoftResourceHealthContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a AvailabilityStatuses.
    syntax:
      content: 'new AvailabilityStatuses(client: MicrosoftResourceHealthContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource_2'
    name: >-
      getByResource(string, AvailabilityStatusesGetByResourceOptionalParams,
      ServiceCallback<AvailabilityStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getByResource(resourceUri: string, options:
        AvailabilityStatusesGetByResourceOptionalParams, callback:
        ServiceCallback<AvailabilityStatus>)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type:
            - >-
              @azure/arm-resourcehealth.AvailabilityStatusesGetByResourceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatus>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource'
    name: >-
      getByResource(string,
      Models.AvailabilityStatusesGetByResourceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets current availability status for a single resource
    syntax:
      content: >-
        function getByResource(resourceUri: string, options?:
        Models.AvailabilityStatusesGetByResourceOptionalParams)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type:
            - Models.AvailabilityStatusesGetByResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesGetByResourceResponse>
        description: Promise<Models.AvailabilityStatusesGetByResourceResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.getByResource_1'
    name: 'getByResource(string, ServiceCallback<AvailabilityStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getByResource(resourceUri: string, callback:
        ServiceCallback<AvailabilityStatus>)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatus>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.list_2'
    name: >-
      list(string, AvailabilityStatusesListOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceUri: string, options:
        AvailabilityStatusesListOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type:
            - '@azure/arm-resourcehealth.AvailabilityStatusesListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.list'
    name: 'list(string, Models.AvailabilityStatusesListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all historical availability transitions and impacting events for a
      single resource. Use

      the nextLink property in the response to get the next page of availability
      status
    syntax:
      content: >-
        function list(resourceUri: string, options?:
        Models.AvailabilityStatusesListOptionalParams)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type:
            - Models.AvailabilityStatusesListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListResponse>
        description: Promise<Models.AvailabilityStatusesListResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.list_1'
    name: 'list(string, ServiceCallback<AvailabilityStatusListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceUri: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type:
            - string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string,
      AvailabilityStatusesListByResourceGroupOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        AvailabilityStatusesListByResourceGroupOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - >-
              @azure/arm-resourcehealth.AvailabilityStatusesListByResourceGroupOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup'
    name: >-
      listByResourceGroup(string,
      Models.AvailabilityStatusesListByResourceGroupOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the current availability status for all the resources in the
      resource group. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.AvailabilityStatusesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - Models.AvailabilityStatusesListByResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListByResourceGroupResponse>
        description: Promise<Models.AvailabilityStatusesListByResourceGroupResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<AvailabilityStatusListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the current availability status for all the resources in the
      resource group. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListByResourceGroupNextResponse>
        description: Promise<Models.AvailabilityStatusesListByResourceGroupNextResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listByResourceGroupNext_1'
    name: >-
      listByResourceGroupNext(string,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId_2'
    name: >-
      listBySubscriptionId(AvailabilityStatusesListBySubscriptionIdOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionId(options:
        AvailabilityStatusesListBySubscriptionIdOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: options
          type:
            - >-
              @azure/arm-resourcehealth.AvailabilityStatusesListBySubscriptionIdOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId'
    name: >-
      listBySubscriptionId(Models.AvailabilityStatusesListBySubscriptionIdOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the current availability status for all the resources in the
      subscription. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        Models.AvailabilityStatusesListBySubscriptionIdOptionalParams)
      parameters:
        - id: options
          type:
            - Models.AvailabilityStatusesListBySubscriptionIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListBySubscriptionIdResponse>
        description: Promise<Models.AvailabilityStatusesListBySubscriptionIdResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionId_1'
    name: listBySubscriptionId(ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionId(callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext'
    name: 'listBySubscriptionIdNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the current availability status for all the resources in the
      subscription. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListBySubscriptionIdNextResponse>
        description: Promise<Models.AvailabilityStatusesListBySubscriptionIdNextResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext_2'
    name: >-
      listBySubscriptionIdNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listBySubscriptionIdNext_1'
    name: >-
      listBySubscriptionIdNext(string,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all historical availability transitions and impacting events for a
      single resource. Use

      the nextLink property in the response to get the next page of availability
      status
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AvailabilityStatusesListNextResponse>
        description: Promise<Models.AvailabilityStatusesListNextResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatuses.listNext_1'
    name: 'listNext(string, ServiceCallback<AvailabilityStatusListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
          description: |
            The callback
    package: '@azure/arm-resourcehealth'
references:
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext'
    name: MicrosoftResourceHealthContext
    spec.typeScript:
      - name: MicrosoftResourceHealthContext
        fullName: MicrosoftResourceHealthContext
        uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext'
  - uid: ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatus>
    name: AvailabilityStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AvailabilityStatus
        fullName: AvailabilityStatus
        uid: '@azure/arm-resourcehealth.AvailabilityStatus'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatusesGetByResourceOptionalParams'
    name: AvailabilityStatusesGetByResourceOptionalParams
    spec.typeScript:
      - name: AvailabilityStatusesGetByResourceOptionalParams
        fullName: AvailabilityStatusesGetByResourceOptionalParams
        uid: >-
          @azure/arm-resourcehealth.AvailabilityStatusesGetByResourceOptionalParams
  - uid: ServiceCallback<@azure/arm-resourcehealth.AvailabilityStatusListResult>
    name: AvailabilityStatusListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AvailabilityStatusListResult
        fullName: AvailabilityStatusListResult
        uid: '@azure/arm-resourcehealth.AvailabilityStatusListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resourcehealth.AvailabilityStatusesListOptionalParams'
    name: AvailabilityStatusesListOptionalParams
    spec.typeScript:
      - name: AvailabilityStatusesListOptionalParams
        fullName: AvailabilityStatusesListOptionalParams
        uid: '@azure/arm-resourcehealth.AvailabilityStatusesListOptionalParams'
  - uid: >-
      @azure/arm-resourcehealth.AvailabilityStatusesListByResourceGroupOptionalParams
    name: AvailabilityStatusesListByResourceGroupOptionalParams
    spec.typeScript:
      - name: AvailabilityStatusesListByResourceGroupOptionalParams
        fullName: AvailabilityStatusesListByResourceGroupOptionalParams
        uid: >-
          @azure/arm-resourcehealth.AvailabilityStatusesListByResourceGroupOptionalParams
  - uid: >-
      @azure/arm-resourcehealth.AvailabilityStatusesListBySubscriptionIdOptionalParams
    name: AvailabilityStatusesListBySubscriptionIdOptionalParams
    spec.typeScript:
      - name: AvailabilityStatusesListBySubscriptionIdOptionalParams
        fullName: AvailabilityStatusesListBySubscriptionIdOptionalParams
        uid: >-
          @azure/arm-resourcehealth.AvailabilityStatusesListBySubscriptionIdOptionalParams
