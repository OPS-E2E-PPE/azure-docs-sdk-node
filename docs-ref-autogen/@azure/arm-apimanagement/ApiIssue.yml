### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.ApiIssue'
    name: ApiIssue
    fullName: ApiIssue
    children:
      - '@azure/arm-apimanagement.ApiIssue.constructor'
      - '@azure/arm-apimanagement.ApiIssue.createOrUpdate_2'
      - '@azure/arm-apimanagement.ApiIssue.createOrUpdate'
      - '@azure/arm-apimanagement.ApiIssue.createOrUpdate_1'
      - '@azure/arm-apimanagement.ApiIssue.deleteMethod'
      - '@azure/arm-apimanagement.ApiIssue.deleteMethod_2'
      - '@azure/arm-apimanagement.ApiIssue.deleteMethod_1'
      - '@azure/arm-apimanagement.ApiIssue.get_2'
      - '@azure/arm-apimanagement.ApiIssue.get'
      - '@azure/arm-apimanagement.ApiIssue.get_1'
      - '@azure/arm-apimanagement.ApiIssue.getEntityTag'
      - '@azure/arm-apimanagement.ApiIssue.getEntityTag_2'
      - '@azure/arm-apimanagement.ApiIssue.getEntityTag_1'
      - '@azure/arm-apimanagement.ApiIssue.listByService_2'
      - '@azure/arm-apimanagement.ApiIssue.listByService'
      - '@azure/arm-apimanagement.ApiIssue.listByService_1'
      - '@azure/arm-apimanagement.ApiIssue.listByServiceNext'
      - '@azure/arm-apimanagement.ApiIssue.listByServiceNext_2'
      - '@azure/arm-apimanagement.ApiIssue.listByServiceNext_1'
      - '@azure/arm-apimanagement.ApiIssue.update'
      - '@azure/arm-apimanagement.ApiIssue.update_2'
      - '@azure/arm-apimanagement.ApiIssue.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ApiIssue.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.constructor'
    name: ApiIssue(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ApiIssue.
    syntax:
      content: 'new ApiIssue(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      ApiIssueCreateOrUpdateOptionalParams, ServiceCallback<IssueContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options:
        ApiIssueCreateOrUpdateOptionalParams, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueContract'
          description: Create parameters.
        - id: options
          type:
            - '@azure/arm-apimanagement.ApiIssueCreateOrUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      Models.ApiIssueCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Issue for an API or updates an existing one.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options?:
        Models.ApiIssueCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueContract'
          description: Create parameters.
        - id: options
          type:
            - Models.ApiIssueCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiIssueCreateOrUpdateResponse>
        description: Promise<Models.ApiIssueCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      ServiceCallback<IssueContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueContract'
          description: Create parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod'
    name: >-
      deleteMethod(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Issue from an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod_1'
    name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.get_2'
    name: >-
      get(string, string, string, string, ApiIssueGetOptionalParams,
      ServiceCallback<IssueContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options: ApiIssueGetOptionalParams, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.ApiIssueGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.get'
    name: 'get(string, string, string, string, Models.ApiIssueGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Issue for an API specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options?: Models.ApiIssueGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - Models.ApiIssueGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiIssueGetResponse>
        description: Promise<Models.ApiIssueGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.get_1'
    name: 'get(string, string, string, string, ServiceCallback<IssueContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, callback: ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag'
    name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiIssueGetEntityTagResponse>
        description: Promise<Models.ApiIssueGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag_2'
    name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag_1'
    name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByService_2'
    name: >-
      listByService(string, string, string, ApiIssueListByServiceOptionalParams,
      ServiceCallback<IssueCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options: ApiIssueListByServiceOptionalParams, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.ApiIssueListByServiceOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByService'
    name: >-
      listByService(string, string, string,
      Models.ApiIssueListByServiceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues associated with the specified API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options?: Models.ApiIssueListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - Models.ApiIssueListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiIssueListByServiceResponse>
        description: Promise<Models.ApiIssueListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByService_1'
    name: 'listByService(string, string, string, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, callback: ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues associated with the specified API.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiIssueListByServiceNextResponse>
        description: Promise<Models.ApiIssueListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext_2'
    name: >-
      listByServiceNext(string, RequestOptionsBase,
      ServiceCallback<IssueCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.update'
    name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing issue for an API.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueUpdateContract'
          description: Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.update_2'
    name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueUpdateContract'
          description: Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiIssue.update_1'
    name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type:
            - string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.IssueUpdateContract'
          description: Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.IssueContract'
    name: IssueContract
    spec.typeScript:
      - name: IssueContract
        fullName: IssueContract
        uid: '@azure/arm-apimanagement.IssueContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.IssueContract>
    name: IssueContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueContract
        fullName: IssueContract
        uid: '@azure/arm-apimanagement.IssueContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.ApiIssueCreateOrUpdateOptionalParams'
    name: ApiIssueCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: ApiIssueCreateOrUpdateOptionalParams
        fullName: ApiIssueCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.ApiIssueCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.ApiIssueGetOptionalParams'
    name: ApiIssueGetOptionalParams
    spec.typeScript:
      - name: ApiIssueGetOptionalParams
        fullName: ApiIssueGetOptionalParams
        uid: '@azure/arm-apimanagement.ApiIssueGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.IssueCollection>
    name: IssueCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueCollection
        fullName: IssueCollection
        uid: '@azure/arm-apimanagement.IssueCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.ApiIssueListByServiceOptionalParams'
    name: ApiIssueListByServiceOptionalParams
    spec.typeScript:
      - name: ApiIssueListByServiceOptionalParams
        fullName: ApiIssueListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.ApiIssueListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.IssueUpdateContract'
    name: IssueUpdateContract
    spec.typeScript:
      - name: IssueUpdateContract
        fullName: IssueUpdateContract
        uid: '@azure/arm-apimanagement.IssueUpdateContract'
