### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.GroupUser'
    name: GroupUser
    fullName: GroupUser
    children:
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
      - '@azure/arm-apimanagement.GroupUser.create'
      - '@azure/arm-apimanagement.GroupUser.create_2'
      - '@azure/arm-apimanagement.GroupUser.create_1'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
      - '@azure/arm-apimanagement.GroupUser.constructor'
      - '@azure/arm-apimanagement.GroupUser.list_2'
      - '@azure/arm-apimanagement.GroupUser.list'
      - '@azure/arm-apimanagement.GroupUser.list_1'
      - '@azure/arm-apimanagement.GroupUser.listNext'
      - '@azure/arm-apimanagement.GroupUser.listNext_2'
      - '@azure/arm-apimanagement.GroupUser.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a GroupUser.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists'
    name: >-
      checkEntityExists(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
        description: Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
    name: >-
      checkEntityExists(string, string, string, string, RequestOptionsBase,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, options: RequestOptionsBase,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
    name: >-
      checkEntityExists(string, string, string, string,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create'
    name: 'create(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add existing user to existing group
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
        description: Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_2'
    name: >-
      create(string, string, string, string, RequestOptionsBase,
      ServiceCallback<UserContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_1'
    name: 'create(string, string, string, string, ServiceCallback<UserContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, callback: ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove existing user from existing group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type:
            - string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.constructor'
    name: GroupUser(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a GroupUser.
    syntax:
      content: 'new GroupUser(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_2'
    name: >-
      list(string, string, string, GroupUserListOptionalParams,
      ServiceCallback<UserCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options: GroupUserListOptionalParams, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.GroupUserListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list'
    name: 'list(string, string, string, Models.GroupUserListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of user entities associated with the group.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options?: Models.GroupUserListOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - Models.GroupUserListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListResponse>
        description: Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_1'
    name: 'list(string, string, string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, callback: ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of user entities associated with the group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
        description: Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_1'
    name: 'listNext(string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserContract>
    name: UserContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserContract
        fullName: UserContract
        uid: '@azure/arm-apimanagement.UserContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserCollection>
    name: UserCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserCollection
        fullName: UserCollection
        uid: '@azure/arm-apimanagement.UserCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'
    name: GroupUserListOptionalParams
    spec.typeScript:
      - name: GroupUserListOptionalParams
        fullName: GroupUserListOptionalParams
        uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'
