### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.ProductGroup'
    name: ProductGroup
    fullName: ProductGroup
    children:
      - '@azure/arm-apimanagement.ProductGroup.checkEntityExists'
      - '@azure/arm-apimanagement.ProductGroup.checkEntityExists_2'
      - '@azure/arm-apimanagement.ProductGroup.checkEntityExists_1'
      - '@azure/arm-apimanagement.ProductGroup.createOrUpdate'
      - '@azure/arm-apimanagement.ProductGroup.createOrUpdate_2'
      - '@azure/arm-apimanagement.ProductGroup.createOrUpdate_1'
      - '@azure/arm-apimanagement.ProductGroup.deleteMethod'
      - '@azure/arm-apimanagement.ProductGroup.deleteMethod_2'
      - '@azure/arm-apimanagement.ProductGroup.deleteMethod_1'
      - '@azure/arm-apimanagement.ProductGroup.listByProduct'
      - '@azure/arm-apimanagement.ProductGroup.listByProduct_2'
      - '@azure/arm-apimanagement.ProductGroup.listByProduct_1'
      - '@azure/arm-apimanagement.ProductGroup.listByProductNext'
      - '@azure/arm-apimanagement.ProductGroup.listByProductNext_2'
      - '@azure/arm-apimanagement.ProductGroup.listByProductNext_1'
      - '@azure/arm-apimanagement.ProductGroup.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a ProductGroup.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.checkEntityExists'
    name: >-
      checkEntityExists(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that Group entity specified by identifier is associated with the
      Product entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, productId: string, groupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.checkEntityExists_2'
    name: >-
      checkEntityExists(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, productId: string, groupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.checkEntityExists_1'
    name: 'checkEntityExists(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, productId: string, groupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.createOrUpdate'
    name: 'createOrUpdate(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds the association between the specified developer group with the
      specified product.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ProductGroupCreateOrUpdateResponse>
        description: Promise<Models.ProductGroupCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, string, RequestOptionsBase,
      ServiceCallback<GroupContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, string,
      ServiceCallback<GroupContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, callback:
        ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the association between the specified group and product.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, groupId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: groupId
          type:
            - string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProduct'
    name: >-
      listByProduct(string, string, string,
      Models.ProductGroupListByProductOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the collection of developer groups associated with the specified
      product.
    syntax:
      content: >-
        function listByProduct(resourceGroupName: string, serviceName: string,
        productId: string, options?:
        Models.ProductGroupListByProductOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type:
            - Models.ProductGroupListByProductOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ProductGroupListByProductResponse>
        description: Promise<Models.ProductGroupListByProductResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProduct_2'
    name: >-
      listByProduct(string, string, string,
      ProductGroupListByProductOptionalParams, ServiceCallback<GroupCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByProduct(resourceGroupName: string, serviceName: string,
        productId: string, options: ProductGroupListByProductOptionalParams,
        callback: ServiceCallback<GroupCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.ProductGroupListByProductOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProduct_1'
    name: 'listByProduct(string, string, string, ServiceCallback<GroupCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByProduct(resourceGroupName: string, serviceName: string,
        productId: string, callback: ServiceCallback<GroupCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: productId
          type:
            - string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProductNext'
    name: 'listByProductNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the collection of developer groups associated with the specified
      product.
    syntax:
      content: >-
        function listByProductNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ProductGroupListByProductNextResponse>
        description: Promise<Models.ProductGroupListByProductNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProductNext_2'
    name: >-
      listByProductNext(string, RequestOptionsBase,
      ServiceCallback<GroupCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByProductNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<GroupCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.listByProductNext_1'
    name: 'listByProductNext(string, ServiceCallback<GroupCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByProductNext(nextPageLink: string, callback:
        ServiceCallback<GroupCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GroupCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ProductGroup.constructor'
    name: ProductGroup(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ProductGroup.
    syntax:
      content: 'new ProductGroup(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.GroupContract>
    name: GroupContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupContract
        fullName: GroupContract
        uid: '@azure/arm-apimanagement.GroupContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.GroupCollection>
    name: GroupCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupCollection
        fullName: GroupCollection
        uid: '@azure/arm-apimanagement.GroupCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.ProductGroupListByProductOptionalParams'
    name: ProductGroupListByProductOptionalParams
    spec.typeScript:
      - name: ProductGroupListByProductOptionalParams
        fullName: ProductGroupListByProductOptionalParams
        uid: '@azure/arm-apimanagement.ProductGroupListByProductOptionalParams'
