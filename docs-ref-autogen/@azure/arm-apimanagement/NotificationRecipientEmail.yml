### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail'
    name: NotificationRecipientEmail
    fullName: NotificationRecipientEmail
    children:
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a NotificationRecipientEmail.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists'
    name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Determine if Notification Recipient Email subscribed to the notification.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, email: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCheckEntityExistsResponse>
        description: Promise<Models.NotificationRecipientEmailCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_2'
    name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, email: string,
        options: RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_1'
    name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, email: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate'
    name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds the Email address to the list of Recipients for the Notification.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCreateOrUpdateResponse>
        description: Promise<Models.NotificationRecipientEmailCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<RecipientEmailContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, options:
        RequestOptionsBase, callback: ServiceCallback<RecipientEmailContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      ServiceCallback<RecipientEmailContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, callback:
        ServiceCallback<RecipientEmailContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod'
    name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the email from the list of Notification.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_2'
    name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_1'
    name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, email: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: email
          type:
            - string
          description: Email identifier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification'
    name: >-
      listByNotification(string, string, Models.NotificationName,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the list of the Notification Recipient Emails subscribed to a
      notification.
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailListByNotificationResponse>
        description: Promise<Models.NotificationRecipientEmailListByNotificationResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_2'
    name: >-
      listByNotification(string, string, Models.NotificationName,
      RequestOptionsBase, ServiceCallback<RecipientEmailCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, options:
        RequestOptionsBase, callback: ServiceCallback<RecipientEmailCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_1'
    name: >-
      listByNotification(string, string, Models.NotificationName,
      ServiceCallback<RecipientEmailCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, callback:
        ServiceCallback<RecipientEmailCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: notificationName
          type:
            - Models.NotificationName
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.constructor'
    name: NotificationRecipientEmail(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a NotificationRecipientEmail.
    syntax:
      content: 'new NotificationRecipientEmail(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
    name: RecipientEmailContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecipientEmailContract
        fullName: RecipientEmailContract
        uid: '@azure/arm-apimanagement.RecipientEmailContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
    name: RecipientEmailCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecipientEmailCollection
        fullName: RecipientEmailCollection
        uid: '@azure/arm-apimanagement.RecipientEmailCollection'
      - name: '>'
        fullName: '>'
