### YamlMime:UniversalReference
items:
  - uid: '@azure/graph.GraphRbacManagementClient'
    name: GraphRbacManagementClient
    fullName: GraphRbacManagementClient
    children:
      - '@azure/graph.GraphRbacManagementClient.acceptLanguage'
      - '@azure/graph.GraphRbacManagementClient.apiVersion'
      - '@azure/graph.GraphRbacManagementClient.applications'
      - '@azure/graph.GraphRbacManagementClient.beginLongRunningRequest'
      - '@azure/graph.GraphRbacManagementClient.credentials'
      - '@azure/graph.GraphRbacManagementClient.deletedApplications'
      - '@azure/graph.GraphRbacManagementClient.domains'
      - '@azure/graph.GraphRbacManagementClient.constructor'
      - '@azure/graph.GraphRbacManagementClient.groups'
      - '@azure/graph.GraphRbacManagementClient.longRunningOperationRetryTimeout'
      - '@azure/graph.GraphRbacManagementClient.oAuth2PermissionGrant'
      - '@azure/graph.GraphRbacManagementClient.objects'
      - '@azure/graph.GraphRbacManagementClient.restoreLROPoller'
      - '@azure/graph.GraphRbacManagementClient.sendLongRunningRequest'
      - '@azure/graph.GraphRbacManagementClient.sendLRORequest'
      - '@azure/graph.GraphRbacManagementClient.sendOperationRequest'
      - '@azure/graph.GraphRbacManagementClient.sendRequest'
      - '@azure/graph.GraphRbacManagementClient.servicePrincipals'
      - '@azure/graph.GraphRbacManagementClient.signedInUser'
      - '@azure/graph.GraphRbacManagementClient.tenantID'
      - '@azure/graph.GraphRbacManagementClient.users'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/graph.GraphRbacManagementClientContext'
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.applications'
    name: applications
    fullName: applications
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'applications: Applications'
      return:
        type:
          - '@azure/graph.Applications'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.deletedApplications'
    name: deletedApplications
    fullName: deletedApplications
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'deletedApplications: DeletedApplications'
      return:
        type:
          - '@azure/graph.DeletedApplications'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.domains'
    name: domains
    fullName: domains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domains: Domains'
      return:
        type:
          - '@azure/graph.Domains'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.constructor'
    name: >-
      GraphRbacManagementClient(ServiceClientCredentials, string,
      Models.GraphRbacManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the GraphRbacManagementClient class.
    syntax:
      content: >-
        new GraphRbacManagementClient(credentials: ServiceClientCredentials,
        tenantID: string, options?: Models.GraphRbacManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: tenantID
          type:
            - string
          description: The tenant ID.
        - id: options
          type:
            - Models.GraphRbacManagementClientOptions
          description: ''
          optional: true
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.groups'
    name: groups
    fullName: groups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'groups: Groups'
      return:
        type:
          - '@azure/graph.Groups'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.oAuth2PermissionGrant'
    name: oAuth2PermissionGrant
    fullName: oAuth2PermissionGrant
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oAuth2PermissionGrant: OAuth2PermissionGrantOperations'
      return:
        type:
          - '@azure/graph.OAuth2PermissionGrantOperations'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.objects'
    name: objects
    fullName: objects
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'objects: Objects'
      return:
        type:
          - '@azure/graph.Objects'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.servicePrincipals'
    name: servicePrincipals
    fullName: servicePrincipals
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'servicePrincipals: ServicePrincipals'
      return:
        type:
          - '@azure/graph.ServicePrincipals'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.signedInUser'
    name: signedInUser
    fullName: signedInUser
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'signedInUser: SignedInUser'
      return:
        type:
          - '@azure/graph.SignedInUser'
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.tenantID'
    name: tenantID
    fullName: tenantID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tenantID: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/graph'
  - uid: '@azure/graph.GraphRbacManagementClient.users'
    name: users
    fullName: users
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'users: Users'
      return:
        type:
          - '@azure/graph.Users'
        description: ''
    package: '@azure/graph'
references:
  - uid: '@azure/graph.GraphRbacManagementClientContext'
    name: GraphRbacManagementClientContext
    spec.typeScript:
      - name: GraphRbacManagementClientContext
        fullName: GraphRbacManagementClientContext
        uid: '@azure/graph.GraphRbacManagementClientContext'
  - uid: '@azure/graph.Applications'
    name: Applications
    spec.typeScript:
      - name: Applications
        fullName: Applications
        uid: '@azure/graph.Applications'
  - uid: '@azure/graph.DeletedApplications'
    name: DeletedApplications
    spec.typeScript:
      - name: DeletedApplications
        fullName: DeletedApplications
        uid: '@azure/graph.DeletedApplications'
  - uid: '@azure/graph.Domains'
    name: Domains
    spec.typeScript:
      - name: Domains
        fullName: Domains
        uid: '@azure/graph.Domains'
  - uid: '@azure/graph.Groups'
    name: Groups
    spec.typeScript:
      - name: Groups
        fullName: Groups
        uid: '@azure/graph.Groups'
  - uid: '@azure/graph.OAuth2PermissionGrantOperations'
    name: OAuth2PermissionGrantOperations
    spec.typeScript:
      - name: OAuth2PermissionGrantOperations
        fullName: OAuth2PermissionGrantOperations
        uid: '@azure/graph.OAuth2PermissionGrantOperations'
  - uid: '@azure/graph.Objects'
    name: Objects
    spec.typeScript:
      - name: Objects
        fullName: Objects
        uid: '@azure/graph.Objects'
  - uid: '@azure/graph.ServicePrincipals'
    name: ServicePrincipals
    spec.typeScript:
      - name: ServicePrincipals
        fullName: ServicePrincipals
        uid: '@azure/graph.ServicePrincipals'
  - uid: '@azure/graph.SignedInUser'
    name: SignedInUser
    spec.typeScript:
      - name: SignedInUser
        fullName: SignedInUser
        uid: '@azure/graph.SignedInUser'
  - uid: '@azure/graph.Users'
    name: Users
    spec.typeScript:
      - name: Users
        fullName: Users
        uid: '@azure/graph.Users'
