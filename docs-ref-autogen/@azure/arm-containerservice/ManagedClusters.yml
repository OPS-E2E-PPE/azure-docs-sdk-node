### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerservice.ManagedClusters'
    name: ManagedClusters
    fullName: ManagedClusters
    children:
      - '@azure/arm-containerservice.ManagedClusters.beginCreateOrUpdate'
      - '@azure/arm-containerservice.ManagedClusters.beginDeleteMethod'
      - '@azure/arm-containerservice.ManagedClusters.beginResetAADProfile'
      - >-
        @azure/arm-containerservice.ManagedClusters.beginResetServicePrincipalProfile
      - >-
        @azure/arm-containerservice.ManagedClusters.beginRotateClusterCertificates
      - '@azure/arm-containerservice.ManagedClusters.beginUpdateTags'
      - '@azure/arm-containerservice.ManagedClusters.createOrUpdate'
      - '@azure/arm-containerservice.ManagedClusters.deleteMethod'
      - '@azure/arm-containerservice.ManagedClusters.get'
      - '@azure/arm-containerservice.ManagedClusters.get_2'
      - '@azure/arm-containerservice.ManagedClusters.get_1'
      - '@azure/arm-containerservice.ManagedClusters.getAccessProfile'
      - '@azure/arm-containerservice.ManagedClusters.getAccessProfile_2'
      - '@azure/arm-containerservice.ManagedClusters.getAccessProfile_1'
      - '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile'
      - '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile_2'
      - '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile_1'
      - '@azure/arm-containerservice.ManagedClusters.list'
      - '@azure/arm-containerservice.ManagedClusters.list_2'
      - '@azure/arm-containerservice.ManagedClusters.list_1'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroup'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroup_2'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroup_1'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext_2'
      - '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext_1'
      - '@azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials'
      - >-
        @azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials_2
      - >-
        @azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials_1
      - >-
        @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials
      - >-
        @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials_2
      - >-
        @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials_1
      - '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials'
      - '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials_2'
      - '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials_1'
      - '@azure/arm-containerservice.ManagedClusters.listNext'
      - '@azure/arm-containerservice.ManagedClusters.listNext_2'
      - '@azure/arm-containerservice.ManagedClusters.listNext_1'
      - '@azure/arm-containerservice.ManagedClusters.constructor'
      - '@azure/arm-containerservice.ManagedClusters.resetAADProfile'
      - '@azure/arm-containerservice.ManagedClusters.resetServicePrincipalProfile'
      - '@azure/arm-containerservice.ManagedClusters.rotateClusterCertificates'
      - '@azure/arm-containerservice.ManagedClusters.updateTags'
    langs:
      - typeScript
    type: class
    summary: Class representing a ManagedClusters.
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, ManagedCluster,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a managed cluster with the specified configuration for
      agents and Kubernetes

      version.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, resourceName:
        string, parameters: ManagedCluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedCluster'
          description: >-
            Parameters supplied to the Create or Update a Managed Cluster
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the managed cluster with a specified resource group and name.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, resourceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.beginResetAADProfile'
    name: >-
      beginResetAADProfile(string, string, ManagedClusterAADProfile,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the AAD Profile for a managed cluster.
    syntax:
      content: >-
        function beginResetAADProfile(resourceGroupName: string, resourceName:
        string, parameters: ManagedClusterAADProfile, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedClusterAADProfile'
          description: >-
            Parameters supplied to the Reset AAD Profile operation for a Managed
            Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: >-
      @azure/arm-containerservice.ManagedClusters.beginResetServicePrincipalProfile
    name: >-
      beginResetServicePrincipalProfile(string, string,
      ManagedClusterServicePrincipalProfile, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the service principal Profile for a managed cluster.
    syntax:
      content: >-
        function beginResetServicePrincipalProfile(resourceGroupName: string,
        resourceName: string, parameters: ManagedClusterServicePrincipalProfile,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedClusterServicePrincipalProfile'
          description: >-
            Parameters supplied to the Reset Service Principal Profile operation
            for a

            Managed Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.beginRotateClusterCertificates'
    name: 'beginRotateClusterCertificates(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Rotate certificates of a managed cluster.
    syntax:
      content: >-
        function beginRotateClusterCertificates(resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.beginUpdateTags'
    name: 'beginUpdateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a managed cluster with the specified tags.
    syntax:
      content: >-
        function beginUpdateTags(resourceGroupName: string, resourceName:
        string, parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.TagsObject'
          description: Parameters supplied to the Update Managed Cluster Tags operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.createOrUpdate'
    name: 'createOrUpdate(string, string, ManagedCluster, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a managed cluster with the specified configuration for
      agents and Kubernetes

      version.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, resourceName: string,
        parameters: ManagedCluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedCluster'
          description: >-
            Parameters supplied to the Create or Update a Managed Cluster
            operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersCreateOrUpdateResponse>
        description: Promise<Models.ManagedClustersCreateOrUpdateResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the managed cluster with a specified resource group and name.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the details of the managed cluster with a specified resource group
      and name.
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersGetResponse>
        description: Promise<Models.ManagedClustersGetResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ManagedCluster>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagedCluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ManagedCluster>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.get_1'
    name: 'get(string, string, ServiceCallback<ManagedCluster>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, callback:
        ServiceCallback<ManagedCluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ManagedCluster>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getAccessProfile'
    name: 'getAccessProfile(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the accessProfile for the specified role name of the managed cluster
      with a specified

      resource group and name.
    syntax:
      content: >-
        function getAccessProfile(resourceGroupName: string, resourceName:
        string, roleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: roleName
          type:
            - string
          description: The name of the role for managed cluster accessProfile resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersGetAccessProfileResponse>
        description: Promise<Models.ManagedClustersGetAccessProfileResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getAccessProfile_2'
    name: >-
      getAccessProfile(string, string, string, RequestOptionsBase,
      ServiceCallback<ManagedClusterAccessProfile>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAccessProfile(resourceGroupName: string, resourceName:
        string, roleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedClusterAccessProfile>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: roleName
          type:
            - string
          description: The name of the role for managed cluster accessProfile resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterAccessProfile>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getAccessProfile_1'
    name: >-
      getAccessProfile(string, string, string,
      ServiceCallback<ManagedClusterAccessProfile>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAccessProfile(resourceGroupName: string, resourceName:
        string, roleName: string, callback:
        ServiceCallback<ManagedClusterAccessProfile>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: roleName
          type:
            - string
          description: The name of the role for managed cluster accessProfile resource.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterAccessProfile>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile'
    name: 'getUpgradeProfile(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the details of the upgrade profile for a managed cluster with a
      specified resource group

      and name.
    syntax:
      content: >-
        function getUpgradeProfile(resourceGroupName: string, resourceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersGetUpgradeProfileResponse>
        description: Promise<Models.ManagedClustersGetUpgradeProfileResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile_2'
    name: >-
      getUpgradeProfile(string, string, RequestOptionsBase,
      ServiceCallback<ManagedClusterUpgradeProfile>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getUpgradeProfile(resourceGroupName: string, resourceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedClusterUpgradeProfile>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterUpgradeProfile>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.getUpgradeProfile_1'
    name: >-
      getUpgradeProfile(string, string,
      ServiceCallback<ManagedClusterUpgradeProfile>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getUpgradeProfile(resourceGroupName: string, resourceName:
        string, callback: ServiceCallback<ManagedClusterUpgradeProfile>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterUpgradeProfile>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of managed clusters in the specified subscription. The
      operation returns properties

      of each managed cluster.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListResponse>
        description: Promise<Models.ManagedClustersListResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ManagedClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.list_1'
    name: list(ServiceCallback<ManagedClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ManagedClusterListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists managed clusters in the specified subscription and resource group.
      The operation returns

      properties of each managed cluster.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListByResourceGroupResponse>
        description: Promise<Models.ManagedClustersListByResourceGroupResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ManagedClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ManagedClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists managed clusters in the specified subscription and resource group.
      The operation returns

      properties of each managed cluster.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListByResourceGroupNextResponse>
        description: Promise<Models.ManagedClustersListByResourceGroupNextResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ManagedClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ManagedClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials'
    name: 'listClusterAdminCredentials(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets cluster admin credential of the managed cluster with a specified
      resource group and name.
    syntax:
      content: >-
        function listClusterAdminCredentials(resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListClusterAdminCredentialsResponse>
        description: Promise<Models.ManagedClustersListClusterAdminCredentialsResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials_2'
    name: >-
      listClusterAdminCredentials(string, string, RequestOptionsBase,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterAdminCredentials(resourceGroupName: string,
        resourceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterAdminCredentials_1'
    name: >-
      listClusterAdminCredentials(string, string,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterAdminCredentials(resourceGroupName: string,
        resourceName: string, callback: ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: >-
      @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials
    name: >-
      listClusterMonitoringUserCredentials(string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets cluster monitoring user credential of the managed cluster with a
      specified resource group

      and name.
    syntax:
      content: >-
        function listClusterMonitoringUserCredentials(resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.ManagedClustersListClusterMonitoringUserCredentialsResponse>
        description: >-
          Promise<Models.ManagedClustersListClusterMonitoringUserCredentialsResponse>
    package: '@azure/arm-containerservice'
  - uid: >-
      @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials_2
    name: >-
      listClusterMonitoringUserCredentials(string, string, RequestOptionsBase,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterMonitoringUserCredentials(resourceGroupName: string,
        resourceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: >-
      @azure/arm-containerservice.ManagedClusters.listClusterMonitoringUserCredentials_1
    name: >-
      listClusterMonitoringUserCredentials(string, string,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterMonitoringUserCredentials(resourceGroupName: string,
        resourceName: string, callback: ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials'
    name: 'listClusterUserCredentials(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets cluster user credential of the managed cluster with a specified
      resource group and name.
    syntax:
      content: >-
        function listClusterUserCredentials(resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListClusterUserCredentialsResponse>
        description: Promise<Models.ManagedClustersListClusterUserCredentialsResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials_2'
    name: >-
      listClusterUserCredentials(string, string, RequestOptionsBase,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterUserCredentials(resourceGroupName: string,
        resourceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listClusterUserCredentials_1'
    name: >-
      listClusterUserCredentials(string, string,
      ServiceCallback<CredentialResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listClusterUserCredentials(resourceGroupName: string,
        resourceName: string, callback: ServiceCallback<CredentialResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.CredentialResults>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of managed clusters in the specified subscription. The
      operation returns properties

      of each managed cluster.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersListNextResponse>
        description: Promise<Models.ManagedClustersListNextResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ManagedClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.listNext_1'
    name: 'listNext(string, ServiceCallback<ManagedClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ManagedClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
          description: |
            The callback
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.constructor'
    name: ManagedClusters(ContainerServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ManagedClusters.
    syntax:
      content: 'new ManagedClusters(client: ContainerServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerservice.ContainerServiceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.resetAADProfile'
    name: >-
      resetAADProfile(string, string, ManagedClusterAADProfile,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the AAD Profile for a managed cluster.
    syntax:
      content: >-
        function resetAADProfile(resourceGroupName: string, resourceName:
        string, parameters: ManagedClusterAADProfile, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedClusterAADProfile'
          description: >-
            Parameters supplied to the Reset AAD Profile operation for a Managed
            Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.resetServicePrincipalProfile'
    name: >-
      resetServicePrincipalProfile(string, string,
      ManagedClusterServicePrincipalProfile, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the service principal Profile for a managed cluster.
    syntax:
      content: >-
        function resetServicePrincipalProfile(resourceGroupName: string,
        resourceName: string, parameters: ManagedClusterServicePrincipalProfile,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.ManagedClusterServicePrincipalProfile'
          description: >-
            Parameters supplied to the Reset Service Principal Profile operation
            for a

            Managed Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.rotateClusterCertificates'
    name: 'rotateClusterCertificates(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Rotate certificates of a managed cluster.
    syntax:
      content: >-
        function rotateClusterCertificates(resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ManagedClusters.updateTags'
    name: 'updateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a managed cluster with the specified tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, resourceName: string,
        parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceName
          type:
            - string
          description: The name of the managed cluster resource.
        - id: parameters
          type:
            - '@azure/arm-containerservice.TagsObject'
          description: Parameters supplied to the Update Managed Cluster Tags operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagedClustersUpdateTagsResponse>
        description: Promise<Models.ManagedClustersUpdateTagsResponse>
    package: '@azure/arm-containerservice'
references:
  - uid: '@azure/arm-containerservice.ContainerServiceClientContext'
    name: ContainerServiceClientContext
    spec.typeScript:
      - name: ContainerServiceClientContext
        fullName: ContainerServiceClientContext
        uid: '@azure/arm-containerservice.ContainerServiceClientContext'
  - uid: '@azure/arm-containerservice.ManagedCluster'
    name: ManagedCluster
    spec.typeScript:
      - name: ManagedCluster
        fullName: ManagedCluster
        uid: '@azure/arm-containerservice.ManagedCluster'
  - uid: '@azure/arm-containerservice.ManagedClusterAADProfile'
    name: ManagedClusterAADProfile
    spec.typeScript:
      - name: ManagedClusterAADProfile
        fullName: ManagedClusterAADProfile
        uid: '@azure/arm-containerservice.ManagedClusterAADProfile'
  - uid: '@azure/arm-containerservice.ManagedClusterServicePrincipalProfile'
    name: ManagedClusterServicePrincipalProfile
    spec.typeScript:
      - name: ManagedClusterServicePrincipalProfile
        fullName: ManagedClusterServicePrincipalProfile
        uid: '@azure/arm-containerservice.ManagedClusterServicePrincipalProfile'
  - uid: '@azure/arm-containerservice.TagsObject'
    name: TagsObject
    spec.typeScript:
      - name: TagsObject
        fullName: TagsObject
        uid: '@azure/arm-containerservice.TagsObject'
  - uid: ServiceCallback<@azure/arm-containerservice.ManagedCluster>
    name: ManagedCluster>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedCluster
        fullName: ManagedCluster
        uid: '@azure/arm-containerservice.ManagedCluster'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.ManagedClusterAccessProfile>
    name: ManagedClusterAccessProfile>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedClusterAccessProfile
        fullName: ManagedClusterAccessProfile
        uid: '@azure/arm-containerservice.ManagedClusterAccessProfile'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.ManagedClusterUpgradeProfile>
    name: ManagedClusterUpgradeProfile>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedClusterUpgradeProfile
        fullName: ManagedClusterUpgradeProfile
        uid: '@azure/arm-containerservice.ManagedClusterUpgradeProfile'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.ManagedClusterListResult>
    name: ManagedClusterListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagedClusterListResult
        fullName: ManagedClusterListResult
        uid: '@azure/arm-containerservice.ManagedClusterListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.CredentialResults>
    name: CredentialResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CredentialResults
        fullName: CredentialResults
        uid: '@azure/arm-containerservice.CredentialResults'
      - name: '>'
        fullName: '>'
