### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations'
    name: PersonGroupOperations
    fullName: PersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.PersonGroupOperations.create'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a PersonGroupOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create'
    name: 'create(string, Models.PersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Create a new person group with specified personGroupId, name, user-provided userData and\nrecognitionModel.\n<br /> A person group is the container of the uploaded person data, including face recognition\nfeatures.\n<br /> After creation, use [PersonGroup Person -\nCreate](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c) to add\npersons into the group, and then call [PersonGroup -\nTrain](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) to get this\ngroup ready for [Face -\nIdentify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).\n<br /> No image will be stored. Only the person's extracted face features and userData will be\nstored on server until [PersonGroup Person -\nDelete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) or\n[PersonGroup -\nDelete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) is called.\n<br/>'recognitionModel' should be specified to associate with this person group. The default\nvalue for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly\nspecify the model you need in this parameter. New faces that are added to an existing person\ngroup will use the recognition model that's already associated with the collection. Existing\nface features in a person group can't be updated to features extracted by another version of\nrecognition model.\n* 'recognition_01': The default recognition model for [PersonGroup -\nCreate](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244). All those\nperson groups created before 2019 March are bonded with this recognition model.\n* 'recognition_02': Recognition model released in 2019 March. 'recognition_02' is recommended\nsince its\_overall accuracy is improved compared with 'recognition_01'.\nPerson group quota:\n* Free-tier subscription quota: 1,000 person groups. Each holds up to 1,000 persons.\n* S0-tier subscription quota: 1,000,000 person groups. Each holds up to 10,000 persons.\n* to handle larger scale face identification problem, please consider using\n[LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d)."
    syntax:
      content: >-
        function create(personGroupId: string, options?:
        Models.PersonGroupCreateOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - Models.PersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
    name: 'create(string, PersonGroupCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(personGroupId: string, options:
        PersonGroupCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person group. Persisted face features of all people in
      the person group will

      also be deleted.
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get'
    name: 'get(string, Models.PersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve person group name, userData and recognitionModel. To get person
      information under this

      personGroup, use [PersonGroup Person -

      List](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).
    syntax:
      content: >-
        function get(personGroupId: string, options?:
        Models.PersonGroupGetOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - Models.PersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
        description: Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
    name: 'get(string, PersonGroupGetOptionalParams, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(personGroupId: string, options:
        PersonGroupGetOptionalParams, callback: ServiceCallback<PersonGroup>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(personGroupId: string, callback:
        ServiceCallback<PersonGroup>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the training status of a person group (completed or ongoing).
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
        description: Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
    name: >-
      getTrainingStatus(string, RequestOptionsBase,
      ServiceCallback<TrainingStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, callback:
        ServiceCallback<TrainingStatus>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list'
    name: list(Models.PersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List person groups’ personGroupId, name, userData and recognitionModel.<br
      />

      * Person groups are stored in alphabetical order of personGroupId.

      * "start" parameter (string, optional) is a user-provided personGroupId
      value that returned

      entries have larger ids by string comparison. "start" set to empty to
      indicate return from the

      first item.

      * "top" parameter (int, optional) specifies the number of entries to
      return. A maximal of 1000

      entries can be returned in one call. To fetch more, you can specify
      "start" with the last

      returned entry’s Id of the current call.

      <br />

      For example, total 5 person groups: "group1", ..., "group5".

      <br /> "start=&top=" will return all 5 groups.

      <br /> "start=&top=2" will return "group1", "group2".

      <br /> "start=group2&top=3" will return "group3", "group4", "group5".
    syntax:
      content: 'function list(options?: Models.PersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
        description: Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
    name: 'list(PersonGroupListOptionalParams, ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: PersonGroupListOptionalParams, callback:
        ServiceCallback<PersonGroup[]>)
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
    name: 'list(ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
    name: PersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a PersonGroupOperations.
    syntax:
      content: 'new PersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queue a person group training task, the training task may not be started
      immediately.
    syntax:
      content: >-
        function train(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function train(personGroupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update'
    name: 'update(string, Models.PersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update an existing person group's display name and userData. The
      properties which does not

      appear in request body will not be updated.
    syntax:
      content: >-
        function update(personGroupId: string, options?:
        Models.PersonGroupUpdateOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - Models.PersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
    name: 'update(string, PersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(personGroupId: string, options:
        PersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
    name: PersonGroupCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupCreateOptionalParams
        fullName: PersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
    name: PersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
    name: PersonGroupGetOptionalParams
    spec.typeScript:
      - name: PersonGroupGetOptionalParams
        fullName: PersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
    name: 'PersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
    name: PersonGroupListOptionalParams
    spec.typeScript:
      - name: PersonGroupListOptionalParams
        fullName: PersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
    name: PersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupUpdateOptionalParams
        fullName: PersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
