### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations'
    name: LargePersonGroupOperations
    fullName: LargePersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get_1'
      - >-
        @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus
      - >-
        @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_2
      - >-
        @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_1
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a LargePersonGroupOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_2'
    name: >-
      create(string, LargePersonGroupCreateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(largePersonGroupId: string, options:
        LargePersonGroupCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create'
    name: 'create(string, Models.LargePersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Create a new large person group with user-specified largePersonGroupId, name, an optional\nuserData and recognitionModel.\n<br /> A large person group is the container of the uploaded person data, including face\nrecognition feature, and up to 1,000,000\npeople.\n<br /> After creation, use [LargePersonGroup Person -\nCreate](/docs/services/563879b61984550e40cbbe8d/operations/599adcba3a7b9412a4d53f40) to add\nperson into the group, and call [LargePersonGroup -\nTrain](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4) to get this\ngroup ready for [Face -\nIdentify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).\n<br /> No image will be stored. Only the person's extracted face features and userData will be\nstored on server until [LargePersonGroup Person -\nDelete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) or\n[LargePersonGroup -\nDelete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f) is called.\n<br/>'recognitionModel' should be specified to associate with this large person group. The\ndefault value for 'recognitionModel' is 'recognition_01', if the latest model needed, please\nexplicitly specify the model you need in this parameter. New faces that are added to an existing\nlarge person group will use the recognition model that's already associated with the collection.\nExisting face features in a large person group can't be updated to features extracted by another\nversion of recognition model.\n* 'recognition_01': The default recognition model for [LargePersonGroup -\nCreate](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d). All those\nlarge person groups created before 2019 March are bonded with this recognition model.\n* 'recognition_02': Recognition model released in 2019 March. 'recognition_02' is recommended\nsince its\_overall accuracy is improved compared with 'recognition_01'.\nLarge person group quota:\n* Free-tier subscription quota: 1,000 large person groups.\n* S0-tier subscription quota: 1,000,000 large person groups."
    syntax:
      content: >-
        function create(largePersonGroupId: string, options?:
        Models.LargePersonGroupCreateOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - Models.LargePersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing large person group. Persisted face features of all
      people in the large person

      group will also be deleted.
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_2'
    name: >-
      get(string, LargePersonGroupGetOptionalParams,
      ServiceCallback<LargePersonGroup>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(largePersonGroupId: string, options:
        LargePersonGroupGetOptionalParams, callback:
        ServiceCallback<LargePersonGroup>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get'
    name: 'get(string, Models.LargePersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve the information of a large person group, including its name,
      userData and

      recognitionModel. This API returns large person group information only,
      use [LargePersonGroup

      Person -
      List](/docs/services/563879b61984550e40cbbe8d/operations/599adda06ac60f11b48b5aa1)

      instead to retrieve person information under the large person group.
    syntax:
      content: >-
        function get(largePersonGroupId: string, options?:
        Models.LargePersonGroupGetOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - Models.LargePersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupGetResponse>
        description: Promise<Models.LargePersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<LargePersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(largePersonGroupId: string, callback:
        ServiceCallback<LargePersonGroup>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve the training status of a large person group (completed or
      ongoing).
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupGetTrainingStatusResponse>
        description: Promise<Models.LargePersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_2
    name: >-
      getTrainingStatus(string, RequestOptionsBase,
      ServiceCallback<TrainingStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_1
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, callback:
        ServiceCallback<TrainingStatus>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.constructor'
    name: LargePersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a LargePersonGroupOperations.
    syntax:
      content: 'new LargePersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_2'
    name: >-
      list(LargePersonGroupListOptionalParams,
      ServiceCallback<LargePersonGroup[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: LargePersonGroupListOptionalParams, callback:
        ServiceCallback<LargePersonGroup[]>)
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list'
    name: list(Models.LargePersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all existing large person groups’ largePersonGroupId, name, userData
      and

      recognitionModel.<br />

      * Large person groups are stored in alphabetical order of
      largePersonGroupId.

      * "start" parameter (string, optional) is a user-provided
      largePersonGroupId value that returned

      entries have larger ids by string comparison. "start" set to empty to
      indicate return from the

      first item.

      * "top" parameter (int, optional) specifies the number of entries to
      return. A maximal of 1000

      entries can be returned in one call. To fetch more, you can specify
      "start" with the last

      returned entry’s Id of the current call.

      <br />

      For example, total 5 large person groups: "group1", ..., "group5".

      <br /> "start=&top=" will return all 5 groups.

      <br /> "start=&top=2" will return "group1", "group2".

      <br /> "start=group2&top=3" will return "group3", "group4", "group5".
    syntax:
      content: 'function list(options?: Models.LargePersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.LargePersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupListResponse>
        description: Promise<Models.LargePersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_1'
    name: 'list(ServiceCallback<LargePersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<LargePersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queue a large person group training task, the training task may not be
      started immediately.
    syntax:
      content: >-
        function train(largePersonGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function train(largePersonGroupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function train(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_2'
    name: >-
      update(string, LargePersonGroupUpdateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(largePersonGroupId: string, options:
        LargePersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update'
    name: 'update(string, Models.LargePersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update an existing large person group's display name and userData. The
      properties which does not

      appear in request body will not be updated.
    syntax:
      content: >-
        function update(largePersonGroupId: string, options?:
        Models.LargePersonGroupUpdateOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - Models.LargePersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
    name: LargePersonGroupCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupCreateOptionalParams
        fullName: LargePersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
    name: LargePersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargePersonGroup
        fullName: LargePersonGroup
        uid: '@azure/cognitiveservices-face.LargePersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
    name: LargePersonGroupGetOptionalParams
    spec.typeScript:
      - name: LargePersonGroupGetOptionalParams
        fullName: LargePersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
    name: 'LargePersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargePersonGroup
        fullName: LargePersonGroup
        uid: '@azure/cognitiveservices-face.LargePersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
    name: LargePersonGroupListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupListOptionalParams
        fullName: LargePersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'
    name: LargePersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupUpdateOptionalParams
        fullName: LargePersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'
