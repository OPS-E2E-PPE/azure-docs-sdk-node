### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.OperationStatus'
    name: OperationStatus
    fullName: OperationStatus
    children:
      - '@azure/cognitiveservices-face.OperationStatus.createdTime'
      - '@azure/cognitiveservices-face.OperationStatus.lastActionTime'
      - '@azure/cognitiveservices-face.OperationStatus.message'
      - '@azure/cognitiveservices-face.OperationStatus.resourceLocation'
      - '@azure/cognitiveservices-face.OperationStatus.status'
    langs:
      - typeScript
    type: interface
    summary: >-
      Operation status object. Operation refers to the asynchronous backend task
      including taking a

      snapshot and applying a snapshot.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.OperationStatus.createdTime'
    name: createdTime
    fullName: createdTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A combined UTC date and time string that describes the time when the
      operation (take or apply

      a snapshot) is requested. E.g. 2018-12-25T11:41:02.2331413Z.
    syntax:
      content: 'createdTime: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.OperationStatus.lastActionTime'
    name: lastActionTime
    fullName: lastActionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A combined UTC date and time string that describes the last time the
      operation (take or apply

      a snapshot) is actively migrating data. The lastActionTime will keep
      increasing until the

      operation finishes. E.g. 2018-12-25T11:51:27.8705696Z.
    optional: true
    syntax:
      content: 'lastActionTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.OperationStatus.message'
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Show failure message when operation fails (omitted when operation
      succeeds).
    optional: true
    syntax:
      content: 'message?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.OperationStatus.resourceLocation'
    name: resourceLocation
    fullName: resourceLocation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When the operation succeeds successfully, for snapshot taking operation
      the snapshot id will

      be included in this field, and for snapshot applying operation, the path
      to get the target

      object will be returned in this field.
    optional: true
    syntax:
      content: 'resourceLocation?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.OperationStatus.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Operation status: notstarted, running, succeeded, failed. If the operation
      is requested and

      waiting to perform, the status is notstarted. If the operation is ongoing
      in backend, the

      status is running. Status succeeded means the operation is completed
      successfully,

      specifically for snapshot taking operation, it illustrates the snapshot is
      well taken and

      ready to apply, and for snapshot applying operation, it presents the
      target object has

      finished creating by the snapshot and ready to be used. Status failed is
      often caused by

      editing the source object while taking the snapshot or editing the target
      object while

      applying the snapshot before completion, see the field "message" to check
      the failure reason.

      Possible values include: 'notstarted', 'running', 'succeeded', 'failed'
    syntax:
      content: 'status: OperationStatusType'
      return:
        type:
          - '@azure/cognitiveservices-face.OperationStatusType'
        description: ''
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.OperationStatusType'
    name: OperationStatusType
    spec.typeScript:
      - name: OperationStatusType
        fullName: OperationStatusType
        uid: '@azure/cognitiveservices-face.OperationStatusType'
