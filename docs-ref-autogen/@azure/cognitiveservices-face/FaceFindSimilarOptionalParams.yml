### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    fullName: FaceFindSimilarOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
      - >-
        @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
      - >-
        @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId
      - >-
        @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
      - >-
        @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
    name: faceIds
    fullName: faceIds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array of candidate faceIds. All of them are created by Face - Detect
      and the faceIds will

      expire 24 hours after the detection call. The number of faceIds is limited
      to 1000. Parameter

      faceListId, largeFaceListId and faceIds should not be provided at the same
      time.
    optional: true
    syntax:
      content: 'faceIds?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
    name: faceListId
    fullName: faceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An existing user-specified unique candidate face list, created in Face
      List - Create a Face

      List. Face list contains a set of persistedFaceIds which are persisted and
      will never expire.

      Parameter faceListId, largeFaceListId and faceIds should not be provided
      at the same time.
    optional: true
    syntax:
      content: 'faceListId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId
    name: largeFaceListId
    fullName: largeFaceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An existing user-specified unique candidate large face list, created in
      LargeFaceList -

      Create. Large face list contains a set of persistedFaceIds which are
      persisted and will never

      expire. Parameter faceListId, largeFaceListId and faceIds should not be
      provided at the same

      time.
    optional: true
    syntax:
      content: 'largeFaceListId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of top similar faces returned. The valid range is [1, 1000].
      Default value: 20.
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Similar face searching mode. It can be "matchPerson" or "matchFace".
      Possible values include:

      'matchPerson', 'matchFace'. Default value: 'matchPerson'.
    optional: true
    syntax:
      content: 'mode?: FindSimilarMatchMode'
      return:
        type:
          - '@azure/cognitiveservices-face.FindSimilarMatchMode'
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'
    name: FindSimilarMatchMode
    spec.typeScript:
      - name: FindSimilarMatchMode
        fullName: FindSimilarMatchMode
        uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'
