### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a LargePersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      LargePersonGroupPersonAddFaceFromStreamOptionalParams,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options:
        LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a person into a large person group for face identification
      or verification. To

      deal with an image contains multiple faces, input face can be specified as
      an image with a

      targetFace rectangle. It returns a persistedFaceId representing the added
      face. No image will be

      stored. Only the extracted face feature will be stored on server until
      [LargePersonGroup

      PersonFace -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3),

      [LargePersonGroup Person -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2)
      or

      [LargePersonGroup -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)
      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
      thereâ€™s no

      guarantee to detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

      | Model | Recommended use-case(s) |

      | ---------- | -------- |

      | 'detection_01': | The default detection model for [LargePersonGroup
      Person - Add

      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42).
      Recommend

      for near frontal face detection. For scenarios with exceptionally large
      angle (head-pose) faces,

      occluded faces or wrong image orientation, the faces in such cases may not
      be detected. |

      | 'detection_02': | Detection model released in 2019 May with improved
      accuracy especially on

      small, side and blurry faces. |
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options?:
        Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
        description: Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    name: >-
      addFaceFromUrl(string, string, string,
      LargePersonGroupPersonAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options:
        LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    name: >-
      addFaceFromUrl(string, string, string,
      Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a person into a large person group for face identification
      or verification. To

      deal with an image contains multiple faces, input face can be specified as
      an image with a

      targetFace rectangle. It returns a persistedFaceId representing the added
      face. No image will be

      stored. Only the extracted face feature will be stored on server until
      [LargePersonGroup

      PersonFace -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3),

      [LargePersonGroup Person -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2)
      or

      [LargePersonGroup -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)
      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
      thereâ€™s no

      guarantee to detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

      | Model | Recommended use-case(s) |

      | ---------- | -------- |

      | 'detection_01': | The default detection model for [LargePersonGroup
      Person - Add

      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42).
      Recommend

      for near frontal face detection. For scenarios with exceptionally large
      angle (head-pose) faces,

      occluded faces or wrong image orientation, the faces in such cases may not
      be detected. |

      | 'detection_02': | Detection model released in 2019 May with improved
      accuracy especially on

      small, side and blurry faces. |
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options?:
        Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
        description: Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    name: >-
      create(string, LargePersonGroupPersonCreateOptionalParams,
      ServiceCallback<Person>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(largePersonGroupId: string, options:
        LargePersonGroupPersonCreateOptionalParams, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    name: 'create(string, Models.LargePersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified large person group.
    syntax:
      content: >-
        function create(largePersonGroupId: string, options?:
        Models.LargePersonGroupPersonCreateOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - Models.LargePersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
        description: Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(largePersonGroupId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a face from a person in a large person group by specified
      largePersonGroupId, personId

      and persistedFaceId.

      <br /> Adding/deleting faces to/from a same person will be processed
      sequentially.

      Adding/deleting faces to/from different persons are processed in parallel.
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    name: >-
      deleteFace(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a large person group. The persistedFaceId,
      userData, person name

      and face feature in the person entry will all be deleted.
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's name and userData, and the persisted faceIds
      representing the registered

      person face feature.
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
        description: Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its

      belonging largePersonGroupId).
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
        description: Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    name: >-
      getFace(string, string, string, RequestOptionsBase,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    name: LargePersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a LargePersonGroupPerson.
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    name: >-
      list(string, LargePersonGroupPersonListOptionalParams,
      ServiceCallback<Person[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(largePersonGroupId: string, options:
        LargePersonGroupPersonListOptionalParams, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    name: 'list(string, Models.LargePersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a large person group, and retrieve person information
      (including personId,

      name, userData and persistedFaceIds of registered faces of the person).
    syntax:
      content: >-
        function list(largePersonGroupId: string, options?:
        Models.LargePersonGroupPersonListOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: options
          type:
            - Models.LargePersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
        description: Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(largePersonGroupId: string, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    name: >-
      update(string, string, LargePersonGroupPersonUpdateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options:
        LargePersonGroupPersonUpdateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    name: 'update(string, string, Models.LargePersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options?:
        Models.LargePersonGroupPersonUpdateOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    name: >-
      updateFace(string, string, string,
      LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options:
        LargePersonGroupPersonUpdateFaceOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    name: >-
      updateFace(string, string, string,
      Models.LargePersonGroupPersonUpdateFaceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a person persisted face's userData field.
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?:
        Models.LargePersonGroupPersonUpdateFaceOptionalParams)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Id referencing a particular large person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams
    name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        uid: >-
          @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams
  - uid: >-
      @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        uid: >-
          @azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
    name: LargePersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonCreateOptionalParams
        fullName: LargePersonGroupPersonCreateOptionalParams
        uid: >-
          @azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
    name: LargePersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonListOptionalParams
        fullName: LargePersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
    name: LargePersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateOptionalParams
        fullName: LargePersonGroupPersonUpdateOptionalParams
        uid: >-
          @azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams
  - uid: >-
      @azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams
    name: LargePersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateFaceOptionalParams
        fullName: LargePersonGroupPersonUpdateFaceOptionalParams
        uid: >-
          @azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams
