### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a PersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      Models.PersonGroupPersonAddFaceFromStreamOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e),

      [PersonGroup Person -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d)
      or

      [PersonGroup -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245)
      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).

      *   Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      *   Each person entry can hold up to 248 faces.

      *   JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size

      is from 1KB to 6MB.

      *   "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as

      an error. If the provided "targetFace" rectangle is not returned from
      [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
      thereâ€™s no

      guarantee to detect and add the face successfully.

      *   Out of detectable face size (36x36 - 4096x4096 pixels), large
      head-pose, or large occlusions

      will cause failures.

      *   Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

      | Model | Recommended use-case(s) |

      | ---------- | -------- |

      | 'detection_01': | The default detection model for [PersonGroup Person -
      Add

      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b).
      Recommend

      for near frontal face detection. For scenarios with exceptionally large
      angle (head-pose) faces,

      occluded faces or wrong image orientation, the faces in such cases may not
      be detected. |

      | 'detection_02': | Detection model released in 2019 May with improved
      accuracy especially on

      small, side and blurry faces. |
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options?:
        Models.PersonGroupPersonAddFaceFromStreamOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
        description: Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      PersonGroupPersonAddFaceFromStreamOptionalParams,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options:
        PersonGroupPersonAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: >-
      addFaceFromUrl(string, string, string,
      Models.PersonGroupPersonAddFaceFromUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e),

      [PersonGroup Person -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d)
      or

      [PersonGroup -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245)
      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).

      *   Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      *   Each person entry can hold up to 248 faces.

      *   JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size

      is from 1KB to 6MB.

      *   "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as

      an error. If the provided "targetFace" rectangle is not returned from
      [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
      thereâ€™s no

      guarantee to detect and add the face successfully.

      *   Out of detectable face size (36x36 - 4096x4096 pixels), large
      head-pose, or large occlusions

      will cause failures.

      *   Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

      | Model | Recommended use-case(s) |

      | ---------- | -------- |

      | 'detection_01': | The default detection model for [PersonGroup Person -
      Add

      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b).
      Recommend

      for near frontal face detection. For scenarios with exceptionally large
      angle (head-pose) faces,

      occluded faces or wrong image orientation, the faces in such cases may not
      be detected. |

      | 'detection_02': | Detection model released in 2019 May with improved
      accuracy especially on

      small, side and blurry faces. |
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
        description: Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: >-
      addFaceFromUrl(string, string, string,
      PersonGroupPersonAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, options: PersonGroupPersonAddFaceFromUrlOptionalParams,
        callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified person group.
    syntax:
      content: >-
        function create(personGroupId: string, options?:
        Models.PersonGroupPersonCreateOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
        description: Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: >-
      create(string, PersonGroupPersonCreateOptionalParams,
      ServiceCallback<Person>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(personGroupId: string, options:
        PersonGroupPersonCreateOptionalParams, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(personGroupId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a face from a person in a person group by specified personGroupId,
      personId and

      persistedFaceId.

      <br /> Adding/deleting faces to/from a same person will be processed
      sequentially.

      Adding/deleting faces to/from different persons are processed in parallel.
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: >-
      deleteFace(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a person group. The persistedFaceId,
      userData, person name and

      face feature in the person entry will all be deleted.
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name and userData.
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
        description: Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its

      belonging personGroupId).
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
        description: Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: >-
      getFace(string, string, string, RequestOptionsBase,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a person group, and retrieve person information
      (including personId, name,

      userData and persistedFaceIds of registered faces of the person).
    syntax:
      content: >-
        function list(personGroupId: string, options?:
        Models.PersonGroupPersonListOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
        description: Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: >-
      list(string, PersonGroupPersonListOptionalParams,
      ServiceCallback<Person[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(personGroupId: string, options:
        PersonGroupPersonListOptionalParams, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(personGroupId: string, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a PersonGroupPerson.
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, options?:
        Models.PersonGroupPersonUpdateOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: >-
      update(string, string, PersonGroupPersonUpdateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, options:
        PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: >-
      updateFace(string, string, string,
      Models.PersonGroupPersonUpdateFaceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e),

      [PersonGroup Person -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d)
      or

      [PersonGroup -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245)
      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
      thereâ€™s no

      guarantee to detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?:
        Models.PersonGroupPersonUpdateFaceOptionalParams)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: >-
      updateFace(string, string, string,
      PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, options:
        PersonGroupPersonUpdateFaceOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id referencing a particular person group.
        - id: personId
          type:
            - string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: >-
          @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams
  - uid: >-
      @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: >-
          @azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: >-
          @azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams
