### YamlMime:UniversalReference
items:
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore'
    name: BlobCheckpointStore
    fullName: BlobCheckpointStore
    children:
      - '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.constructor'
      - '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.claimOwnership'
      - >-
        @azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.listCheckpoints
      - '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.listOwnership'
      - >-
        @azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.updateCheckpoint
    langs:
      - typeScript
    type: class
    summary: >-
      An implementation of CheckpointStore that uses Azure Blob Storage to
      persist checkpoint data.
    package: '@azure/eventhubs-checkpointstore-blob'
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.constructor'
    name: BlobCheckpointStore(ContainerClient)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BlobCheckpointStore(containerClient: ContainerClient)'
      parameters:
        - id: containerClient
          type:
            - ContainerClient
          description: ''
    package: '@azure/eventhubs-checkpointstore-blob'
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.claimOwnership'
    name: 'claimOwnership(PartitionOwnership[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Claim ownership of a list of partitions. This will return the list of
      partitions that were

      successfully claimed.
    syntax:
      content: 'function claimOwnership(partitionOwnership: PartitionOwnership[])'
      parameters:
        - id: partitionOwnership
          type:
            - 'PartitionOwnership[]'
          description: The list of partition ownership this instance is claiming to own.
      return:
        type:
          - 'Promise<PartitionOwnership[]>'
        description: A list partitions this instance successfully claimed ownership.
    package: '@azure/eventhubs-checkpointstore-blob'
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.listCheckpoints'
    name: 'listCheckpoints(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the checkpoints in a data store for a given namespace, eventhub
      and consumer group.
    syntax:
      content: >-
        function listCheckpoints(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type:
            - string
          description: The event hub name.
        - id: consumerGroup
          type:
            - string
          description: |
            The consumer group name.
      return:
        type:
          - 'Promise<Checkpoint[]>'
        description: ''
    package: '@azure/eventhubs-checkpointstore-blob'
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.listOwnership'
    name: 'listOwnership(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the list of all existing partition ownership from the underlying data
      store. May return empty

      results if there are is no existing ownership information.

      Partition Ownership contains the information on which
      `EventHubConsumerClient` subscribe call is currently processing the
      partition.
    syntax:
      content: >-
        function listOwnership(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type:
            - string
          description: The event hub name.
        - id: consumerGroup
          type:
            - string
          description: The consumer group name.
      return:
        type:
          - 'Promise<PartitionOwnership[]>'
        description: >-
          Partition ownership details of all the partitions that have had an
          owner.
    package: '@azure/eventhubs-checkpointstore-blob'
  - uid: '@azure/eventhubs-checkpointstore-blob.BlobCheckpointStore.updateCheckpoint'
    name: updateCheckpoint(Checkpoint)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the checkpoint in the data store for a partition.
    syntax:
      content: 'function updateCheckpoint(checkpoint: Checkpoint)'
      parameters:
        - id: checkpoint
          type:
            - Checkpoint
          description: The checkpoint.
      return:
        type:
          - Promise<void>
        description: The new etag on successful update.
    package: '@azure/eventhubs-checkpointstore-blob'
