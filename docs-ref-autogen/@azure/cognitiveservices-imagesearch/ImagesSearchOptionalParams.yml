### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams'
    name: ImagesSearchOptionalParams
    fullName: ImagesSearchOptionalParams
    children:
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.acceptLanguage
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.aspect'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.clientId'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.clientIp'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.color'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.count'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.countryCode
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.freshness
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.height'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.id'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.imageContent
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.imageType
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.license'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.location'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.market'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxFileSize
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxHeight
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxWidth'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minFileSize
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minHeight
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minWidth'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.offset'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.safeSearch
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.setLang'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.size'
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.timeout'
      - >-
        @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.userAgent
      - '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.width'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A comma-delimited list of one or more languages to use for user interface
      strings. The list is

      in decreasing order of preference. For additional information, including
      expected format, see

      [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
      header and the

      [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)

      query parameter are mutually exclusive; do not specify both. If you set
      this header, you must

      also specify the

      [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)

      query parameter. To determine the market to return results for, Bing uses
      the first supported

      language it finds from the list and combines it with the cc parameter
      value. If the list does

      not include a supported language, Bing finds the closest language and
      market that supports the

      request or it uses an aggregated or default market for the results. To
      determine the market

      that Bing used, see the BingAPIs-Market header. Use this header and the cc
      query parameter

      only if you specify multiple languages. Otherwise, use the

      [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)

      and

      [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)

      query parameters. A user interface string is a string that's used as a
      label in a user

      interface. There are few user interface strings in the JSON response
      objects. Any links to

      Bing.com properties in the response objects apply the specified language.
    optional: true
    syntax:
      content: 'acceptLanguage?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.aspect'
    name: aspect
    fullName: aspect
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following aspect ratios. All: Do not filter by
      aspect.Specifying this

      value is the same as not specifying the aspect parameter. Square: Return
      images with standard

      aspect ratio. Wide: Return images with wide screen aspect ratio. Tall:
      Return images with tall

      aspect ratio. Possible values include: 'All', 'Square', 'Wide', 'Tall'
    optional: true
    syntax:
      content: 'aspect?: ImageAspect'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageAspect'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.clientId'
    name: clientId
    fullName: clientId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Bing uses this header to provide users with consistent behavior across
      Bing API calls. Bing

      often flights new features and improvements, and it uses the client ID as
      a key for assigning

      traffic on different flights. If you do not use the same client ID for a
      user across multiple

      requests, then Bing may assign the user to multiple conflicting flights.
      Being assigned to

      multiple conflicting flights can lead to an inconsistent user experience.
      For example, if the

      second request has a different flight assignment than the first, the
      experience may be

      unexpected. Also, Bing can use the client ID to tailor web results to that
      client IDâ€™s search

      history, providing a richer experience for the user. Bing also uses this
      header to help

      improve result rankings by analyzing the activity generated by a client
      ID. The relevance

      improvements help with better quality of results delivered by Bing APIs
      and in turn enables

      higher click-through rates for the API consumer. IMPORTANT: Although
      optional, you should

      consider this header required. Persisting the client ID across multiple
      requests for the same

      end user and device combination enables 1) the API consumer to receive a
      consistent user

      experience, and 2) higher click-through rates via better quality of
      results from the Bing

      APIs. Each user that uses your application on the device must have a
      unique, Bing generated

      client ID. If you do not include this header in the request, Bing
      generates an ID and returns

      it in the X-MSEdge-ClientID response header. The only time that you should
      NOT include this

      header in a request is the first time the user uses your app on that
      device. Use the client ID

      for each Bing API request that your app makes for this user on the device.
      Persist the client

      ID. To persist the ID in a browser app, use a persistent HTTP cookie to
      ensure the ID is used

      across all sessions. Do not use a session cookie. For other apps such as
      mobile apps, use the

      device's persistent storage to persist the ID. The next time the user uses
      your app on that

      device, get the client ID that you persisted. Bing responses may or may
      not include this

      header. If the response includes this header, capture the client ID and
      use it for all

      subsequent Bing requests for the user on that device. If you include the
      X-MSEdge-ClientID,

      you must not include cookies in the request.
    optional: true
    syntax:
      content: 'clientId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.clientIp'
    name: clientIp
    fullName: clientIp
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The IPv4 or IPv6 address of the client device. The IP address is used to
      discover the user's

      location. Bing uses the location information to determine safe search
      behavior. Although

      optional, you are encouraged to always specify this header and the
      X-Search-Location header.

      Do not obfuscate the address (for example, by changing the last octet to
      0). Obfuscating the

      address results in the location not being anywhere near the device's
      actual location, which

      may result in Bing serving erroneous results.
    optional: true
    syntax:
      content: 'clientIp?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.color'
    name: color
    fullName: color
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following color options. ColorOnly: Return color
      images. Monochrome:

      Return black and white images. Return images with one of the following
      dominant colors: Black,

      Blue, Brown, Gray, Green, Orange, Pink, Purple, Red, Teal, White, Yellow.
      Possible values

      include: 'ColorOnly', 'Monochrome', 'Black', 'Blue', 'Brown', 'Gray',
      'Green', 'Orange',

      'Pink', 'Purple', 'Red', 'Teal', 'White', 'Yellow'
    optional: true
    syntax:
      content: 'color?: ImageColor'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageColor'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.count'
    name: count
    fullName: count
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of images to return in the response. The actual number
      delivered may be less than

      requested. The default is 35. The maximum value is 150. You use this
      parameter along with the

      offset parameter to page results.For example, if your user interface
      displays 20 images per

      page, set count to 20 and offset to 0 to get the first page of results.For
      each subsequent

      page, increment offset by 20 (for example, 0, 20, 40). Use this parameter
      only with the Image

      Search API.Do not specify this parameter when calling the Insights,
      Trending Images, or Web

      Search APIs.
    optional: true
    syntax:
      content: 'count?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.countryCode
    name: countryCode
    fullName: countryCode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A 2-character country code of the country where the results come from. For
      a list of possible

      values, see [Market

      Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).

      If you set this parameter, you must also specify the

      [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)

      header. Bing uses the first supported language it finds from the languages
      list, and combine

      that language with the country code that you specify to determine the
      market to return results

      for. If the languages list does not include a supported language, Bing
      finds the closest

      language and market that supports the request, or it may use an aggregated
      or default market

      for the results instead of a specified one. You should use this query
      parameter and the

      Accept-Language query parameter only if you specify multiple languages;
      otherwise, you should

      use the mkt and setLang query parameters. This parameter and the

      [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)

      query parameter are mutually exclusiveâ€”do not specify both.
    optional: true
    syntax:
      content: 'countryCode?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.freshness'
    name: freshness
    fullName: freshness
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following discovery options. Day: Return images
      discovered by Bing within

      the last 24 hours. Week: Return images discovered by Bing within the last
      7 days. Month:

      Return images discovered by Bing within the last 30 days. Possible values
      include: 'Day',

      'Week', 'Month'
    optional: true
    syntax:
      content: 'freshness?: Freshness'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.Freshness'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.height'
    name: height
    fullName: height
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have the specified height, in pixels. You may use this
      filter with the size

      filter to return small images that have a height of 150 pixels.
    optional: true
    syntax:
      content: 'height?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An ID that uniquely identifies an image. Use this parameter to ensure that
      the specified image

      is the first image in the list of images that Bing returns. The

      [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)

      object's imageId field contains the ID that you set this parameter to.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.imageContent
    name: imageContent
    fullName: imageContent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following content types. Face: Return images that
      show only a person's

      face. Portrait: Return images that show only a person's head and
      shoulders. Possible values

      include: 'Face', 'Portrait'
    optional: true
    syntax:
      content: 'imageContent?: ImageContent'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageContent'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.imageType'
    name: imageType
    fullName: imageType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following image types. AnimatedGif: Return only
      animated GIFs. Clipart:

      Return only clip art images. Line: Return only line drawings. Photo:
      Return only

      photographs(excluding line drawings, animated Gifs, and clip art).
      Shopping: Return only

      images that contain items where Bing knows of a merchant that is selling
      the items. This

      option is valid in the en - US market only.Transparent: Return only images
      with a transparent

      background. Possible values include: 'AnimatedGif', 'Clipart', 'Line',
      'Photo', 'Shopping',

      'Transparent'
    optional: true
    syntax:
      content: 'imageType?: ImageType'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageType'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.license'
    name: license
    fullName: license
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following license types. All: Do not filter by
      license type.Specifying

      this value is the same as not specifying the license parameter. Any:
      Return images that are

      under any license type. The response doesn't include images that do not
      specify a license or

      the license is unknown. Public: Return images where the creator has waived
      their exclusive

      rights, to the fullest extent allowed by law. Share: Return images that
      may be shared with

      others. Changing or editing the image might not be allowed. Also,
      modifying, sharing, and

      using the image for commercial purposes might not be allowed. Typically,
      this option returns

      the most images. ShareCommercially: Return images that may be shared with
      others for personal

      or commercial purposes. Changing or editing the image might not be
      allowed. Modify: Return

      images that may be modified, shared, and used. Changing or editing the
      image might not be

      allowed. Modifying, sharing, and using the image for commercial purposes
      might not be allowed.

      ModifyCommercially: Return images that may be modified, shared, and used
      for personal or

      commercial purposes. Typically, this option returns the fewest images. For
      more information

      about these license types, see [Filter Images By License

      Type](http://go.microsoft.com/fwlink/?LinkId=309768). Possible values
      include: 'All', 'Any',

      'Public', 'Share', 'ShareCommercially', 'Modify', 'ModifyCommercially'
    optional: true
    syntax:
      content: 'license?: ImageLicense'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageLicense'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A semicolon-delimited list of key/value pairs that describe the client's
      geographical

      location. Bing uses the location information to determine safe search
      behavior and to return

      relevant local content. Specify the key/value pair as <key>:<value>. The
      following are the

      keys that you use to specify the user's location. lat (required): The
      latitude of the client's

      location, in degrees. The latitude must be greater than or equal to -90.0
      and less than or

      equal to +90.0. Negative values indicate southern latitudes and positive
      values indicate

      northern latitudes. long (required): The longitude of the client's
      location, in degrees. The

      longitude must be greater than or equal to -180.0 and less than or equal
      to +180.0. Negative

      values indicate western longitudes and positive values indicate eastern
      longitudes. re

      (required): The radius, in meters, which specifies the horizontal accuracy
      of the coordinates.

      Pass the value returned by the device's location service. Typical values
      might be 22m for

      GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP
      lookup. ts

      (optional): The UTC UNIX timestamp of when the client was at the location.
      (The UNIX timestamp

      is the number of seconds since January 1, 1970.) head (optional): The
      client's relative

      heading or direction of travel. Specify the direction of travel as degrees
      from 0 through 360,

      counting clockwise relative to true north. Specify this key only if the sp
      key is nonzero. sp

      (optional): The horizontal velocity (speed), in meters per second, that
      the client device is

      traveling. alt (optional): The altitude of the client device, in meters.
      are (optional): The

      radius, in meters, that specifies the vertical accuracy of the
      coordinates. Specify this key

      only if you specify the alt key. Although many of the keys are optional,
      the more information

      that you provide, the more accurate the location results are. Although
      optional, you are

      encouraged to always specify the user's geographical location. Providing
      the location is

      especially important if the client's IP address does not accurately
      reflect the user's

      physical location (for example, if the client uses VPN). For optimal
      results, you should

      include this header and the X-MSEdge-ClientIP header, but at a minimum,
      you should include

      this header.
    optional: true
    syntax:
      content: 'location?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.market'
    name: market
    fullName: market
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The market where the results come from. Typically, mkt is the country
      where the user is making

      the request from. However, it could be a different country if the user is
      not located in a

      country where Bing delivers results. The market must be in the form
      <language code>-<country

      code>. For example, en-US. The string is case insensitive. For a list of
      possible market

      values, see [Market

      Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).

      NOTE: If known, you are encouraged to always specify the market.
      Specifying the market helps

      Bing route the request and return an appropriate and optimal response. If
      you specify a market

      that is not listed in [Market

      Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes),

      Bing uses a best fit market code based on an internal mapping that is
      subject to change. This

      parameter and the

      [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)

      query parameter are mutually exclusiveâ€”do not specify both.
    optional: true
    syntax:
      content: 'market?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxFileSize
    name: maxFileSize
    fullName: maxFileSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that are less than or equal to the specified file size. The
      maximum file size

      that you may specify is 520,192 bytes. If you specify a larger value, the
      API uses 520,192. It

      is possible that the response may include images that are slightly larger
      than the specified

      maximum. You may specify this filter and minFileSize to filter images
      within a range of file

      sizes.
    optional: true
    syntax:
      content: 'maxFileSize?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxHeight'
    name: maxHeight
    fullName: maxHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have a height that is less than or equal to the
      specified height. Specify

      the height in pixels. You may specify this filter and minHeight to filter
      images within a

      range of heights. This filter and the height filter are mutually
      exclusive.
    optional: true
    syntax:
      content: 'maxHeight?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.maxWidth'
    name: maxWidth
    fullName: maxWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have a width that is less than or equal to the
      specified width. Specify the

      width in pixels. You may specify this filter and maxWidth to filter images
      within a range of

      widths. This filter and the width filter are mutually exclusive.
    optional: true
    syntax:
      content: 'maxWidth?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minFileSize
    name: minFileSize
    fullName: minFileSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that are greater than or equal to the specified file size.
      The maximum file size

      that you may specify is 520,192 bytes. If you specify a larger value, the
      API uses 520,192. It

      is possible that the response may include images that are slightly smaller
      than the specified

      minimum. You may specify this filter and maxFileSize to filter images
      within a range of file

      sizes.
    optional: true
    syntax:
      content: 'minFileSize?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minHeight'
    name: minHeight
    fullName: minHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have a height that is greater than or equal to the
      specified height.

      Specify the height in pixels. You may specify this filter and maxHeight to
      filter images

      within a range of heights. This filter and the height filter are mutually
      exclusive.
    optional: true
    syntax:
      content: 'minHeight?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.minWidth'
    name: minWidth
    fullName: minWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have a width that is greater than or equal to the
      specified width. Specify

      the width in pixels. You may specify this filter and maxWidth to filter
      images within a range

      of widths. This filter and the width filter are mutually exclusive.
    optional: true
    syntax:
      content: 'minWidth?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The zero-based offset that indicates the number of images to skip before
      returning images. The

      default is 0. The offset should be less than

      ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#totalestimatedmatches)

      - count). Use this parameter along with the count parameter to page
      results. For example, if

      your user interface displays 20 images per page, set count to 20 and
      offset to 0 to get the

      first page of results. For each subsequent page, increment offset by 20
      (for example, 0, 20,

      40). It is possible for multiple pages to include some overlap in results.
      To prevent

      duplicates, see

      [nextOffset](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#nextoffset).

      Use this parameter only with the Image API. Do not specify this parameter
      when calling the

      Trending Images API or the Web Search API.
    optional: true
    syntax:
      content: 'offset?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: >-
      @azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.safeSearch'
    name: safeSearch
    fullName: safeSearch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images for adult content. The following are the possible filter
      values. Off: May return

      images with adult content. If the request is through the Image Search API,
      the response

      includes thumbnail images that are clear (non-fuzzy). However, if the
      request is through the

      Web Search API, the response includes thumbnail images that are pixelated
      (fuzzy). Moderate:

      If the request is through the Image Search API, the response doesn't
      include images with adult

      content. If the request is through the Web Search API, the response may
      include images with

      adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not
      return images with

      adult content. The default is Moderate. If the request comes from a market
      that Bing's adult

      policy requires that safeSearch is set to Strict, Bing ignores the
      safeSearch value and uses

      Strict. If you use the site: query operator, there is the chance that the
      response may contain

      adult content regardless of what the safeSearch query parameter is set to.
      Use site: only if

      you are aware of the content on the site and your scenario supports the
      possibility of adult

      content. Possible values include: 'Off', 'Moderate', 'Strict'
    optional: true
    syntax:
      content: 'safeSearch?: SafeSearch'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.SafeSearch'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.setLang'
    name: setLang
    fullName: setLang
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The language to use for user interface strings. Specify the language using
      the ISO 639-1

      2-letter language code. For example, the language code for English is EN.
      The default is EN

      (English). Although optional, you should always specify the language.
      Typically, you set

      setLang to the same language specified by mkt unless the user wants the
      user interface strings

      displayed in a different language. This parameter and the

      [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)

      header are mutually exclusive; do not specify both. A user interface
      string is a string that's

      used as a label in a user interface. There are few user interface strings
      in the JSON response

      objects. Also, any links to Bing.com properties in the response objects
      apply the specified

      language.
    optional: true
    syntax:
      content: 'setLang?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.size'
    name: size
    fullName: size
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images by the following sizes. All: Do not filter by size.
      Specifying this value is the

      same as not specifying the size parameter. Small: Return images that are
      less than 200x200

      pixels. Medium: Return images that are greater than or equal to 200x200
      pixels but less than

      500x500 pixels. Large: Return images that are 500x500 pixels or larger.
      Wallpaper: Return

      wallpaper images. You may use this parameter along with the height or
      width parameters. For

      example, you may use height and size to request small images that are 150
      pixels tall.

      Possible values include: 'All', 'Small', 'Medium', 'Large', 'Wallpaper'
    optional: true
    syntax:
      content: 'size?: ImageSize'
      return:
        type:
          - '@azure/cognitiveservices-imagesearch.ImageSize'
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The user agent originating the request. Bing uses the user agent to
      provide mobile users with

      an optimized experience. Although optional, you are encouraged to always
      specify this header.

      The user-agent should be the same string that any commonly used browser
      sends. For information

      about user agents, see [RFC
      2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The

      following are examples of user-agent strings. Windows Phone: Mozilla/5.0
      (compatible; MSIE

      10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA;
      Lumia 822). Android:

      Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build /
      GINGERBREAD) AppleWebKit /

      533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone:
      Mozilla / 5.0 (iPhone;

      CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko)
      Mobile / 10B142

      iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT
      6.3; WOW64; Trident /

      7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0
      like Mac OS X)

      AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465
      Safari / 9537.53
    optional: true
    syntax:
      content: 'userAgent?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImagesSearchOptionalParams.width'
    name: width
    fullName: width
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Filter images that have the specified width, in pixels. You may use this
      filter with the size

      filter to return small images that have a width of 150 pixels.
    optional: true
    syntax:
      content: 'width?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-imagesearch'
references:
  - uid: '@azure/cognitiveservices-imagesearch.ImageAspect'
    name: ImageAspect
    spec.typeScript:
      - name: ImageAspect
        fullName: ImageAspect
        uid: '@azure/cognitiveservices-imagesearch.ImageAspect'
  - uid: '@azure/cognitiveservices-imagesearch.ImageColor'
    name: ImageColor
    spec.typeScript:
      - name: ImageColor
        fullName: ImageColor
        uid: '@azure/cognitiveservices-imagesearch.ImageColor'
  - uid: '@azure/cognitiveservices-imagesearch.Freshness'
    name: Freshness
    spec.typeScript:
      - name: Freshness
        fullName: Freshness
        uid: '@azure/cognitiveservices-imagesearch.Freshness'
  - uid: '@azure/cognitiveservices-imagesearch.ImageContent'
    name: ImageContent
    spec.typeScript:
      - name: ImageContent
        fullName: ImageContent
        uid: '@azure/cognitiveservices-imagesearch.ImageContent'
  - uid: '@azure/cognitiveservices-imagesearch.ImageType'
    name: ImageType
    spec.typeScript:
      - name: ImageType
        fullName: ImageType
        uid: '@azure/cognitiveservices-imagesearch.ImageType'
  - uid: '@azure/cognitiveservices-imagesearch.ImageLicense'
    name: ImageLicense
    spec.typeScript:
      - name: ImageLicense
        fullName: ImageLicense
        uid: '@azure/cognitiveservices-imagesearch.ImageLicense'
  - uid: '@azure/cognitiveservices-imagesearch.SafeSearch'
    name: SafeSearch
    spec.typeScript:
      - name: SafeSearch
        fullName: SafeSearch
        uid: '@azure/cognitiveservices-imagesearch.SafeSearch'
  - uid: '@azure/cognitiveservices-imagesearch.ImageSize'
    name: ImageSize
    spec.typeScript:
      - name: ImageSize
        fullName: ImageSize
        uid: '@azure/cognitiveservices-imagesearch.ImageSize'
