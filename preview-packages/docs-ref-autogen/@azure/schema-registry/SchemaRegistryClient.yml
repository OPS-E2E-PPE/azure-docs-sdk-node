### YamlMime:TSType
name: SchemaRegistryClient
uid: '@azure/schema-registry.SchemaRegistryClient'
package: '@azure/schema-registry'
summary: Client for Azure Schema Registry service.
fullName: SchemaRegistryClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'SchemaRegistryClient(string, TokenCredential, SchemaRegistryClientOptions)'
    uid: '@azure/schema-registry.SchemaRegistryClient.constructor'
    package: '@azure/schema-registry'
    summary: Creates a new client for Azure Schema Registry service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SchemaRegistryClient(endpoint: string, credential: TokenCredential,
        options?: SchemaRegistryClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: |-
            The Schema Registry service endpoint URL, for example
                            https://mynamespace.servicebus.windows.net.
        - id: credential
          type: TokenCredential
          description: Credential to authenticate requests to the service.
        - id: options
          type: <xref uid="@azure/schema-registry.SchemaRegistryClientOptions" />
          description: |
            Options to configure API requests to the service.
properties:
  - name: endpoint
    uid: '@azure/schema-registry.SchemaRegistryClient.endpoint'
    package: '@azure/schema-registry'
    summary: The Schema Registry service endpoint URL.
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
methods:
  - name: 'getSchemaById(string, GetSchemaByIdOptions)'
    uid: '@azure/schema-registry.SchemaRegistryClient.getSchemaById'
    package: '@azure/schema-registry'
    summary: |-
      Gets the ID of an existing schema with matching name, group, type, and
      content.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSchemaById(id: string, options?: GetSchemaByIdOptions)'
      parameters:
        - id: id
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/schema-registry.GetSchemaByIdOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/schema-registry.Schema" />&gt;
        description: Matched schema's ID.
  - name: 'getSchemaId(SchemaDescription, GetSchemaIdOptions)'
    uid: '@azure/schema-registry.SchemaRegistryClient.getSchemaId'
    package: '@azure/schema-registry'
    summary: |-
      Gets the ID of an existing schema with matching name, group, type, and
      content.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSchemaId(schema: SchemaDescription, options?:
        GetSchemaIdOptions)
      parameters:
        - id: schema
          type: <xref uid="@azure/schema-registry.SchemaDescription" />
          description: Schema to match.
        - id: options
          type: <xref uid="@azure/schema-registry.GetSchemaIdOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/schema-registry.SchemaId" />&gt;
        description: Matched schema's ID.
  - name: 'registerSchema(SchemaDescription, RegisterSchemaOptions)'
    uid: '@azure/schema-registry.SchemaRegistryClient.registerSchema'
    package: '@azure/schema-registry'
    summary: >
      Registers a new schema and returns its ID.

      If schema of specified name does not exist in the specified group, a
      schema

      is created at version 1. If schema of specified name exists already in

      specified group, schema is created at latest version + 1.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function registerSchema(schema: SchemaDescription, options?:
        RegisterSchemaOptions)
      parameters:
        - id: schema
          type: <xref uid="@azure/schema-registry.SchemaDescription" />
          description: Schema to register.
        - id: options
          type: <xref uid="@azure/schema-registry.RegisterSchemaOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/schema-registry.SchemaId" />&gt;
        description: Registered schema's ID.
