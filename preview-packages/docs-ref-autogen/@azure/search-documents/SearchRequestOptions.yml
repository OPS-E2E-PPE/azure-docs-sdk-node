### YamlMime:TSType
name: SearchRequestOptions
uid: '@azure/search-documents.SearchRequestOptions'
package: '@azure/search-documents'
summary: >-
  Parameters for filtering, sorting, faceting, paging, and other search query
  behaviors.
fullName: SearchRequestOptions<Fields>
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: facets
    uid: '@azure/search-documents.SearchRequestOptions.facets'
    package: '@azure/search-documents'
    summary: >-
      The list of facet expressions to apply to the search query. Each facet
      expression contains a

      field name, optionally followed by a comma-separated list of name:value
      pairs.
    fullName: facets
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'facets?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: filter
    uid: '@azure/search-documents.SearchRequestOptions.filter'
    package: '@azure/search-documents'
    summary: The OData $filter expression to apply to the search query.
    fullName: filter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'filter?: string'
      return:
        type: string
        description: ''
  - name: highlightFields
    uid: '@azure/search-documents.SearchRequestOptions.highlightFields'
    package: '@azure/search-documents'
    summary: >-
      The comma-separated list of field names to use for hit highlights. Only
      searchable fields can

      be used for hit highlighting.
    fullName: highlightFields
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightFields?: string'
      return:
        type: string
        description: ''
  - name: highlightPostTag
    uid: '@azure/search-documents.SearchRequestOptions.highlightPostTag'
    package: '@azure/search-documents'
    summary: >-
      A string tag that is appended to hit highlights. Must be set with
      highlightPreTag. Default is

      &lt;/em&gt;.
    fullName: highlightPostTag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightPostTag?: string'
      return:
        type: string
        description: ''
  - name: highlightPreTag
    uid: '@azure/search-documents.SearchRequestOptions.highlightPreTag'
    package: '@azure/search-documents'
    summary: >-
      A string tag that is prepended to hit highlights. Must be set with
      highlightPostTag. Default

      is &lt;em&gt;.
    fullName: highlightPreTag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightPreTag?: string'
      return:
        type: string
        description: ''
  - name: includeTotalCount
    uid: '@azure/search-documents.SearchRequestOptions.includeTotalCount'
    package: '@azure/search-documents'
    summary: >-
      A value that specifies whether to fetch the total count of results.
      Default is false. Setting

      this value to true may have a performance impact. Note that the count
      returned is an

      approximation.
    fullName: includeTotalCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeTotalCount?: boolean'
      return:
        type: boolean
        description: ''
  - name: minimumCoverage
    uid: '@azure/search-documents.SearchRequestOptions.minimumCoverage'
    package: '@azure/search-documents'
    summary: >-
      A number between 0 and 100 indicating the percentage of the index that
      must be covered by a

      search query in order for the query to be reported as a success. This
      parameter can be useful

      for ensuring search availability even for services with only one replica.
      The default is 100.
    fullName: minimumCoverage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minimumCoverage?: number'
      return:
        type: number
        description: ''
  - name: orderBy
    uid: '@azure/search-documents.SearchRequestOptions.orderBy'
    package: '@azure/search-documents'
    summary: >-
      The list of OData $orderby expressions by which to sort the results. Each

      expression can be either a field name or a call to either the
      geo.distance() or the

      search.score() functions. Each expression can be followed by asc to
      indicate ascending, or

      desc to indicate descending. The default is ascending order. Ties will be
      broken by the match

      scores of documents. If no $orderby is specified, the default sort order
      is descending by

      document match score. There can be at most 32 $orderby clauses.
    fullName: orderBy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'orderBy?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: queryType
    uid: '@azure/search-documents.SearchRequestOptions.queryType'
    package: '@azure/search-documents'
    summary: >-
      A value that specifies the syntax of the search query. The default is
      'simple'. Use 'full' if

      your query uses the Lucene query syntax. Possible values include:
      'simple', 'full'
    fullName: queryType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'queryType?: QueryType'
      return:
        type: <xref uid="@azure/search-documents.QueryType" />
        description: ''
  - name: scoringParameters
    uid: '@azure/search-documents.SearchRequestOptions.scoringParameters'
    package: '@azure/search-documents'
    summary: >-
      The list of parameter values to be used in scoring functions (for example,

      referencePointParameter) using the format name-values. For example, if the
      scoring profile

      defines a function with a parameter called 'mylocation' the parameter
      string would be

      "mylocation--122.2,44.8" (without the quotes).
    fullName: scoringParameters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scoringParameters?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: scoringProfile
    uid: '@azure/search-documents.SearchRequestOptions.scoringProfile'
    package: '@azure/search-documents'
    summary: >-
      The name of a scoring profile to evaluate match scores for matching
      documents in order to sort

      the results.
    fullName: scoringProfile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scoringProfile?: string'
      return:
        type: string
        description: ''
  - name: scoringStatistics
    uid: '@azure/search-documents.SearchRequestOptions.scoringStatistics'
    package: '@azure/search-documents'
    summary: >-
      A value that specifies whether we want to calculate scoring statistics
      (such as document

      frequency) globally for more consistent scoring, or locally, for lower
      latency. Possible

      values include: 'Local', 'Global'
    fullName: scoringStatistics
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scoringStatistics?: ScoringStatistics'
      return:
        type: <xref uid="@azure/search-documents.ScoringStatistics" />
        description: ''
  - name: searchFields
    uid: '@azure/search-documents.SearchRequestOptions.searchFields'
    package: '@azure/search-documents'
    summary: >-
      The comma-separated list of field names to which to scope the full-text
      search. When using

      fielded search (fieldName:searchExpression) in a full Lucene query, the
      field names of each

      fielded search expression take precedence over any field names listed in
      this parameter.
    fullName: searchFields
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'searchFields?: Fields[]'
      return:
        type: 'Fields[]'
        description: ''
  - name: searchMode
    uid: '@azure/search-documents.SearchRequestOptions.searchMode'
    package: '@azure/search-documents'
    summary: >-
      A value that specifies whether any or all of the search terms must be
      matched in order to

      count the document as a match. Possible values include: 'any', 'all'
    fullName: searchMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'searchMode?: SearchMode'
      return:
        type: <xref uid="@azure/search-documents.SearchMode" />
        description: ''
  - name: select
    uid: '@azure/search-documents.SearchRequestOptions.select'
    package: '@azure/search-documents'
    summary: |-
      The list of fields to retrieve. If unspecified, all fields marked as
      retrievable in the schema are included.
    fullName: select
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'select?: Fields[]'
      return:
        type: 'Fields[]'
        description: ''
  - name: sessionId
    uid: '@azure/search-documents.SearchRequestOptions.sessionId'
    package: '@azure/search-documents'
    summary: >-
      A value to be used to create a sticky session, which can help to get more
      consistent results.

      As long as the same sessionId is used, a best-effort attempt will be made
      to target the same

      replica set. Be wary that reusing the same sessionID values repeatedly can
      interfere with the

      load balancing of the requests across replicas and adversely affect the
      performance of the

      search service. The value used as sessionId cannot start with a '_'
      character.
    fullName: sessionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sessionId?: string'
      return:
        type: string
        description: ''
  - name: skip
    uid: '@azure/search-documents.SearchRequestOptions.skip'
    package: '@azure/search-documents'
    summary: >-
      The number of search results to skip. This value cannot be greater than
      100,000. If you need

      to scan documents in sequence, but cannot use skip due to this limitation,
      consider using

      orderby on a totally-ordered key and filter with a range query instead.
    fullName: skip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skip?: number'
      return:
        type: number
        description: ''
  - name: top
    uid: '@azure/search-documents.SearchRequestOptions.top'
    package: '@azure/search-documents'
    summary: >-
      The number of search results to retrieve. This can be used in conjunction
      with $skip to

      implement client-side paging of search results. If results are truncated
      due to server-side

      paging, the response will include a continuation token that can be used to
      issue another

      Search request for the next page of results.
    fullName: top
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'top?: number'
      return:
        type: number
        description: ''
