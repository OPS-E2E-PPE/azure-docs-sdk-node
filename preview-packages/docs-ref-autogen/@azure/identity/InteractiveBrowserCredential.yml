### YamlMime:TSType
name: InteractiveBrowserCredential
uid: '@azure/identity.InteractiveBrowserCredential'
package: '@azure/identity'
summary: >
  Enables authentication to Azure Active Directory inside of the web browser

  using the interactive login flow.

  This credential uses the [Authorization Code
  Flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow).

  On NodeJS, it will open a browser window while it listens for a redirect
  response from the authentication service.

  On browsers, it authenticates via popups. The `loginStyle` optional parameter
  can be set to `redirect` to authenticate by redirecting the user to an Azure
  secure login page, which then will redirect the user back to the web
  application where the authentication started.


  It's recommended that the AAD Applications used are configured to authenticate
  using Single Page Applications.

  More information here:
  [link](https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-app-registration#redirect-uri-msaljs-20-with-auth-code-flow).
fullName: InteractiveBrowserCredential
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      InteractiveBrowserCredential(InteractiveBrowserCredentialOptions |
      InteractiveBrowserCredentialBrowserOptions)
    uid: '@azure/identity.InteractiveBrowserCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of InteractiveBrowserCredential with the details
      needed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new InteractiveBrowserCredential(options?:
        InteractiveBrowserCredentialOptions |
        InteractiveBrowserCredentialBrowserOptions)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/identity.InteractiveBrowserCredentialOptions" /> |
            <xref
            uid="@azure/identity.InteractiveBrowserCredentialBrowserOptions" />
          description: >
            Options for configuring the client which makes the authentication
            requests.
methods:
  - name: 'authenticate(string | string[], GetTokenOptions)'
    uid: '@azure/identity.InteractiveBrowserCredential.authenticate'
    package: '@azure/identity'
    summary: >
      Authenticates with Azure Active Directory and returns an access token if

      successful.  If authentication cannot be performed at this time, this
      method may

      return null.  If an error occurs during authentication, an
      <xref:AuthenticationError>

      containing failure details will be thrown.

      If the token can't be retrieved silently, this method will require user
      interaction to retrieve the token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticate(scopes: string | string[], options?:
        GetTokenOptions)
      parameters:
        - id: scopes
          type: 'string | string[]'
          description: The list of scopes for which the token will have access.
        - id: options
          type: GetTokenOptions
          description: |
            The options used to configure any requests this
                             TokenCredential implementation might make.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/identity.AuthenticationRecord" /> |
          undefined&gt;
        description: ''
  - name: 'getToken(string | string[], GetTokenOptions)'
    uid: '@azure/identity.InteractiveBrowserCredential.getToken'
    package: '@azure/identity'
    summary: >
      Authenticates with Azure Active Directory and returns an access token if

      successful.  If authentication cannot be performed at this time, this
      method may

      return null.  If an error occurs during authentication, an
      <xref:AuthenticationError>

      containing failure details will be thrown.

      If the user provided the option `disableAutomaticAuthentication`,

      once the token can't be retrieved silently,

      this method won't attempt to request user interaction to retrieve the
      token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getToken(scopes: string | string[], options?: GetTokenOptions)'
      parameters:
        - id: scopes
          type: 'string | string[]'
          description: The list of scopes for which the token will have access.
        - id: options
          type: GetTokenOptions
          description: |
            The options used to configure any requests this
                           TokenCredential implementation might make.
      return:
        type: Promise&lt;AccessToken&gt;
        description: ''
