### YamlMime:TSType
name: DetectEntireResponse
uid: '@azure/ai-anomaly-detector.DetectEntireResponse'
package: '@azure/ai-anomaly-detector'
summary: ''
fullName: DetectEntireResponse
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: expectedValues
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.expectedValues'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      ExpectedValues contain expected value for each input point. The index of
      the array is consistent with the input series.
    fullName: expectedValues
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expectedValues: number[]'
      return:
        type: 'number[]'
        description: ''
  - name: isAnomaly
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.isAnomaly'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      IsAnomaly contains anomaly properties for each input point. True means an
      anomaly either negative or positive has been detected. The index of the
      array is consistent with the input series.
    fullName: isAnomaly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isAnomaly: boolean[]'
      return:
        type: 'boolean[]'
        description: ''
  - name: isNegativeAnomaly
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.isNegativeAnomaly'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      IsNegativeAnomaly contains anomaly status in negative direction for each
      input point. True means a negative anomaly has been detected. A negative
      anomaly means the point is detected as an anomaly and its real value is
      smaller than the expected one. The index of the array is consistent with
      the input series.
    fullName: isNegativeAnomaly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isNegativeAnomaly: boolean[]'
      return:
        type: 'boolean[]'
        description: ''
  - name: isPositiveAnomaly
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.isPositiveAnomaly'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      IsPositiveAnomaly contain anomaly status in positive direction for each
      input point. True means a positive anomaly has been detected. A positive
      anomaly means the point is detected as an anomaly and its real value is
      larger than the expected one. The index of the array is consistent with
      the input series.
    fullName: isPositiveAnomaly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isPositiveAnomaly: boolean[]'
      return:
        type: 'boolean[]'
        description: ''
  - name: lowerMargins
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.lowerMargins'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      LowerMargins contain lower margin of each input point. LowerMargin is used
      to calculate lowerBoundary, which equals to expectedValue - (100 -
      marginScale)*lowerMargin. Points between the boundary can be marked as
      normal ones in client side. The index of the array is consistent with the
      input series.
    fullName: lowerMargins
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lowerMargins: number[]'
      return:
        type: 'number[]'
        description: ''
  - name: period
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.period'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Frequency extracted from the series, zero means no recurrent pattern has
      been found.
    fullName: period
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'period: number'
      return:
        type: number
        description: ''
  - name: upperMargins
    uid: '@azure/ai-anomaly-detector.DetectEntireResponse.upperMargins'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      UpperMargins contain upper margin of each input point. UpperMargin is used
      to calculate upperBoundary, which equals to expectedValue + (100 -
      marginScale)*upperMargin. Anomalies in response can be filtered by
      upperBoundary and lowerBoundary. By adjusting marginScale value, less
      significant anomalies can be filtered in client side. The index of the
      array is consistent with the input series.
    fullName: upperMargins
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upperMargins: number[]'
      return:
        type: 'number[]'
        description: ''
