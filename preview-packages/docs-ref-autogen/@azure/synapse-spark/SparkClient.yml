### YamlMime:TSType
name: SparkClient
uid: '@azure/synapse-spark.SparkClient'
package: '@azure/synapse-spark'
summary: ''
fullName: SparkClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SparkClient(TokenCredential | ServiceClientCredentials, string, string,
      SparkClientOptionalParams)
    uid: '@azure/synapse-spark.SparkClient.constructor'
    package: '@azure/synapse-spark'
    summary: Initializes a new instance of the SparkClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SparkClient(credentials: TokenCredential | ServiceClientCredentials,
        endpoint: string, sparkPoolName: string, options?:
        SparkClientOptionalParams)
      parameters:
        - id: credentials
          type: TokenCredential | ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: endpoint
          type: string
          description: |-
            The workspace development endpoint, for example
                            https://myworkspace.dev.azuresynapse.net.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool.
        - id: options
          type: <xref uid="@azure/synapse-spark.SparkClientOptionalParams" />
          description: |
            The parameter options
properties:
  - name: endpoint
    uid: '@azure/synapse-spark.SparkClient.endpoint'
    package: '@azure/synapse-spark'
    summary: ''
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
  - name: livyApiVersion
    uid: '@azure/synapse-spark.SparkClient.livyApiVersion'
    package: '@azure/synapse-spark'
    summary: ''
    fullName: livyApiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'livyApiVersion: string'
      return:
        type: string
        description: ''
  - name: sparkBatch
    uid: '@azure/synapse-spark.SparkClient.sparkBatch'
    package: '@azure/synapse-spark'
    summary: ''
    fullName: sparkBatch
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sparkBatch: SparkBatchOperation'
      return:
        type: <xref uid="@azure/synapse-spark.SparkBatchOperation" />
        description: ''
  - name: sparkPoolName
    uid: '@azure/synapse-spark.SparkClient.sparkPoolName'
    package: '@azure/synapse-spark'
    summary: ''
    fullName: sparkPoolName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sparkPoolName: string'
      return:
        type: string
        description: ''
  - name: sparkSession
    uid: '@azure/synapse-spark.SparkClient.sparkSession'
    package: '@azure/synapse-spark'
    summary: ''
    fullName: sparkSession
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sparkSession: SparkSessionOperation'
      return:
        type: <xref uid="@azure/synapse-spark.SparkSessionOperation" />
        description: ''
methods:
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/synapse-spark.SparkClient.sendOperationRequest'
    package: '@azure/synapse-spark'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/synapse-spark.SparkClient.sendRequest'
    package: '@azure/synapse-spark'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: <xref uid="@azure/synapse-spark.SparkClientContext" />
