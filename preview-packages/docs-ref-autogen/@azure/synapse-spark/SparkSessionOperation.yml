### YamlMime:TSType
name: SparkSessionOperation
uid: '@azure/synapse-spark.SparkSessionOperation'
package: '@azure/synapse-spark'
summary: Class representing a SparkSession.
fullName: SparkSessionOperation
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SparkSessionOperation(SparkClient)
    uid: '@azure/synapse-spark.SparkSessionOperation.constructor'
    package: '@azure/synapse-spark'
    summary: Initialize a new instance of the class SparkSession class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SparkSessionOperation(client: SparkClient)'
      parameters:
        - id: client
          type: <xref uid="@azure/synapse-spark.SparkClient" />
          description: |
            Reference to the service client
methods:
  - name: 'cancelSparkSession(number, coreHttp.OperationOptions)'
    uid: '@azure/synapse-spark.SparkSessionOperation.cancelSparkSession'
    package: '@azure/synapse-spark'
    summary: Cancels a running spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelSparkSession(sessionId: number, options?:
        coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'cancelSparkStatement(number, number, coreHttp.OperationOptions)'
    uid: '@azure/synapse-spark.SparkSessionOperation.cancelSparkStatement'
    package: '@azure/synapse-spark'
    summary: Kill a statement within a session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelSparkStatement(sessionId: number, statementId: number,
        options?: coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionCancelSparkStatementResponse"
          />&gt;
        description: ''
  - name: >-
      createSparkSession(SparkSessionOptions,
      SparkSessionCreateSparkSessionOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperation.createSparkSession'
    package: '@azure/synapse-spark'
    summary: Create new spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSparkSession(sparkSessionOptions: SparkSessionOptions,
        options?: SparkSessionCreateSparkSessionOptionalParams)
      parameters:
        - id: sparkSessionOptions
          type: <xref uid="@azure/synapse-spark.SparkSessionOptions" />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionCreateSparkSessionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionCreateSparkSessionResponse"
          />&gt;
        description: ''
  - name: >-
      createSparkStatement(number, SparkStatementOptions,
      coreHttp.OperationOptions)
    uid: '@azure/synapse-spark.SparkSessionOperation.createSparkStatement'
    package: '@azure/synapse-spark'
    summary: Create statement within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSparkStatement(sessionId: number, sparkStatementOptions:
        SparkStatementOptions, options?: coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: sparkStatementOptions
          type: <xref uid="@azure/synapse-spark.SparkStatementOptions" />
          description: Livy compatible batch job request payload.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionCreateSparkStatementResponse"
          />&gt;
        description: ''
  - name: 'getSparkSession(number, SparkSessionGetSparkSessionOptionalParams)'
    uid: '@azure/synapse-spark.SparkSessionOperation.getSparkSession'
    package: '@azure/synapse-spark'
    summary: Gets a single spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkSession(sessionId: number, options?:
        SparkSessionGetSparkSessionOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionGetSparkSessionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionGetSparkSessionResponse" />&gt;
        description: ''
  - name: getSparkSessions(SparkSessionGetSparkSessionsOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperation.getSparkSessions'
    package: '@azure/synapse-spark'
    summary: List all spark sessions which are running under a particular spark pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkSessions(options?:
        SparkSessionGetSparkSessionsOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionGetSparkSessionsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionGetSparkSessionsResponse" />&gt;
        description: ''
  - name: 'getSparkStatement(number, number, coreHttp.OperationOptions)'
    uid: '@azure/synapse-spark.SparkSessionOperation.getSparkStatement'
    package: '@azure/synapse-spark'
    summary: Gets a single statement within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkStatement(sessionId: number, statementId: number,
        options?: coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionGetSparkStatementResponse"
          />&gt;
        description: ''
  - name: 'getSparkStatements(number, coreHttp.OperationOptions)'
    uid: '@azure/synapse-spark.SparkSessionOperation.getSparkStatements'
    package: '@azure/synapse-spark'
    summary: Gets a list of statements within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkStatements(sessionId: number, options?:
        coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionGetSparkStatementsResponse"
          />&gt;
        description: ''
  - name: 'resetSparkSessionTimeout(number, coreHttp.OperationOptions)'
    uid: '@azure/synapse-spark.SparkSessionOperation.resetSparkSessionTimeout'
    package: '@azure/synapse-spark'
    summary: >-
      Sends a keep alive call to the current session to reset the session
      timeout.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetSparkSessionTimeout(sessionId: number, options?:
        coreHttp.OperationOptions)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="coreHttp.OperationOptions" />
          description: |
            The options parameters.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
